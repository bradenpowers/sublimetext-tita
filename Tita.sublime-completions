{
    "scope": "source.js",
    "completions": ["Titanium", "Ti.XML.NodeList", "bubbleParent", "length", {
        "trigger": "addEventListener()",
        "contents": "addEventListener(${0:name},${1:callback})"
    }, {
        "trigger": "applyProperties()",
        "contents": "applyProperties(${0:props})"
    }, {
        "trigger": "fireEvent()",
        "contents": "fireEvent(${0:name},${1:event})"
    }, {
        "trigger": "getBubbleParent()",
        "contents": "getBubbleParent()"
    }, {
        "trigger": "getLength()",
        "contents": "getLength()"
    }, {
        "trigger": "item()",
        "contents": "item(${0:index})"
    }, {
        "trigger": "removeEventListener()",
        "contents": "removeEventListener(${0:name},${1:callback})"
    }, {
        "trigger": "setBubbleParent()",
        "contents": "setBubbleParent(${0:bubbleParent})"
    }, "Ti.XML.Entity", "Ti.XML.Entity.ATTRIBUTE_NODE", "Ti.XML.Entity.CDATA_SECTION_NODE", "Ti.XML.Entity.COMMENT_NODE", "Ti.XML.Entity.DOCUMENT_FRAGMENT_NODE", "Ti.XML.Entity.DOCUMENT_NODE", "Ti.XML.Entity.DOCUMENT_TYPE_NODE", "Ti.XML.Entity.ELEMENT_NODE", "Ti.XML.Entity.ENTITY_NODE", "Ti.XML.Entity.ENTITY_REFERENCE_NODE", "Ti.XML.Entity.NOTATION_NODE", "Ti.XML.Entity.PROCESSING_INSTRUCTION_NODE", "Ti.XML.Entity.TEXT_NODE", "attributes", "childNodes", "firstChild", "lastChild", "localName", "namespaceURI", "nextSibling", "nodeName", "nodeType", "nodeValue", "notationName", "ownerDocument", "parentNode", "prefix", "previousSibling", "publicId", "systemId", "text", "textContent", {
        "trigger": "appendChild()",
        "contents": "appendChild(${0:newChild})"
    }, {
        "trigger": "cloneNode()",
        "contents": "cloneNode(${0:deep})"
    }, {
        "trigger": "getAttributes()",
        "contents": "getAttributes()"
    }, {
        "trigger": "getChildNodes()",
        "contents": "getChildNodes()"
    }, {
        "trigger": "getFirstChild()",
        "contents": "getFirstChild()"
    }, {
        "trigger": "getLastChild()",
        "contents": "getLastChild()"
    }, {
        "trigger": "getLocalName()",
        "contents": "getLocalName()"
    }, {
        "trigger": "getNamespaceURI()",
        "contents": "getNamespaceURI()"
    }, {
        "trigger": "getNextSibling()",
        "contents": "getNextSibling()"
    }, {
        "trigger": "getNodeName()",
        "contents": "getNodeName()"
    }, {
        "trigger": "getNodeType()",
        "contents": "getNodeType()"
    }, {
        "trigger": "getNodeValue()",
        "contents": "getNodeValue()"
    }, {
        "trigger": "getNotationName()",
        "contents": "getNotationName()"
    }, {
        "trigger": "getOwnerDocument()",
        "contents": "getOwnerDocument()"
    }, {
        "trigger": "getParentNode()",
        "contents": "getParentNode()"
    }, {
        "trigger": "getPrefix()",
        "contents": "getPrefix()"
    }, {
        "trigger": "getPreviousSibling()",
        "contents": "getPreviousSibling()"
    }, {
        "trigger": "getPublicId()",
        "contents": "getPublicId()"
    }, {
        "trigger": "getSystemId()",
        "contents": "getSystemId()"
    }, {
        "trigger": "getText()",
        "contents": "getText()"
    }, {
        "trigger": "getTextContent()",
        "contents": "getTextContent()"
    }, {
        "trigger": "hasAttributes()",
        "contents": "hasAttributes()"
    }, {
        "trigger": "hasChildNodes()",
        "contents": "hasChildNodes()"
    }, {
        "trigger": "insertBefore()",
        "contents": "insertBefore(${0:newChild},${1:refChild})"
    }, {
        "trigger": "isSupported()",
        "contents": "isSupported(${0:feature},${1:version})"
    }, {
        "trigger": "normalize()",
        "contents": "normalize()"
    }, {
        "trigger": "removeChild()",
        "contents": "removeChild(${0:oldChild})"
    }, {
        "trigger": "replaceChild()",
        "contents": "replaceChild(${0:newChild},${1:oldChild})"
    }, {
        "trigger": "setLocalName()",
        "contents": "setLocalName(${0:localName})"
    }, {
        "trigger": "setNodeValue()",
        "contents": "setNodeValue(${0:nodeValue})"
    }, {
        "trigger": "setPrefix()",
        "contents": "setPrefix(${0:prefix})"
    }, "Ti.Android.NotificationManager", "Ti.Android.NotificationManager.DEFAULT_ALL", "Ti.Android.NotificationManager.DEFAULT_LIGHTS", "Ti.Android.NotificationManager.DEFAULT_SOUND", "Ti.Android.NotificationManager.DEFAULT_VIBRATE", "Ti.Android.NotificationManager.FLAG_AUTO_CANCEL", "Ti.Android.NotificationManager.FLAG_INSISTENT", "Ti.Android.NotificationManager.FLAG_NO_CLEAR", "Ti.Android.NotificationManager.FLAG_ONGOING_EVENT", "Ti.Android.NotificationManager.FLAG_ONLY_ALERT_ONCE", "Ti.Android.NotificationManager.FLAG_SHOW_LIGHTS", "Ti.Android.NotificationManager.STREAM_DEFAULT", {
        "trigger": "cancel()",
        "contents": "cancel(${0:id})"
    }, {
        "trigger": "cancelAll()",
        "contents": "cancelAll()"
    }, {
        "trigger": "notify()",
        "contents": "notify(${0:id},${1:notification})"
    }, "CloudPostsResponse", "code", "error", "message", "meta", "posts", "success", "MapLocationType", "animate", "latitude", "latitudeDelta", "longitude", "longitudeDelta", "regionFit", "CloudSocialIntegrationsResponse", "users", "Ti.UI.iOS", "Ti.UI.iOS.AD_SIZE_LANDSCAPE", "Ti.UI.iOS.AD_SIZE_PORTRAIT", "Ti.UI.iOS.ANIMATION_CURVE_EASE_IN", "Ti.UI.iOS.ANIMATION_CURVE_EASE_IN_OUT", "Ti.UI.iOS.ANIMATION_CURVE_EASE_OUT", "Ti.UI.iOS.ANIMATION_CURVE_LINEAR", "Ti.UI.iOS.AUTODETECT_ADDRESS", "Ti.UI.iOS.AUTODETECT_ALL", "Ti.UI.iOS.AUTODETECT_CALENDAR", "Ti.UI.iOS.AUTODETECT_LINK", "Ti.UI.iOS.AUTODETECT_NONE", "Ti.UI.iOS.AUTODETECT_PHONE", "Ti.UI.iOS.BLEND_MODE_CLEAR", "Ti.UI.iOS.BLEND_MODE_COLOR", "Ti.UI.iOS.BLEND_MODE_COLOR_BURN", "Ti.UI.iOS.BLEND_MODE_COLOR_DODGE", "Ti.UI.iOS.BLEND_MODE_COPY", "Ti.UI.iOS.BLEND_MODE_DARKEN", "Ti.UI.iOS.BLEND_MODE_DESTINATION_ATOP", "Ti.UI.iOS.BLEND_MODE_DESTINATION_IN", "Ti.UI.iOS.BLEND_MODE_DESTINATION_OUT", "Ti.UI.iOS.BLEND_MODE_DESTINATION_OVER", "Ti.UI.iOS.BLEND_MODE_DIFFERENCE", "Ti.UI.iOS.BLEND_MODE_EXCLUSION", "Ti.UI.iOS.BLEND_MODE_HARD_LIGHT", "Ti.UI.iOS.BLEND_MODE_HUE", "Ti.UI.iOS.BLEND_MODE_LIGHTEN", "Ti.UI.iOS.BLEND_MODE_LUMINOSITY", "Ti.UI.iOS.BLEND_MODE_MULTIPLY", "Ti.UI.iOS.BLEND_MODE_NORMAL", "Ti.UI.iOS.BLEND_MODE_OVERLAY", "Ti.UI.iOS.BLEND_MODE_PLUS_DARKER", "Ti.UI.iOS.BLEND_MODE_PLUS_LIGHTER", "Ti.UI.iOS.BLEND_MODE_SATURATION", "Ti.UI.iOS.BLEND_MODE_SCREEN", "Ti.UI.iOS.BLEND_MODE_SOFT_LIGHT", "Ti.UI.iOS.BLEND_MODE_SOURCE_ATOP", "Ti.UI.iOS.BLEND_MODE_SOURCE_IN", "Ti.UI.iOS.BLEND_MODE_SOURCE_OUT", "Ti.UI.iOS.BLEND_MODE_XOR", "Ti.UI.iOS.COLOR_GROUP_TABLEVIEW_BACKGROUND", "Ti.UI.iOS.COLOR_SCROLLVIEW_BACKGROUND", "Ti.UI.iOS.COLOR_UNDER_PAGE_BACKGROUND", "Ti.UI.iOS.COLOR_VIEW_FLIPSIDE_BACKGROUND", "Ti.UI.iOS.WEBVIEW_NAVIGATIONTYPE_BACK_FORWARD", "Ti.UI.iOS.WEBVIEW_NAVIGATIONTYPE_FORM_RESUBMITTED", "Ti.UI.iOS.WEBVIEW_NAVIGATIONTYPE_FORM_SUBMITTED", "Ti.UI.iOS.WEBVIEW_NAVIGATIONTYPE_LINK_CLICKED", "Ti.UI.iOS.WEBVIEW_NAVIGATIONTYPE_OTHER", "Ti.UI.iOS.WEBVIEW_NAVIGATIONTYPE_RELOAD", {
        "trigger": "create3DMatrix()",
        "contents": "create3DMatrix(${0:parameters})"
    }, {
        "trigger": "createAdView()",
        "contents": "createAdView(${0:parameters})"
    }, {
        "trigger": "createCoverFlowView()",
        "contents": "createCoverFlowView(${0:parameters})"
    }, {
        "trigger": "createDocumentViewer()",
        "contents": "createDocumentViewer(${0:parameters})"
    }, {
        "trigger": "createTabbedBar()",
        "contents": "createTabbedBar(${0:parameters})"
    }, {
        "trigger": "createToolbar()",
        "contents": "createToolbar(${0:parameters})"
    }, "Ti.BlobStream", {
        "trigger": "close()",
        "contents": "close()"
    }, {
        "trigger": "isReadable()",
        "contents": "isReadable()"
    }, {
        "trigger": "isWriteable()",
        "contents": "isWriteable()"
    }, {
        "trigger": "read()",
        "contents": "read(${0:buffer},${1:offset},${2:length})"
    }, {
        "trigger": "write()",
        "contents": "write(${0:buffer},${1:offset},${2:length})"
    }, "Ti.UI.iPhone.ListViewStyle", "Ti.UI.iPhone.ListViewStyle.GROUPED", "Ti.UI.iPhone.ListViewStyle.PLAIN", "Ti.Cloud.Checkins", {
        "trigger": "create()",
        "contents": "create(${0:parameters},${1:callback})"
    }, {
        "trigger": "query()",
        "contents": "query(${0:parameters},${1:callback})"
    }, {
        "trigger": "remove()",
        "contents": "remove(${0:parameters},${1:callback})"
    }, {
        "trigger": "show()",
        "contents": "show(${0:parameters},${1:callback})"
    }, "Ti.Media.AudioPlayer", "Ti.Media.AudioPlayer.STATE_BUFFERING", "Ti.Media.AudioPlayer.STATE_INITIALIZED", "Ti.Media.AudioPlayer.STATE_PAUSED", "Ti.Media.AudioPlayer.STATE_PLAYING", "Ti.Media.AudioPlayer.STATE_STARTING", "Ti.Media.AudioPlayer.STATE_STOPPED", "Ti.Media.AudioPlayer.STATE_STOPPING", "Ti.Media.AudioPlayer.STATE_WAITING_FOR_DATA", "Ti.Media.AudioPlayer.STATE_WAITING_FOR_QUEUE", "allowBackground", "autoplay", "bitRate", "bufferSize", "idle", "paused", "playing", "progress", "state", "url", "volume", "waiting", {
        "trigger": "getAllowBackground()",
        "contents": "getAllowBackground()"
    }, {
        "trigger": "getAutoplay()",
        "contents": "getAutoplay()"
    }, {
        "trigger": "getBitRate()",
        "contents": "getBitRate()"
    }, {
        "trigger": "getBufferSize()",
        "contents": "getBufferSize()"
    }, {
        "trigger": "getIdle()",
        "contents": "getIdle()"
    }, {
        "trigger": "getPaused()",
        "contents": "getPaused()"
    }, {
        "trigger": "getPlaying()",
        "contents": "getPlaying()"
    }, {
        "trigger": "getProgress()",
        "contents": "getProgress()"
    }, {
        "trigger": "getState()",
        "contents": "getState()"
    }, {
        "trigger": "getUrl()",
        "contents": "getUrl()"
    }, {
        "trigger": "getVolume()",
        "contents": "getVolume()"
    }, {
        "trigger": "getWaiting()",
        "contents": "getWaiting()"
    }, {
        "trigger": "isPaused()",
        "contents": "isPaused()"
    }, {
        "trigger": "isPlaying()",
        "contents": "isPlaying()"
    }, {
        "trigger": "pause()",
        "contents": "pause()"
    }, {
        "trigger": "play()",
        "contents": "play()"
    }, {
        "trigger": "release()",
        "contents": "release()"
    }, {
        "trigger": "setBitRate()",
        "contents": "setBitRate(${0:bitRate})"
    }, {
        "trigger": "setBufferSize()",
        "contents": "setBufferSize(${0:bufferSize})"
    }, {
        "trigger": "setPaused()",
        "contents": "setPaused(${0:paused})"
    }, {
        "trigger": "setUrl()",
        "contents": "setUrl(${0:url})"
    }, {
        "trigger": "setVolume()",
        "contents": "setVolume(${0:volume})"
    }, {
        "trigger": "start()",
        "contents": "start()"
    }, {
        "trigger": "stateDescription()",
        "contents": "stateDescription(${0:state})"
    }, {
        "trigger": "stop()",
        "contents": "stop()"
    }, "Ti.Network", "Ti.Network.INADDR_ANY", "Ti.Network.NETWORK_LAN", "Ti.Network.NETWORK_MOBILE", "Ti.Network.NETWORK_NONE", "Ti.Network.NETWORK_UNKNOWN", "Ti.Network.NETWORK_WIFI", "Ti.Network.NOTIFICATION_TYPE_ALERT", "Ti.Network.NOTIFICATION_TYPE_BADGE", "Ti.Network.NOTIFICATION_TYPE_NEWSSTAND", "Ti.Network.NOTIFICATION_TYPE_SOUND", "Ti.Network.READ_MODE", "Ti.Network.READ_WRITE_MODE", "Ti.Network.SOCKET_CLOSED", "Ti.Network.SOCKET_CONNECTED", "Ti.Network.SOCKET_ERROR", "Ti.Network.SOCKET_INITIALIZED", "Ti.Network.SOCKET_LISTENING", "Ti.Network.TLS_VERSION_1_0", "Ti.Network.TLS_VERSION_1_1", "Ti.Network.TLS_VERSION_1_2", "Ti.Network.WRITE_MODE", "httpURLFormatter", "networkType", "networkTypeName", "online", "remoteDeviceUUID", "remoteNotificationTypes", "remoteNotificationsEnabled", {
        "trigger": "addConnectivityListener()",
        "contents": "addConnectivityListener(${0:callback})"
    }, {
        "trigger": "createBonjourBrowser()",
        "contents": "createBonjourBrowser(${0:serviceType},${1:domain},${2:parameters})"
    }, {
        "trigger": "createBonjourService()",
        "contents": "createBonjourService(${0:name},${1:type},${2:domain},${3:parameters})"
    }, {
        "trigger": "createHTTPClient()",
        "contents": "createHTTPClient(${0:parameters})"
    }, {
        "trigger": "createTCPSocket()",
        "contents": "createTCPSocket(${0:hostName},${1:port},${2:mode},${3:parameters})"
    }, {
        "trigger": "decodeURIComponent()",
        "contents": "decodeURIComponent(${0:value})"
    }, {
        "trigger": "encodeURIComponent()",
        "contents": "encodeURIComponent(${0:value})"
    }, {
        "trigger": "getHttpURLFormatter()",
        "contents": "getHttpURLFormatter()"
    }, {
        "trigger": "getNetworkType()",
        "contents": "getNetworkType()"
    }, {
        "trigger": "getNetworkTypeName()",
        "contents": "getNetworkTypeName()"
    }, {
        "trigger": "getOnline()",
        "contents": "getOnline()"
    }, {
        "trigger": "getRemoteDeviceUUID()",
        "contents": "getRemoteDeviceUUID()"
    }, {
        "trigger": "getRemoteNotificationTypes()",
        "contents": "getRemoteNotificationTypes()"
    }, {
        "trigger": "getRemoteNotificationsEnabled()",
        "contents": "getRemoteNotificationsEnabled()"
    }, {
        "trigger": "registerForPushNotifications()",
        "contents": "registerForPushNotifications(${0:config})"
    }, {
        "trigger": "removeConnectivityListener()",
        "contents": "removeConnectivityListener(${0:callback})"
    }, {
        "trigger": "setHttpURLFormatter()",
        "contents": "setHttpURLFormatter(${0:httpURLFormatter})"
    }, {
        "trigger": "unregisterForPushNotifications()",
        "contents": "unregisterForPushNotifications()"
    }, "Ti.XML.CDATASection", "data", {
        "trigger": "appendData()",
        "contents": "appendData(${0:arg})"
    }, {
        "trigger": "deleteData()",
        "contents": "deleteData(${0:offset},${1:count})"
    }, {
        "trigger": "getData()",
        "contents": "getData()"
    }, {
        "trigger": "insertData()",
        "contents": "insertData(${0:offset},${1:arg})"
    }, {
        "trigger": "replaceData()",
        "contents": "replaceData(${0:offset},${1:count},${2:arg})"
    }, {
        "trigger": "setData()",
        "contents": "setData(${0:data})"
    }, {
        "trigger": "splitText()",
        "contents": "splitText(${0:offset})"
    }, {
        "trigger": "substringData()",
        "contents": "substringData(${0:offset},${1:count})"
    }, "Ti.Calendar.Event", "alerts", "allDay", "availability", "begin", "end", "hasAlarm", "id", "isDetached", "location", "notes", "recurenceRule", "recurenceRules", "status", "title", {
        "trigger": "addRecurrenceRule()",
        "contents": "addRecurrenceRule(${0:rule})"
    }, {
        "trigger": "createAlert()",
        "contents": "createAlert(${0:data})"
    }, {
        "trigger": "createRecurenceRule()",
        "contents": "createRecurenceRule(${0:data})"
    }, {
        "trigger": "getAlerts()",
        "contents": "getAlerts()"
    }, {
        "trigger": "getAllDay()",
        "contents": "getAllDay()"
    }, {
        "trigger": "getAvailability()",
        "contents": "getAvailability()"
    }, {
        "trigger": "getBegin()",
        "contents": "getBegin()"
    }, {
        "trigger": "getEnd()",
        "contents": "getEnd()"
    }, {
        "trigger": "getHasAlarm()",
        "contents": "getHasAlarm()"
    }, {
        "trigger": "getId()",
        "contents": "getId()"
    }, {
        "trigger": "getIsDetached()",
        "contents": "getIsDetached()"
    }, {
        "trigger": "getLocation()",
        "contents": "getLocation()"
    }, {
        "trigger": "getNotes()",
        "contents": "getNotes()"
    }, {
        "trigger": "getRecurenceRule()",
        "contents": "getRecurenceRule()"
    }, {
        "trigger": "getRecurenceRules()",
        "contents": "getRecurenceRules()"
    }, {
        "trigger": "getStatus()",
        "contents": "getStatus()"
    }, {
        "trigger": "getTitle()",
        "contents": "getTitle()"
    }, {
        "trigger": "refresh()",
        "contents": "refresh()"
    }, {
        "trigger": "removeRecurenceRule()",
        "contents": "removeRecurenceRule(${0:rule})"
    }, {
        "trigger": "save()",
        "contents": "save(${0:span})"
    }, {
        "trigger": "setAlerts()",
        "contents": "setAlerts(${0:alerts})"
    }, {
        "trigger": "setAllDay()",
        "contents": "setAllDay(${0:allDay})"
    }, {
        "trigger": "setBegin()",
        "contents": "setBegin(${0:begin})"
    }, {
        "trigger": "setEnd()",
        "contents": "setEnd(${0:end})"
    }, {
        "trigger": "setLocation()",
        "contents": "setLocation(${0:location})"
    }, {
        "trigger": "setNotes()",
        "contents": "setNotes(${0:notes})"
    }, {
        "trigger": "setRecurenceRule()",
        "contents": "setRecurenceRule(${0:recurenceRule})"
    }, {
        "trigger": "setRecurenceRules()",
        "contents": "setRecurenceRules(${0:recurenceRules})"
    }, {
        "trigger": "setTitle()",
        "contents": "setTitle(${0:title})"
    }, "hideStatusBarParams", "animated", "animationStyle", "DecodeStringDict", "charset", "position", "source", "Ti.Media.Android", {
        "trigger": "scanMediaFiles()",
        "contents": "scanMediaFiles(${0:paths},${1:mimeTypes},${2:callback})"
    }, {
        "trigger": "setSystemWallpaper()",
        "contents": "setSystemWallpaper(${0:image},${1:scale})"
    }, "Ti.Android.Calendar", "Ti.Android.Calendar.METHOD_ALERT", "Ti.Android.Calendar.METHOD_DEFAULT", "Ti.Android.Calendar.METHOD_EMAIL", "Ti.Android.Calendar.METHOD_SMS", "Ti.Android.Calendar.STATE_DISMISSED", "Ti.Android.Calendar.STATE_FIRED", "Ti.Android.Calendar.STATE_SCHEDULED", "Ti.Android.Calendar.STATUS_CANCELED", "Ti.Android.Calendar.STATUS_CONFIRMED", "Ti.Android.Calendar.STATUS_TENTATIVE", "Ti.Android.Calendar.VISIBILITY_CONFIDENTIAL", "Ti.Android.Calendar.VISIBILITY_DEFAULT", "Ti.Android.Calendar.VISIBILITY_PRIVATE", "Ti.Android.Calendar.VISIBILITY_PUBLIC", "allAlerts", "allCalendars", "selectableCalendars", {
        "trigger": "getAllAlerts()",
        "contents": "getAllAlerts()"
    }, {
        "trigger": "getAllCalendars()",
        "contents": "getAllCalendars()"
    }, {
        "trigger": "getCalendarById()",
        "contents": "getCalendarById(${0:id})"
    }, {
        "trigger": "getSelectableCalendars()",
        "contents": "getSelectableCalendars()"
    }, "Ti.Analytics", {
        "trigger": "addEvent()",
        "contents": "addEvent(${0:type},${1:name},${2:data})"
    }, {
        "trigger": "featureEvent()",
        "contents": "featureEvent(${0:name},${1:data})"
    }, {
        "trigger": "navEvent()",
        "contents": "navEvent(${0:from},${1:to},${2:name},${3:data})"
    }, {
        "trigger": "settingsEvent()",
        "contents": "settingsEvent(${0:name},${1:data})"
    }, {
        "trigger": "timedEvent()",
        "contents": "timedEvent(${0:name},${1:start},${2:stop},${3:duration},${4:data})"
    }, {
        "trigger": "userEvent()",
        "contents": "userEvent(${0:name},${1:data})"
    }, "Ti.Network.TCPSocket", "hostName", "isValid", "mode", "port", "stripTerminator", {
        "trigger": "connect()",
        "contents": "connect()"
    }, {
        "trigger": "getHostName()",
        "contents": "getHostName()"
    }, {
        "trigger": "getIsValid()",
        "contents": "getIsValid()"
    }, {
        "trigger": "getMode()",
        "contents": "getMode()"
    }, {
        "trigger": "getPort()",
        "contents": "getPort()"
    }, {
        "trigger": "getStripTerminator()",
        "contents": "getStripTerminator()"
    }, {
        "trigger": "listen()",
        "contents": "listen()"
    }, {
        "trigger": "setHostName()",
        "contents": "setHostName(${0:hostName})"
    }, {
        "trigger": "setIsValid()",
        "contents": "setIsValid(${0:isValid})"
    }, {
        "trigger": "setMode()",
        "contents": "setMode(${0:mode})"
    }, {
        "trigger": "setPort()",
        "contents": "setPort(${0:port})"
    }, {
        "trigger": "setStripTerminator()",
        "contents": "setStripTerminator(${0:stripTerminator})"
    }, "CloudACLsResponse", "acls", "Ti.UI.EmailDialog", "Ti.UI.EmailDialog.CANCELLED", "Ti.UI.EmailDialog.FAILED", "Ti.UI.EmailDialog.SAVED", "Ti.UI.EmailDialog.SENT", "barColor", "bccRecipients", "ccRecipients", "html", "messageBody", "subject", "toRecipients", {
        "trigger": "addAttachment()",
        "contents": "addAttachment(${0:attachment})"
    }, {
        "trigger": "getBarColor()",
        "contents": "getBarColor()"
    }, {
        "trigger": "getBccRecipients()",
        "contents": "getBccRecipients()"
    }, {
        "trigger": "getCcRecipients()",
        "contents": "getCcRecipients()"
    }, {
        "trigger": "getHtml()",
        "contents": "getHtml()"
    }, {
        "trigger": "getMessageBody()",
        "contents": "getMessageBody()"
    }, {
        "trigger": "getSubject()",
        "contents": "getSubject()"
    }, {
        "trigger": "getToRecipients()",
        "contents": "getToRecipients()"
    }, {
        "trigger": "open()",
        "contents": "open(${0:properties})"
    }, {
        "trigger": "setBarColor()",
        "contents": "setBarColor(${0:barColor})"
    }, {
        "trigger": "setBccRecipients()",
        "contents": "setBccRecipients(${0:bccRecipients})"
    }, {
        "trigger": "setCcRecipients()",
        "contents": "setCcRecipients(${0:ccRecipients})"
    }, {
        "trigger": "setHtml()",
        "contents": "setHtml(${0:html})"
    }, {
        "trigger": "setMessageBody()",
        "contents": "setMessageBody(${0:messageBody})"
    }, {
        "trigger": "setSubject()",
        "contents": "setSubject(${0:subject})"
    }, {
        "trigger": "setToRecipients()",
        "contents": "setToRecipients(${0:toRecipients})"
    }, "showParams", "rect", "view", "Ti.Facebook", "Ti.Facebook.BUTTON_STYLE_NORMAL", "Ti.Facebook.BUTTON_STYLE_WIDE", "accessToken", "appid", "expirationDate", "forceDialogAuth", "loggedIn", "permissions", "uid", {
        "trigger": "authorize()",
        "contents": "authorize()"
    }, {
        "trigger": "createLoginButton()",
        "contents": "createLoginButton(${0:parameters})"
    }, {
        "trigger": "dialog()",
        "contents": "dialog(${0:action},${1:params},${2:callback})"
    }, {
        "trigger": "getAccessToken()",
        "contents": "getAccessToken()"
    }, {
        "trigger": "getAppid()",
        "contents": "getAppid()"
    }, {
        "trigger": "getExpirationDate()",
        "contents": "getExpirationDate()"
    }, {
        "trigger": "getForceDialogAuth()",
        "contents": "getForceDialogAuth()"
    }, {
        "trigger": "getLoggedIn()",
        "contents": "getLoggedIn()"
    }, {
        "trigger": "getPermissions()",
        "contents": "getPermissions()"
    }, {
        "trigger": "getUid()",
        "contents": "getUid()"
    }, {
        "trigger": "logout()",
        "contents": "logout()"
    }, {
        "trigger": "request()",
        "contents": "request(${0:method},${1:params},${2:callback})"
    }, {
        "trigger": "requestWithGraphPath()",
        "contents": "requestWithGraphPath(${0:path},${1:params},${2:httpMethod},${3:callback})"
    }, {
        "trigger": "setAccessToken()",
        "contents": "setAccessToken(${0:accessToken})"
    }, {
        "trigger": "setAppid()",
        "contents": "setAppid(${0:appid})"
    }, {
        "trigger": "setExpirationDate()",
        "contents": "setExpirationDate(${0:expirationDate})"
    }, {
        "trigger": "setForceDialogAuth()",
        "contents": "setForceDialogAuth(${0:forceDialogAuth})"
    }, {
        "trigger": "setLoggedIn()",
        "contents": "setLoggedIn(${0:loggedIn})"
    }, {
        "trigger": "setPermissions()",
        "contents": "setPermissions(${0:permissions})"
    }, {
        "trigger": "setUid()",
        "contents": "setUid(${0:uid})"
    }, "Global.String", {
        "trigger": "format()",
        "contents": "format(${0:formatString},${1:value})"
    }, {
        "trigger": "formatCurrency()",
        "contents": "formatCurrency(${0:value})"
    }, {
        "trigger": "formatDate()",
        "contents": "formatDate(${0:date},${1:format})"
    }, {
        "trigger": "formatDecimal()",
        "contents": "formatDecimal(${0:value},${1:locale},${2:pattern})"
    }, {
        "trigger": "formatTime()",
        "contents": "formatTime(${0:date},${1:format})"
    }, "MatrixCreationDict", "anchorPoint", "rotate", "scale", "Ti.API", {
        "trigger": "debug()",
        "contents": "debug(${0:message})"
    }, {
        "trigger": "info()",
        "contents": "info(${0:message})"
    }, {
        "trigger": "log()",
        "contents": "log(${0:level},${1:message})"
    }, {
        "trigger": "timestamp()",
        "contents": "timestamp(${0:message})"
    }, {
        "trigger": "trace()",
        "contents": "trace(${0:message})"
    }, {
        "trigger": "warn()",
        "contents": "warn(${0:message})"
    }, "TableViewIndexEntry", "index", "Ti.UI.TextField", "accessibilityHidden", "accessibilityHint", "accessibilityLabel", "accessibilityValue", "animatedCenter", "appearance", "autoLink", "autocapitalization", "autocorrect", "backgroundColor", "backgroundDisabledColor", "backgroundDisabledImage", "backgroundFocusedColor", "backgroundFocusedImage", "backgroundGradient", "backgroundImage", "backgroundLeftCap", "backgroundRepeat", "backgroundSelectedColor", "backgroundSelectedImage", "backgroundTopCap", "borderColor", "borderRadius", "borderStyle", "borderWidth", "bottom", "center", "children", "clearButtonMode", "clearOnEdit", "color", "editable", "ellipsize", "enableReturnKey", "enabled", "focusable", "font", "height", "hintText", "horizontalWrap", "keepScreenOn", "keyboardToolbar", "keyboardToolbarColor", "keyboardToolbarHeight", "keyboardType", "layout", "left", "leftButton", "leftButtonMode", "leftButtonPadding", "maxLength", "minimumFontSize", "opacity", "paddingLeft", "paddingRight", "passwordMask", "returnKeyType", "right", "rightButton", "rightButtonMode", "rightButtonPadding", "size", "softKeyboardOnFocus", "suppressReturn", "textAlign", "top", "touchEnabled", "transform", "value", "verticalAlign", "visible", "width", "zIndex", {
        "trigger": "add()",
        "contents": "add(${0:view})"
    }, {
        "trigger": "blur()",
        "contents": "blur()"
    }, {
        "trigger": "convertPointToView()",
        "contents": "convertPointToView(${0:point},${1:destinationView})"
    }, {
        "trigger": "finishLayout()",
        "contents": "finishLayout()"
    }, {
        "trigger": "focus()",
        "contents": "focus()"
    }, {
        "trigger": "getAccessibilityHidden()",
        "contents": "getAccessibilityHidden()"
    }, {
        "trigger": "getAccessibilityHint()",
        "contents": "getAccessibilityHint()"
    }, {
        "trigger": "getAccessibilityLabel()",
        "contents": "getAccessibilityLabel()"
    }, {
        "trigger": "getAccessibilityValue()",
        "contents": "getAccessibilityValue()"
    }, {
        "trigger": "getAnchorPoint()",
        "contents": "getAnchorPoint()"
    }, {
        "trigger": "getAnimatedCenter()",
        "contents": "getAnimatedCenter()"
    }, {
        "trigger": "getAppearance()",
        "contents": "getAppearance()"
    }, {
        "trigger": "getAutoLink()",
        "contents": "getAutoLink()"
    }, {
        "trigger": "getAutocapitalization()",
        "contents": "getAutocapitalization()"
    }, {
        "trigger": "getAutocorrect()",
        "contents": "getAutocorrect()"
    }, {
        "trigger": "getBackgroundColor()",
        "contents": "getBackgroundColor()"
    }, {
        "trigger": "getBackgroundDisabledColor()",
        "contents": "getBackgroundDisabledColor()"
    }, {
        "trigger": "getBackgroundDisabledImage()",
        "contents": "getBackgroundDisabledImage()"
    }, {
        "trigger": "getBackgroundFocusedColor()",
        "contents": "getBackgroundFocusedColor()"
    }, {
        "trigger": "getBackgroundFocusedImage()",
        "contents": "getBackgroundFocusedImage()"
    }, {
        "trigger": "getBackgroundGradient()",
        "contents": "getBackgroundGradient()"
    }, {
        "trigger": "getBackgroundImage()",
        "contents": "getBackgroundImage()"
    }, {
        "trigger": "getBackgroundLeftCap()",
        "contents": "getBackgroundLeftCap()"
    }, {
        "trigger": "getBackgroundRepeat()",
        "contents": "getBackgroundRepeat()"
    }, {
        "trigger": "getBackgroundSelectedColor()",
        "contents": "getBackgroundSelectedColor()"
    }, {
        "trigger": "getBackgroundSelectedImage()",
        "contents": "getBackgroundSelectedImage()"
    }, {
        "trigger": "getBackgroundTopCap()",
        "contents": "getBackgroundTopCap()"
    }, {
        "trigger": "getBorderColor()",
        "contents": "getBorderColor()"
    }, {
        "trigger": "getBorderRadius()",
        "contents": "getBorderRadius()"
    }, {
        "trigger": "getBorderStyle()",
        "contents": "getBorderStyle()"
    }, {
        "trigger": "getBorderWidth()",
        "contents": "getBorderWidth()"
    }, {
        "trigger": "getBottom()",
        "contents": "getBottom()"
    }, {
        "trigger": "getCenter()",
        "contents": "getCenter()"
    }, {
        "trigger": "getChildren()",
        "contents": "getChildren()"
    }, {
        "trigger": "getClearButtonMode()",
        "contents": "getClearButtonMode()"
    }, {
        "trigger": "getClearOnEdit()",
        "contents": "getClearOnEdit()"
    }, {
        "trigger": "getColor()",
        "contents": "getColor()"
    }, {
        "trigger": "getEditable()",
        "contents": "getEditable()"
    }, {
        "trigger": "getEllipsize()",
        "contents": "getEllipsize()"
    }, {
        "trigger": "getEnableReturnKey()",
        "contents": "getEnableReturnKey()"
    }, {
        "trigger": "getEnabled()",
        "contents": "getEnabled()"
    }, {
        "trigger": "getFocusable()",
        "contents": "getFocusable()"
    }, {
        "trigger": "getFont()",
        "contents": "getFont()"
    }, {
        "trigger": "getHeight()",
        "contents": "getHeight()"
    }, {
        "trigger": "getHintText()",
        "contents": "getHintText()"
    }, {
        "trigger": "getHorizontalWrap()",
        "contents": "getHorizontalWrap()"
    }, {
        "trigger": "getKeepScreenOn()",
        "contents": "getKeepScreenOn()"
    }, {
        "trigger": "getKeyboardToolbar()",
        "contents": "getKeyboardToolbar()"
    }, {
        "trigger": "getKeyboardToolbarColor()",
        "contents": "getKeyboardToolbarColor()"
    }, {
        "trigger": "getKeyboardToolbarHeight()",
        "contents": "getKeyboardToolbarHeight()"
    }, {
        "trigger": "getKeyboardType()",
        "contents": "getKeyboardType()"
    }, {
        "trigger": "getLayout()",
        "contents": "getLayout()"
    }, {
        "trigger": "getLeft()",
        "contents": "getLeft()"
    }, {
        "trigger": "getLeftButton()",
        "contents": "getLeftButton()"
    }, {
        "trigger": "getLeftButtonMode()",
        "contents": "getLeftButtonMode()"
    }, {
        "trigger": "getLeftButtonPadding()",
        "contents": "getLeftButtonPadding()"
    }, {
        "trigger": "getMaxLength()",
        "contents": "getMaxLength()"
    }, {
        "trigger": "getMinimumFontSize()",
        "contents": "getMinimumFontSize()"
    }, {
        "trigger": "getOpacity()",
        "contents": "getOpacity()"
    }, {
        "trigger": "getPaddingLeft()",
        "contents": "getPaddingLeft()"
    }, {
        "trigger": "getPaddingRight()",
        "contents": "getPaddingRight()"
    }, {
        "trigger": "getPasswordMask()",
        "contents": "getPasswordMask()"
    }, {
        "trigger": "getRect()",
        "contents": "getRect()"
    }, {
        "trigger": "getReturnKeyType()",
        "contents": "getReturnKeyType()"
    }, {
        "trigger": "getRight()",
        "contents": "getRight()"
    }, {
        "trigger": "getRightButton()",
        "contents": "getRightButton()"
    }, {
        "trigger": "getRightButtonMode()",
        "contents": "getRightButtonMode()"
    }, {
        "trigger": "getRightButtonPadding()",
        "contents": "getRightButtonPadding()"
    }, {
        "trigger": "getSize()",
        "contents": "getSize()"
    }, {
        "trigger": "getSoftKeyboardOnFocus()",
        "contents": "getSoftKeyboardOnFocus()"
    }, {
        "trigger": "getSuppressReturn()",
        "contents": "getSuppressReturn()"
    }, {
        "trigger": "getTextAlign()",
        "contents": "getTextAlign()"
    }, {
        "trigger": "getTop()",
        "contents": "getTop()"
    }, {
        "trigger": "getTouchEnabled()",
        "contents": "getTouchEnabled()"
    }, {
        "trigger": "getTransform()",
        "contents": "getTransform()"
    }, {
        "trigger": "getValue()",
        "contents": "getValue()"
    }, {
        "trigger": "getVerticalAlign()",
        "contents": "getVerticalAlign()"
    }, {
        "trigger": "getVisible()",
        "contents": "getVisible()"
    }, {
        "trigger": "getWidth()",
        "contents": "getWidth()"
    }, {
        "trigger": "getZIndex()",
        "contents": "getZIndex()"
    }, {
        "trigger": "hasText()",
        "contents": "hasText()"
    }, {
        "trigger": "hide()",
        "contents": "hide()"
    }, {
        "trigger": "removeAllChildren()",
        "contents": "removeAllChildren()"
    }, {
        "trigger": "setAccessibilityHidden()",
        "contents": "setAccessibilityHidden(${0:accessibilityHidden})"
    }, {
        "trigger": "setAccessibilityHint()",
        "contents": "setAccessibilityHint(${0:accessibilityHint})"
    }, {
        "trigger": "setAccessibilityLabel()",
        "contents": "setAccessibilityLabel(${0:accessibilityLabel})"
    }, {
        "trigger": "setAccessibilityValue()",
        "contents": "setAccessibilityValue(${0:accessibilityValue})"
    }, {
        "trigger": "setAnchorPoint()",
        "contents": "setAnchorPoint(${0:anchorPoint})"
    }, {
        "trigger": "setAppearance()",
        "contents": "setAppearance(${0:appearance})"
    }, {
        "trigger": "setAutoLink()",
        "contents": "setAutoLink(${0:autoLink})"
    }, {
        "trigger": "setAutocapitalization()",
        "contents": "setAutocapitalization(${0:autocapitalization})"
    }, {
        "trigger": "setAutocorrect()",
        "contents": "setAutocorrect(${0:autocorrect})"
    }, {
        "trigger": "setBackgroundColor()",
        "contents": "setBackgroundColor(${0:backgroundColor})"
    }, {
        "trigger": "setBackgroundDisabledColor()",
        "contents": "setBackgroundDisabledColor(${0:backgroundDisabledColor})"
    }, {
        "trigger": "setBackgroundDisabledImage()",
        "contents": "setBackgroundDisabledImage(${0:backgroundDisabledImage})"
    }, {
        "trigger": "setBackgroundFocusedColor()",
        "contents": "setBackgroundFocusedColor(${0:backgroundFocusedColor})"
    }, {
        "trigger": "setBackgroundFocusedImage()",
        "contents": "setBackgroundFocusedImage(${0:backgroundFocusedImage})"
    }, {
        "trigger": "setBackgroundGradient()",
        "contents": "setBackgroundGradient(${0:backgroundGradient})"
    }, {
        "trigger": "setBackgroundImage()",
        "contents": "setBackgroundImage(${0:backgroundImage})"
    }, {
        "trigger": "setBackgroundLeftCap()",
        "contents": "setBackgroundLeftCap(${0:backgroundLeftCap})"
    }, {
        "trigger": "setBackgroundRepeat()",
        "contents": "setBackgroundRepeat(${0:backgroundRepeat})"
    }, {
        "trigger": "setBackgroundSelectedColor()",
        "contents": "setBackgroundSelectedColor(${0:backgroundSelectedColor})"
    }, {
        "trigger": "setBackgroundSelectedImage()",
        "contents": "setBackgroundSelectedImage(${0:backgroundSelectedImage})"
    }, {
        "trigger": "setBackgroundTopCap()",
        "contents": "setBackgroundTopCap(${0:backgroundTopCap})"
    }, {
        "trigger": "setBorderColor()",
        "contents": "setBorderColor(${0:borderColor})"
    }, {
        "trigger": "setBorderRadius()",
        "contents": "setBorderRadius(${0:borderRadius})"
    }, {
        "trigger": "setBorderStyle()",
        "contents": "setBorderStyle(${0:borderStyle})"
    }, {
        "trigger": "setBorderWidth()",
        "contents": "setBorderWidth(${0:borderWidth})"
    }, {
        "trigger": "setBottom()",
        "contents": "setBottom(${0:bottom})"
    }, {
        "trigger": "setCenter()",
        "contents": "setCenter(${0:center})"
    }, {
        "trigger": "setClearButtonMode()",
        "contents": "setClearButtonMode(${0:clearButtonMode})"
    }, {
        "trigger": "setClearOnEdit()",
        "contents": "setClearOnEdit(${0:clearOnEdit})"
    }, {
        "trigger": "setColor()",
        "contents": "setColor(${0:color})"
    }, {
        "trigger": "setEditable()",
        "contents": "setEditable(${0:editable})"
    }, {
        "trigger": "setEllipsize()",
        "contents": "setEllipsize(${0:ellipsize})"
    }, {
        "trigger": "setEnableReturnKey()",
        "contents": "setEnableReturnKey(${0:enableReturnKey})"
    }, {
        "trigger": "setEnabled()",
        "contents": "setEnabled(${0:enabled})"
    }, {
        "trigger": "setFocusable()",
        "contents": "setFocusable(${0:focusable})"
    }, {
        "trigger": "setFont()",
        "contents": "setFont(${0:font})"
    }, {
        "trigger": "setHeight()",
        "contents": "setHeight(${0:height})"
    }, {
        "trigger": "setHintText()",
        "contents": "setHintText(${0:hintText})"
    }, {
        "trigger": "setHorizontalWrap()",
        "contents": "setHorizontalWrap(${0:horizontalWrap})"
    }, {
        "trigger": "setKeepScreenOn()",
        "contents": "setKeepScreenOn(${0:keepScreenOn})"
    }, {
        "trigger": "setKeyboardToolbar()",
        "contents": "setKeyboardToolbar(${0:keyboardToolbar})"
    }, {
        "trigger": "setKeyboardToolbarColor()",
        "contents": "setKeyboardToolbarColor(${0:keyboardToolbarColor})"
    }, {
        "trigger": "setKeyboardToolbarHeight()",
        "contents": "setKeyboardToolbarHeight(${0:keyboardToolbarHeight})"
    }, {
        "trigger": "setKeyboardType()",
        "contents": "setKeyboardType(${0:keyboardType})"
    }, {
        "trigger": "setLayout()",
        "contents": "setLayout(${0:layout})"
    }, {
        "trigger": "setLeft()",
        "contents": "setLeft(${0:left})"
    }, {
        "trigger": "setLeftButton()",
        "contents": "setLeftButton(${0:leftButton})"
    }, {
        "trigger": "setLeftButtonMode()",
        "contents": "setLeftButtonMode(${0:leftButtonMode})"
    }, {
        "trigger": "setLeftButtonPadding()",
        "contents": "setLeftButtonPadding(${0:leftButtonPadding})"
    }, {
        "trigger": "setMaxLength()",
        "contents": "setMaxLength(${0:maxLength})"
    }, {
        "trigger": "setMinimumFontSize()",
        "contents": "setMinimumFontSize(${0:minimumFontSize})"
    }, {
        "trigger": "setOpacity()",
        "contents": "setOpacity(${0:opacity})"
    }, {
        "trigger": "setPaddingLeft()",
        "contents": "setPaddingLeft(${0:paddingLeft})"
    }, {
        "trigger": "setPaddingRight()",
        "contents": "setPaddingRight(${0:paddingRight})"
    }, {
        "trigger": "setPasswordMask()",
        "contents": "setPasswordMask(${0:passwordMask})"
    }, {
        "trigger": "setReturnKeyType()",
        "contents": "setReturnKeyType(${0:returnKeyType})"
    }, {
        "trigger": "setRight()",
        "contents": "setRight(${0:right})"
    }, {
        "trigger": "setRightButton()",
        "contents": "setRightButton(${0:rightButton})"
    }, {
        "trigger": "setRightButtonMode()",
        "contents": "setRightButtonMode(${0:rightButtonMode})"
    }, {
        "trigger": "setRightButtonPadding()",
        "contents": "setRightButtonPadding(${0:rightButtonPadding})"
    }, {
        "trigger": "setSelection()",
        "contents": "setSelection(${0:start},${1:end})"
    }, {
        "trigger": "setSoftKeyboardOnFocus()",
        "contents": "setSoftKeyboardOnFocus(${0:softKeyboardOnFocus})"
    }, {
        "trigger": "setSuppressReturn()",
        "contents": "setSuppressReturn(${0:suppressReturn})"
    }, {
        "trigger": "setTextAlign()",
        "contents": "setTextAlign(${0:textAlign})"
    }, {
        "trigger": "setTop()",
        "contents": "setTop(${0:top})"
    }, {
        "trigger": "setTouchEnabled()",
        "contents": "setTouchEnabled(${0:touchEnabled})"
    }, {
        "trigger": "setTransform()",
        "contents": "setTransform(${0:transform})"
    }, {
        "trigger": "setValue()",
        "contents": "setValue(${0:value})"
    }, {
        "trigger": "setVerticalAlign()",
        "contents": "setVerticalAlign(${0:verticalAlign})"
    }, {
        "trigger": "setVisible()",
        "contents": "setVisible(${0:visible})"
    }, {
        "trigger": "setWidth()",
        "contents": "setWidth(${0:width})"
    }, {
        "trigger": "setZIndex()",
        "contents": "setZIndex(${0:zIndex})"
    }, {
        "trigger": "startLayout()",
        "contents": "startLayout()"
    }, {
        "trigger": "toImage()",
        "contents": "toImage(${0:callback},${1:honorScaleFactor})"
    }, {
        "trigger": "updateLayout()",
        "contents": "updateLayout(${0:params})"
    }, "FacebookRESTResponsev1", "method", "result", "Ti.Android.Calendar.Reminder", "minutes", {
        "trigger": "getMethod()",
        "contents": "getMethod()"
    }, {
        "trigger": "getMinutes()",
        "contents": "getMinutes()"
    }, "Ti.Filesystem", "Ti.Filesystem.MODE_APPEND", "Ti.Filesystem.MODE_READ", "Ti.Filesystem.MODE_WRITE", "applicationCacheDirectory", "applicationDataDirectory", "applicationDirectory", "applicationSupportDirectory", "externalStorageDirectory", "lineEnding", "resRawDirectory", "resourcesDirectory", "separator", "tempDirectory", {
        "trigger": "createTempDirectory()",
        "contents": "createTempDirectory()"
    }, {
        "trigger": "createTempFile()",
        "contents": "createTempFile()"
    }, {
        "trigger": "getApplicationCacheDirectory()",
        "contents": "getApplicationCacheDirectory()"
    }, {
        "trigger": "getApplicationDataDirectory()",
        "contents": "getApplicationDataDirectory()"
    }, {
        "trigger": "getApplicationDirectory()",
        "contents": "getApplicationDirectory()"
    }, {
        "trigger": "getApplicationSupportDirectory()",
        "contents": "getApplicationSupportDirectory()"
    }, {
        "trigger": "getExternalStorageDirectory()",
        "contents": "getExternalStorageDirectory()"
    }, {
        "trigger": "getFile()",
        "contents": "getFile(${0:path})"
    }, {
        "trigger": "getLineEnding()",
        "contents": "getLineEnding()"
    }, {
        "trigger": "getResRawDirectory()",
        "contents": "getResRawDirectory()"
    }, {
        "trigger": "getResourcesDirectory()",
        "contents": "getResourcesDirectory()"
    }, {
        "trigger": "getSeparator()",
        "contents": "getSeparator()"
    }, {
        "trigger": "getTempDirectory()",
        "contents": "getTempDirectory()"
    }, {
        "trigger": "isExternalStoragePresent()",
        "contents": "isExternalStoragePresent()"
    }, {
        "trigger": "openStream()",
        "contents": "openStream(${0:mode},${1:path})"
    }, "Ti.UI.CoverFlowView", "images", "selected", {
        "trigger": "getImages()",
        "contents": "getImages()"
    }, {
        "trigger": "getSelected()",
        "contents": "getSelected()"
    }, {
        "trigger": "setImage()",
        "contents": "setImage(${0:index},${1:image})"
    }, {
        "trigger": "setImages()",
        "contents": "setImages(${0:images})"
    }, {
        "trigger": "setSelected()",
        "contents": "setSelected(${0:selected})"
    }, "Ti.Cloud.Friends", {
        "trigger": "approve()",
        "contents": "approve(${0:parameters},${1:callback})"
    }, {
        "trigger": "requests()",
        "contents": "requests(${0:parameters},${1:callback})"
    }, {
        "trigger": "search()",
        "contents": "search(${0:parameters},${1:callback})"
    }, "ListDataItem", "properties", "template", "Ti.Cloud.Places", {
        "trigger": "update()",
        "contents": "update(${0:parameters},${1:callback})"
    }, "WriteCallbackArgs", "bytesProcessed", "errorDescription", "errorState", "Ti.Geolocation", "Ti.Geolocation.ACCURACY_BEST", "Ti.Geolocation.ACCURACY_BEST_FOR_NAVIGATION", "Ti.Geolocation.ACCURACY_HIGH", "Ti.Geolocation.ACCURACY_HUNDRED_METERS", "Ti.Geolocation.ACCURACY_KILOMETER", "Ti.Geolocation.ACCURACY_LOW", "Ti.Geolocation.ACCURACY_NEAREST_TEN_METERS", "Ti.Geolocation.ACCURACY_THREE_KILOMETERS", "Ti.Geolocation.ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION", "Ti.Geolocation.ACTIVITYTYPE_FITNESS", "Ti.Geolocation.ACTIVITYTYPE_OTHER", "Ti.Geolocation.ACTIVITYTYPE_OTHER_NAVIGATION", "Ti.Geolocation.AUTHORIZATION_AUTHORIZED", "Ti.Geolocation.AUTHORIZATION_DENIED", "Ti.Geolocation.AUTHORIZATION_RESTRICTED", "Ti.Geolocation.AUTHORIZATION_UNKNOWN", "Ti.Geolocation.ERROR_DENIED", "Ti.Geolocation.ERROR_HEADING_FAILURE", "Ti.Geolocation.ERROR_LOCATION_UNKNOWN", "Ti.Geolocation.ERROR_NETWORK", "Ti.Geolocation.ERROR_REGION_MONITORING_DELAYED", "Ti.Geolocation.ERROR_REGION_MONITORING_DENIED", "Ti.Geolocation.ERROR_REGION_MONITORING_FAILURE", "Ti.Geolocation.ERROR_TIMEOUT", "Ti.Geolocation.PROVIDER_GPS", "Ti.Geolocation.PROVIDER_NETWORK", "Ti.Geolocation.PROVIDER_PASSIVE", "accuracy", "activityType", "distanceFilter", "frequency", "hasCompass", "headingFilter", "locationServicesAuthorization", "locationServicesEnabled", "pauseLocationUpdateAutomatically", "preferredProvider", "purpose", "showCalibration", "trackSignificantLocationChange", {
        "trigger": "forwardGeocoder()",
        "contents": "forwardGeocoder(${0:address},${1:callback})"
    }, {
        "trigger": "getAccuracy()",
        "contents": "getAccuracy()"
    }, {
        "trigger": "getActivityType()",
        "contents": "getActivityType()"
    }, {
        "trigger": "getCurrentHeading()",
        "contents": "getCurrentHeading(${0:callback})"
    }, {
        "trigger": "getCurrentPosition()",
        "contents": "getCurrentPosition(${0:callback})"
    }, {
        "trigger": "getDistanceFilter()",
        "contents": "getDistanceFilter()"
    }, {
        "trigger": "getFrequency()",
        "contents": "getFrequency()"
    }, {
        "trigger": "getHasCompass()",
        "contents": "getHasCompass()"
    }, {
        "trigger": "getHeadingFilter()",
        "contents": "getHeadingFilter()"
    }, {
        "trigger": "getLocationServicesAuthorization()",
        "contents": "getLocationServicesAuthorization()"
    }, {
        "trigger": "getLocationServicesEnabled()",
        "contents": "getLocationServicesEnabled()"
    }, {
        "trigger": "getPauseLocationUpdateAutomatically()",
        "contents": "getPauseLocationUpdateAutomatically()"
    }, {
        "trigger": "getPreferredProvider()",
        "contents": "getPreferredProvider()"
    }, {
        "trigger": "getPurpose()",
        "contents": "getPurpose()"
    }, {
        "trigger": "getShowCalibration()",
        "contents": "getShowCalibration()"
    }, {
        "trigger": "getTrackSignificantLocationChange()",
        "contents": "getTrackSignificantLocationChange()"
    }, {
        "trigger": "reverseGeocoder()",
        "contents": "reverseGeocoder(${0:latitude},${1:longitude},${2:callback})"
    }, {
        "trigger": "setAccuracy()",
        "contents": "setAccuracy(${0:accuracy})"
    }, {
        "trigger": "setActivityType()",
        "contents": "setActivityType(${0:activityType})"
    }, {
        "trigger": "setDistanceFilter()",
        "contents": "setDistanceFilter(${0:distanceFilter})"
    }, {
        "trigger": "setFrequency()",
        "contents": "setFrequency(${0:frequency})"
    }, {
        "trigger": "setHeadingFilter()",
        "contents": "setHeadingFilter(${0:headingFilter})"
    }, {
        "trigger": "setLocationServicesAuthorization()",
        "contents": "setLocationServicesAuthorization(${0:locationServicesAuthorization})"
    }, {
        "trigger": "setPauseLocationUpdateAutomatically()",
        "contents": "setPauseLocationUpdateAutomatically(${0:pauseLocationUpdateAutomatically})"
    }, {
        "trigger": "setPreferredProvider()",
        "contents": "setPreferredProvider(${0:preferredProvider})"
    }, {
        "trigger": "setPurpose()",
        "contents": "setPurpose(${0:purpose})"
    }, {
        "trigger": "setShowCalibration()",
        "contents": "setShowCalibration(${0:showCalibration})"
    }, {
        "trigger": "setTrackSignificantLocationChange()",
        "contents": "setTrackSignificantLocationChange(${0:trackSignificantLocationChange})"
    }, "Ti.Cloud.Objects", "WriteStreamCallbackArgs", "fromStream", "toStream", "ItemTemplate", "childTemplates", "events", "PreviewImageError", "Ti.UI.iPhone.ActivityIndicatorStyle", "Ti.UI.iPhone.ActivityIndicatorStyle.BIG", "Ti.UI.iPhone.ActivityIndicatorStyle.DARK", "Ti.UI.ImageView", "animating", "autorotate", "decodeRetries", "defaultImage", "duration", "enableZoomControls", "hires", "image", "preventDefaultImage", "repeatCount", "reverse", {
        "trigger": "getAnimating()",
        "contents": "getAnimating()"
    }, {
        "trigger": "getAutorotate()",
        "contents": "getAutorotate()"
    }, {
        "trigger": "getDecodeRetries()",
        "contents": "getDecodeRetries()"
    }, {
        "trigger": "getDefaultImage()",
        "contents": "getDefaultImage()"
    }, {
        "trigger": "getDuration()",
        "contents": "getDuration()"
    }, {
        "trigger": "getEnableZoomControls()",
        "contents": "getEnableZoomControls()"
    }, {
        "trigger": "getHires()",
        "contents": "getHires()"
    }, {
        "trigger": "getImage()",
        "contents": "getImage()"
    }, {
        "trigger": "getPreventDefaultImage()",
        "contents": "getPreventDefaultImage()"
    }, {
        "trigger": "getRepeatCount()",
        "contents": "getRepeatCount()"
    }, {
        "trigger": "getReverse()",
        "contents": "getReverse()"
    }, {
        "trigger": "resume()",
        "contents": "resume()"
    }, {
        "trigger": "setDecodeRetries()",
        "contents": "setDecodeRetries(${0:decodeRetries})"
    }, {
        "trigger": "setDefaultImage()",
        "contents": "setDefaultImage(${0:defaultImage})"
    }, {
        "trigger": "setDuration()",
        "contents": "setDuration(${0:duration})"
    }, {
        "trigger": "setEnableZoomControls()",
        "contents": "setEnableZoomControls(${0:enableZoomControls})"
    }, {
        "trigger": "setHires()",
        "contents": "setHires(${0:hires})"
    }, {
        "trigger": "setPreventDefaultImage()",
        "contents": "setPreventDefaultImage(${0:preventDefaultImage})"
    }, {
        "trigger": "setRepeatCount()",
        "contents": "setRepeatCount(${0:repeatCount})"
    }, {
        "trigger": "setReverse()",
        "contents": "setReverse(${0:reverse})"
    }, {
        "trigger": "toBlob()",
        "contents": "toBlob()"
    }, "MapRegionType", "Ti.UI.MaskedImage", "mask", "tint", {
        "trigger": "getMask()",
        "contents": "getMask()"
    }, {
        "trigger": "getTint()",
        "contents": "getTint()"
    }, {
        "trigger": "setMask()",
        "contents": "setMask(${0:mask})"
    }, {
        "trigger": "setTint()",
        "contents": "setTint(${0:tint})"
    }, "CameraMediaItemType", "cropRect", "media", "mediaType", "Global.console", "Ti.XML.Notation", "CropRectType", "x", "y", "Ti.UI.MobileWeb.TableViewSeparatorStyle", "Ti.UI.MobileWeb.TableViewSeparatorStyle.NONE", "Ti.UI.MobileWeb.TableViewSeparatorStyle.SINGLE_LINE", "LocationResults", "coords", "provider", "Ti.Codec", "Ti.Codec.BIG_ENDIAN", "Ti.Codec.CHARSET_ASCII", "Ti.Codec.CHARSET_ISO_LATIN_1", "Ti.Codec.CHARSET_UTF16", "Ti.Codec.CHARSET_UTF16BE", "Ti.Codec.CHARSET_UTF16LE", "Ti.Codec.CHARSET_UTF8", "Ti.Codec.LITTLE_ENDIAN", "Ti.Codec.TYPE_BYTE", "Ti.Codec.TYPE_DOUBLE", "Ti.Codec.TYPE_FLOAT", "Ti.Codec.TYPE_INT", "Ti.Codec.TYPE_LONG", "Ti.Codec.TYPE_SHORT", {
        "trigger": "decodeNumber()",
        "contents": "decodeNumber(${0:options})"
    }, {
        "trigger": "decodeString()",
        "contents": "decodeString(${0:options})"
    }, {
        "trigger": "encodeNumber()",
        "contents": "encodeNumber(${0:options})"
    }, {
        "trigger": "encodeString()",
        "contents": "encodeString(${0:options})"
    }, {
        "trigger": "getNativeByteOrder()",
        "contents": "getNativeByteOrder()"
    }, "HeadingResponse", "heading", "CloudStreamProgress", "CloudPushNotificationsResponse", "Ti.IOStream", "Ti.Android.Calendar.Calendar", "hidden", "name", {
        "trigger": "createEvent()",
        "contents": "createEvent(${0:properties})"
    }, {
        "trigger": "getEventById()",
        "contents": "getEventById(${0:id})"
    }, {
        "trigger": "getEventsBetweenDates()",
        "contents": "getEventsBetweenDates(${0:date1},${1:date2})"
    }, {
        "trigger": "getEventsInDate()",
        "contents": "getEventsInDate(${0:year},${1:month},${2:day})"
    }, {
        "trigger": "getEventsInMonth()",
        "contents": "getEventsInMonth(${0:year},${1:month})"
    }, {
        "trigger": "getEventsInYear()",
        "contents": "getEventsInYear(${0:year})"
    }, {
        "trigger": "getHidden()",
        "contents": "getHidden()"
    }, {
        "trigger": "getName()",
        "contents": "getName()"
    }, "Ti.Network.BonjourService", "domain", "isLocal", "socket", "type", {
        "trigger": "getDomain()",
        "contents": "getDomain()"
    }, {
        "trigger": "getIsLocal()",
        "contents": "getIsLocal()"
    }, {
        "trigger": "getSocket()",
        "contents": "getSocket()"
    }, {
        "trigger": "getType()",
        "contents": "getType()"
    }, {
        "trigger": "publish()",
        "contents": "publish(${0:socket})"
    }, {
        "trigger": "resolve()",
        "contents": "resolve(${0:timeout})"
    }, {
        "trigger": "setDomain()",
        "contents": "setDomain(${0:domain})"
    }, {
        "trigger": "setIsLocal()",
        "contents": "setIsLocal(${0:isLocal})"
    }, {
        "trigger": "setName()",
        "contents": "setName(${0:name})"
    }, {
        "trigger": "setSocket()",
        "contents": "setSocket(${0:socket})"
    }, {
        "trigger": "setType()",
        "contents": "setType(${0:type})"
    }, "Ti.Cloud.Posts", "recurrenceEndDictionary", "endDate", "occurrenceCount", "zoomScaleOption", "Ti.XML.Node", "Ti.XML.EntityReference", "MusicLibraryResponseType", "items", "representative", "types", "Ti.Locale", "currentCountry", "currentLanguage", "currentLocale", {
        "trigger": "formatTelephoneNumber()",
        "contents": "formatTelephoneNumber(${0:number})"
    }, {
        "trigger": "getCurrencyCode()",
        "contents": "getCurrencyCode(${0:locale})"
    }, {
        "trigger": "getCurrencySymbol()",
        "contents": "getCurrencySymbol(${0:currencyCode})"
    }, {
        "trigger": "getCurrentCountry()",
        "contents": "getCurrentCountry()"
    }, {
        "trigger": "getCurrentLanguage()",
        "contents": "getCurrentLanguage()"
    }, {
        "trigger": "getCurrentLocale()",
        "contents": "getCurrentLocale()"
    }, {
        "trigger": "getLocaleCurrencySymbol()",
        "contents": "getLocaleCurrencySymbol(${0:locale})"
    }, {
        "trigger": "getString()",
        "contents": "getString(${0:key},${1:hint})"
    }, "Ti.Media.VideoPlayer", "allowsAirPlay", "contentURL", "currentPlaybackTime", "endPlaybackTime", "fullscreen", "initialPlaybackTime", "loadState", "mediaControlStyle", "mediaTypes", "movieControlMode", "naturalSize", "playableDuration", "playbackState", "repeatMode", "scalingMode", "sourceType", "useApplicationAudioSession", {
        "trigger": "cancelAllThumbnailImageRequests()",
        "contents": "cancelAllThumbnailImageRequests()"
    }, {
        "trigger": "getAllowsAirPlay()",
        "contents": "getAllowsAirPlay()"
    }, {
        "trigger": "getContentURL()",
        "contents": "getContentURL()"
    }, {
        "trigger": "getCurrentPlaybackTime()",
        "contents": "getCurrentPlaybackTime()"
    }, {
        "trigger": "getEndPlaybackTime()",
        "contents": "getEndPlaybackTime()"
    }, {
        "trigger": "getFullscreen()",
        "contents": "getFullscreen()"
    }, {
        "trigger": "getInitialPlaybackTime()",
        "contents": "getInitialPlaybackTime()"
    }, {
        "trigger": "getLoadState()",
        "contents": "getLoadState()"
    }, {
        "trigger": "getMediaControlStyle()",
        "contents": "getMediaControlStyle()"
    }, {
        "trigger": "getMediaTypes()",
        "contents": "getMediaTypes()"
    }, {
        "trigger": "getMovieControlMode()",
        "contents": "getMovieControlMode()"
    }, {
        "trigger": "getNaturalSize()",
        "contents": "getNaturalSize()"
    }, {
        "trigger": "getPlayableDuration()",
        "contents": "getPlayableDuration()"
    }, {
        "trigger": "getPlaybackState()",
        "contents": "getPlaybackState()"
    }, {
        "trigger": "getRepeatMode()",
        "contents": "getRepeatMode()"
    }, {
        "trigger": "getScalingMode()",
        "contents": "getScalingMode()"
    }, {
        "trigger": "getSourceType()",
        "contents": "getSourceType()"
    }, {
        "trigger": "getUseApplicationAudioSession()",
        "contents": "getUseApplicationAudioSession()"
    }, {
        "trigger": "requestThumbnailImagesAtTimes()",
        "contents": "requestThumbnailImagesAtTimes(${0:times},${1:option},${2:callback})"
    }, {
        "trigger": "setAllowsAirPlay()",
        "contents": "setAllowsAirPlay(${0:allowsAirPlay})"
    }, {
        "trigger": "setAutoplay()",
        "contents": "setAutoplay(${0:autoplay})"
    }, {
        "trigger": "setBackgroundView()",
        "contents": "setBackgroundView(${0:view})"
    }, {
        "trigger": "setContentURL()",
        "contents": "setContentURL(${0:contentURL})"
    }, {
        "trigger": "setCurrentPlaybackTime()",
        "contents": "setCurrentPlaybackTime(${0:currentPlaybackTime})"
    }, {
        "trigger": "setEndPlaybackTime()",
        "contents": "setEndPlaybackTime(${0:endPlaybackTime})"
    }, {
        "trigger": "setFullscreen()",
        "contents": "setFullscreen(${0:fullscreen})"
    }, {
        "trigger": "setInitialPlaybackTime()",
        "contents": "setInitialPlaybackTime(${0:initialPlaybackTime})"
    }, {
        "trigger": "setMedia()",
        "contents": "setMedia(${0:media})"
    }, {
        "trigger": "setMediaControlStyle()",
        "contents": "setMediaControlStyle(${0:mediaControlStyle})"
    }, {
        "trigger": "setMediaTypes()",
        "contents": "setMediaTypes(${0:mediaTypes})"
    }, {
        "trigger": "setMovieControlMode()",
        "contents": "setMovieControlMode(${0:movieControlMode})"
    }, {
        "trigger": "setNaturalSize()",
        "contents": "setNaturalSize(${0:naturalSize})"
    }, {
        "trigger": "setRepeatMode()",
        "contents": "setRepeatMode(${0:repeatMode})"
    }, {
        "trigger": "setScalingMode()",
        "contents": "setScalingMode(${0:scalingMode})"
    }, {
        "trigger": "setSourceType()",
        "contents": "setSourceType(${0:sourceType})"
    }, {
        "trigger": "setUseApplicationAudioSession()",
        "contents": "setUseApplicationAudioSession(${0:useApplicationAudioSession})"
    }, {
        "trigger": "thumbnailImageAtTime()",
        "contents": "thumbnailImageAtTime(${0:time},${1:option})"
    }, "CloudEmailsResponse", "Ti.Event", "bubbles", "cancelBubble", "Global", {
        "trigger": "L()",
        "contents": "L(${0:key},${1:hint})"
    }, {
        "trigger": "alert()",
        "contents": "alert(${0:message})"
    }, {
        "trigger": "clearInterval()",
        "contents": "clearInterval(${0:timerId})"
    }, {
        "trigger": "clearTimeout()",
        "contents": "clearTimeout(${0:timerId})"
    }, {
        "trigger": "require()",
        "contents": "require(${0:moduleId})"
    }, {
        "trigger": "setInterval()",
        "contents": "setInterval(${0:function},${1:delay})"
    }, {
        "trigger": "setTimeout()",
        "contents": "setTimeout(${0:function},${1:delay})"
    }, "ViewTemplate", "bindId", "Ti.Proxy", "Ti.Android.PendingIntent", "flags", "intent", "updateCurrentIntent", {
        "trigger": "getFlags()",
        "contents": "getFlags()"
    }, {
        "trigger": "getIntent()",
        "contents": "getIntent()"
    }, {
        "trigger": "getUpdateCurrentIntent()",
        "contents": "getUpdateCurrentIntent()"
    }, "Ti.UI.Switch", "style", "titleOff", "titleOn", {
        "trigger": "getStyle()",
        "contents": "getStyle()"
    }, {
        "trigger": "getTitleOff()",
        "contents": "getTitleOff()"
    }, {
        "trigger": "getTitleOn()",
        "contents": "getTitleOn()"
    }, {
        "trigger": "setStyle()",
        "contents": "setStyle(${0:style})"
    }, {
        "trigger": "setTitleOff()",
        "contents": "setTitleOff(${0:titleOff})"
    }, {
        "trigger": "setTitleOn()",
        "contents": "setTitleOn(${0:titleOn})"
    }, "Ti.Android.RemoteViews", "layoutId", "packageName", {
        "trigger": "getLayoutId()",
        "contents": "getLayoutId()"
    }, {
        "trigger": "getPackageName()",
        "contents": "getPackageName()"
    }, {
        "trigger": "setBoolean()",
        "contents": "setBoolean(${0:viewId},${1:methodName},${2:value})"
    }, {
        "trigger": "setChronometer()",
        "contents": "setChronometer(${0:viewId},${1:base},${2:format},${3:started})"
    }, {
        "trigger": "setDouble()",
        "contents": "setDouble(${0:viewId},${1:methodName},${2:value})"
    }, {
        "trigger": "setImageViewResource()",
        "contents": "setImageViewResource(${0:viewId},${1:srcId})"
    }, {
        "trigger": "setImageViewUri()",
        "contents": "setImageViewUri(${0:viewId},${1:uri})"
    }, {
        "trigger": "setInt()",
        "contents": "setInt(${0:viewId},${1:methodName},${2:value})"
    }, {
        "trigger": "setOnClickPendingIntent()",
        "contents": "setOnClickPendingIntent(${0:viewId},${1:pendingIntent})"
    }, {
        "trigger": "setProgressBar()",
        "contents": "setProgressBar(${0:viewId},${1:max},${2:progress},${3:indeterminate})"
    }, {
        "trigger": "setString()",
        "contents": "setString(${0:viewId},${1:methodName},${2:value})"
    }, {
        "trigger": "setTextColor()",
        "contents": "setTextColor(${0:viewId},${1:color})"
    }, {
        "trigger": "setTextViewText()",
        "contents": "setTextViewText(${0:viewId},${1:text})"
    }, {
        "trigger": "setUri()",
        "contents": "setUri(${0:viewId},${1:methodName},${2:value})"
    }, {
        "trigger": "setViewVisibility()",
        "contents": "setViewVisibility(${0:viewId},${1:visibility})"
    }, "Ti.App", "Ti.App.EVENT_ACCESSIBILITY_ANNOUNCEMENT", "Ti.App.EVENT_ACCESSIBILITY_CHANGED", "accessibilityEnabled", "analytics", "copyright", "deployType", "description", "disableNetworkActivityIndicator", "guid", "idleTimerDisabled", "installId", "keyboardVisible", "proximityDetection", "proximityState", "publisher", "sessionId", "version", {
        "trigger": "fireSystemEvent()",
        "contents": "fireSystemEvent(${0:eventName},${1:param})"
    }, {
        "trigger": "getAccessibilityEnabled()",
        "contents": "getAccessibilityEnabled()"
    }, {
        "trigger": "getAnalytics()",
        "contents": "getAnalytics()"
    }, {
        "trigger": "getArguments()",
        "contents": "getArguments()"
    }, {
        "trigger": "getCopyright()",
        "contents": "getCopyright()"
    }, {
        "trigger": "getDeployType()",
        "contents": "getDeployType()"
    }, {
        "trigger": "getDescription()",
        "contents": "getDescription()"
    }, {
        "trigger": "getDisableNetworkActivityIndicator()",
        "contents": "getDisableNetworkActivityIndicator()"
    }, {
        "trigger": "getGuid()",
        "contents": "getGuid()"
    }, {
        "trigger": "getIdleTimerDisabled()",
        "contents": "getIdleTimerDisabled()"
    }, {
        "trigger": "getInstallId()",
        "contents": "getInstallId()"
    }, {
        "trigger": "getKeyboardVisible()",
        "contents": "getKeyboardVisible()"
    }, {
        "trigger": "getProximityDetection()",
        "contents": "getProximityDetection()"
    }, {
        "trigger": "getProximityState()",
        "contents": "getProximityState()"
    }, {
        "trigger": "getPublisher()",
        "contents": "getPublisher()"
    }, {
        "trigger": "getSessionId()",
        "contents": "getSessionId()"
    }, {
        "trigger": "getVersion()",
        "contents": "getVersion()"
    }, {
        "trigger": "setDisableNetworkActivityIndicator()",
        "contents": "setDisableNetworkActivityIndicator(${0:disableNetworkActivityIndicator})"
    }, {
        "trigger": "setIdleTimerDisabled()",
        "contents": "setIdleTimerDisabled(${0:idleTimerDisabled})"
    }, {
        "trigger": "setProximityDetection()",
        "contents": "setProximityDetection(${0:proximityDetection})"
    }, "Ti.Map.View", "annotations", "hideAnnotationWhenTouchMap", "mapType", "region", "userLocation", {
        "trigger": "addAnnotation()",
        "contents": "addAnnotation(${0:annotation})"
    }, {
        "trigger": "addAnnotations()",
        "contents": "addAnnotations(${0:annotations})"
    }, {
        "trigger": "addRoute()",
        "contents": "addRoute(${0:route})"
    }, {
        "trigger": "deselectAnnotation()",
        "contents": "deselectAnnotation(${0:annotation})"
    }, {
        "trigger": "getAnimate()",
        "contents": "getAnimate()"
    }, {
        "trigger": "getAnimated()",
        "contents": "getAnimated()"
    }, {
        "trigger": "getAnnotations()",
        "contents": "getAnnotations()"
    }, {
        "trigger": "getHideAnnotationWhenTouchMap()",
        "contents": "getHideAnnotationWhenTouchMap()"
    }, {
        "trigger": "getLatitudeDelta()",
        "contents": "getLatitudeDelta()"
    }, {
        "trigger": "getLongitudeDelta()",
        "contents": "getLongitudeDelta()"
    }, {
        "trigger": "getMapType()",
        "contents": "getMapType()"
    }, {
        "trigger": "getRegion()",
        "contents": "getRegion()"
    }, {
        "trigger": "getRegionFit()",
        "contents": "getRegionFit()"
    }, {
        "trigger": "getUserLocation()",
        "contents": "getUserLocation()"
    }, {
        "trigger": "removeAllAnnotations()",
        "contents": "removeAllAnnotations()"
    }, {
        "trigger": "removeAnnotation()",
        "contents": "removeAnnotation(${0:annotation})"
    }, {
        "trigger": "removeAnnotations()",
        "contents": "removeAnnotations(${0:annotations})"
    }, {
        "trigger": "removeRoute()",
        "contents": "removeRoute(${0:route})"
    }, {
        "trigger": "selectAnnotation()",
        "contents": "selectAnnotation(${0:annotation})"
    }, {
        "trigger": "setAnimate()",
        "contents": "setAnimate(${0:animate})"
    }, {
        "trigger": "setAnimated()",
        "contents": "setAnimated(${0:animated})"
    }, {
        "trigger": "setAnnotations()",
        "contents": "setAnnotations(${0:annotations})"
    }, {
        "trigger": "setHideAnnotationWhenTouchMap()",
        "contents": "setHideAnnotationWhenTouchMap(${0:hideAnnotationWhenTouchMap})"
    }, {
        "trigger": "setMapType()",
        "contents": "setMapType(${0:mapType})"
    }, {
        "trigger": "setRegion()",
        "contents": "setRegion(${0:region})"
    }, {
        "trigger": "setRegionFit()",
        "contents": "setRegionFit(${0:regionFit})"
    }, {
        "trigger": "setUserLocation()",
        "contents": "setUserLocation(${0:userLocation})"
    }, {
        "trigger": "zoom()",
        "contents": "zoom(${0:level})"
    }, "GradientColorRef", "offset", "Ti.UI.TextArea", "scrollable", "scrollsToTop", {
        "trigger": "getScrollable()",
        "contents": "getScrollable()"
    }, {
        "trigger": "getScrollsToTop()",
        "contents": "getScrollsToTop()"
    }, {
        "trigger": "setScrollable()",
        "contents": "setScrollable(${0:scrollable})"
    }, {
        "trigger": "setScrollsToTop()",
        "contents": "setScrollsToTop(${0:scrollsToTop})"
    }, "Font", "fontFamily", "fontSize", "fontStyle", "fontWeight", "Ti.Stream", {
        "trigger": "createStream()",
        "contents": "createStream(${0:params})"
    }, {
        "trigger": "pump()",
        "contents": "pump(${0:inputStream},${1:handler},${2:maxChunkSize},${3:isAsync})"
    }, {
        "trigger": "readAll()",
        "contents": "readAll(${0:sourceStream},${1:buffer},${2:resultsCallback})"
    }, {
        "trigger": "writeStream()",
        "contents": "writeStream(${0:inputStream},${1:outputStream},${2:maxChunkSize},${3:resultsCallback})"
    }, "showContactsParams", "fields", "selectedPerson", "selectedProperty", "Ti.Geolocation.Android", "manualMode", {
        "trigger": "addLocationProvider()",
        "contents": "addLocationProvider(${0:provider})"
    }, {
        "trigger": "addLocationRule()",
        "contents": "addLocationRule(${0:rule})"
    }, {
        "trigger": "createLocationProvider()",
        "contents": "createLocationProvider(${0:parameters})"
    }, {
        "trigger": "createLocationRule()",
        "contents": "createLocationRule(${0:parameters})"
    }, {
        "trigger": "getManualMode()",
        "contents": "getManualMode()"
    }, {
        "trigger": "removeLocationProvider()",
        "contents": "removeLocationProvider(${0:provider})"
    }, {
        "trigger": "removeLocationRule()",
        "contents": "removeLocationRule(${0:rule})"
    }, {
        "trigger": "setManualMode()",
        "contents": "setManualMode(${0:manualMode})"
    }, "Ti.UI.ActivityIndicatorStyle", "Ti.UI.ActivityIndicatorStyle.BIG_DARK", "Ti.Module", "Ti.UI.iPhone.TableViewSeparatorStyle", "Ti.UI.iPhone.ListViewCellSelectionStyle", "Ti.UI.iPhone.ListViewCellSelectionStyle.BLUE", "Ti.UI.iPhone.ListViewCellSelectionStyle.GRAY", "Ti.App.Android.R", "Ti.UI", "Ti.UI.AUTOLINK_ALL", "Ti.UI.AUTOLINK_CALENDAR", "Ti.UI.AUTOLINK_EMAIL_ADDRESSES", "Ti.UI.AUTOLINK_MAP_ADDRESSES", "Ti.UI.AUTOLINK_NONE", "Ti.UI.AUTOLINK_PHONE_NUMBERS", "Ti.UI.AUTOLINK_URLS", "Ti.UI.FACE_DOWN", "Ti.UI.FACE_UP", "Ti.UI.FILL", "Ti.UI.INHERIT", "Ti.UI.INPUT_BORDERSTYLE_BEZEL", "Ti.UI.INPUT_BORDERSTYLE_LINE", "Ti.UI.INPUT_BORDERSTYLE_NONE", "Ti.UI.INPUT_BORDERSTYLE_ROUNDED", "Ti.UI.INPUT_BUTTONMODE_ALWAYS", "Ti.UI.INPUT_BUTTONMODE_NEVER", "Ti.UI.INPUT_BUTTONMODE_ONBLUR", "Ti.UI.INPUT_BUTTONMODE_ONFOCUS", "Ti.UI.KEYBOARD_APPEARANCE_ALERT", "Ti.UI.KEYBOARD_APPEARANCE_DEFAULT", "Ti.UI.KEYBOARD_ASCII", "Ti.UI.KEYBOARD_DECIMAL_PAD", "Ti.UI.KEYBOARD_DEFAULT", "Ti.UI.KEYBOARD_EMAIL", "Ti.UI.KEYBOARD_NAMEPHONE_PAD", "Ti.UI.KEYBOARD_NUMBERS_PUNCTUATION", "Ti.UI.KEYBOARD_NUMBER_PAD", "Ti.UI.KEYBOARD_PHONE_PAD", "Ti.UI.KEYBOARD_URL", "Ti.UI.LANDSCAPE_LEFT", "Ti.UI.LANDSCAPE_RIGHT", "Ti.UI.LIST_ACCESSORY_TYPE_CHECKMARK", "Ti.UI.LIST_ACCESSORY_TYPE_DETAIL", "Ti.UI.LIST_ACCESSORY_TYPE_DISCLOSURE", "Ti.UI.LIST_ACCESSORY_TYPE_NONE", "Ti.UI.LIST_ITEM_TEMPLATE_CONTACTS", "Ti.UI.LIST_ITEM_TEMPLATE_DEFAULT", "Ti.UI.LIST_ITEM_TEMPLATE_SETTINGS", "Ti.UI.LIST_ITEM_TEMPLATE_SUBTITLE", "Ti.UI.NOTIFICATION_DURATION_LONG", "Ti.UI.NOTIFICATION_DURATION_SHORT", "Ti.UI.PICKER_TYPE_COUNT_DOWN_TIMER", "Ti.UI.PICKER_TYPE_DATE", "Ti.UI.PICKER_TYPE_DATE_AND_TIME", "Ti.UI.PICKER_TYPE_PLAIN", "Ti.UI.PICKER_TYPE_TIME", "Ti.UI.PORTRAIT", "Ti.UI.RETURNKEY_DEFAULT", "Ti.UI.RETURNKEY_DONE", "Ti.UI.RETURNKEY_EMERGENCY_CALL", "Ti.UI.RETURNKEY_GO", "Ti.UI.RETURNKEY_GOOGLE", "Ti.UI.RETURNKEY_JOIN", "Ti.UI.RETURNKEY_NEXT", "Ti.UI.RETURNKEY_ROUTE", "Ti.UI.RETURNKEY_SEARCH", "Ti.UI.RETURNKEY_SEND", "Ti.UI.RETURNKEY_YAHOO", "Ti.UI.SIZE", "Ti.UI.TEXT_ALIGNMENT_CENTER", "Ti.UI.TEXT_ALIGNMENT_LEFT", "Ti.UI.TEXT_ALIGNMENT_RIGHT", "Ti.UI.TEXT_AUTOCAPITALIZATION_ALL", "Ti.UI.TEXT_AUTOCAPITALIZATION_NONE", "Ti.UI.TEXT_AUTOCAPITALIZATION_SENTENCES", "Ti.UI.TEXT_AUTOCAPITALIZATION_WORDS", "Ti.UI.TEXT_VERTICAL_ALIGNMENT_BOTTOM", "Ti.UI.TEXT_VERTICAL_ALIGNMENT_CENTER", "Ti.UI.TEXT_VERTICAL_ALIGNMENT_TOP", "Ti.UI.UNIT_CM", "Ti.UI.UNIT_DIP", "Ti.UI.UNIT_IN", "Ti.UI.UNIT_MM", "Ti.UI.UNIT_PX", "Ti.UI.UNKNOWN", "Ti.UI.UPSIDE_PORTRAIT", "Ti.UI.URL_ERROR_AUTHENTICATION", "Ti.UI.URL_ERROR_BAD_URL", "Ti.UI.URL_ERROR_CONNECT", "Ti.UI.URL_ERROR_FILE", "Ti.UI.URL_ERROR_FILE_NOT_FOUND", "Ti.UI.URL_ERROR_HOST_LOOKUP", "Ti.UI.URL_ERROR_REDIRECT_LOOP", "Ti.UI.URL_ERROR_SSL_FAILED", "Ti.UI.URL_ERROR_TIMEOUT", "Ti.UI.URL_ERROR_UNKNOWN", "Ti.UI.URL_ERROR_UNSUPPORTED_SCHEME", "currentTab", "currentWindow", "orientation", {
        "trigger": "convertUnits()",
        "contents": "convertUnits(${0:convertFromValue},${1:convertToUnits})"
    }, {
        "trigger": "create2DMatrix()",
        "contents": "create2DMatrix(${0:parameters})"
    }, {
        "trigger": "createActivityIndicator()",
        "contents": "createActivityIndicator(${0:parameters})"
    }, {
        "trigger": "createAlertDialog()",
        "contents": "createAlertDialog(${0:parameters})"
    }, {
        "trigger": "createAnimation()",
        "contents": "createAnimation(${0:parameters})"
    }, {
        "trigger": "createButton()",
        "contents": "createButton(${0:parameters})"
    }, {
        "trigger": "createButtonBar()",
        "contents": "createButtonBar(${0:parameters})"
    }, {
        "trigger": "createDashboardItem()",
        "contents": "createDashboardItem(${0:parameters})"
    }, {
        "trigger": "createDashboardView()",
        "contents": "createDashboardView(${0:parameters})"
    }, {
        "trigger": "createEmailDialog()",
        "contents": "createEmailDialog(${0:parameters})"
    }, {
        "trigger": "createImageView()",
        "contents": "createImageView(${0:parameters})"
    }, {
        "trigger": "createLabel()",
        "contents": "createLabel(${0:parameters})"
    }, {
        "trigger": "createListSection()",
        "contents": "createListSection(${0:parameters})"
    }, {
        "trigger": "createListView()",
        "contents": "createListView(${0:parameters})"
    }, {
        "trigger": "createMaskedImage()",
        "contents": "createMaskedImage(${0:parameters})"
    }, {
        "trigger": "createNotification()",
        "contents": "createNotification(${0:parameters})"
    }, {
        "trigger": "createOptionDialog()",
        "contents": "createOptionDialog(${0:parameters})"
    }, {
        "trigger": "createPicker()",
        "contents": "createPicker(${0:parameters})"
    }, {
        "trigger": "createPickerColumn()",
        "contents": "createPickerColumn(${0:parameters})"
    }, {
        "trigger": "createPickerRow()",
        "contents": "createPickerRow(${0:parameters})"
    }, {
        "trigger": "createProgressBar()",
        "contents": "createProgressBar(${0:parameters})"
    }, {
        "trigger": "createScrollView()",
        "contents": "createScrollView(${0:parameters})"
    }, {
        "trigger": "createScrollableView()",
        "contents": "createScrollableView(${0:parameters})"
    }, {
        "trigger": "createSearchBar()",
        "contents": "createSearchBar(${0:parameters})"
    }, {
        "trigger": "createSlider()",
        "contents": "createSlider(${0:parameters})"
    }, {
        "trigger": "createSwitch()",
        "contents": "createSwitch(${0:parameters})"
    }, {
        "trigger": "createTab()",
        "contents": "createTab(${0:parameters})"
    }, {
        "trigger": "createTabGroup()",
        "contents": "createTabGroup(${0:parameters})"
    }, {
        "trigger": "createTableView()",
        "contents": "createTableView(${0:parameters})"
    }, {
        "trigger": "createTableViewRow()",
        "contents": "createTableViewRow(${0:parameters})"
    }, {
        "trigger": "createTableViewSection()",
        "contents": "createTableViewSection(${0:parameters})"
    }, {
        "trigger": "createTextArea()",
        "contents": "createTextArea(${0:parameters})"
    }, {
        "trigger": "createTextField()",
        "contents": "createTextField(${0:parameters})"
    }, {
        "trigger": "createView()",
        "contents": "createView(${0:parameters})"
    }, {
        "trigger": "createWebView()",
        "contents": "createWebView(${0:parameters})"
    }, {
        "trigger": "createWindow()",
        "contents": "createWindow(${0:parameters})"
    }, {
        "trigger": "getCurrentTab()",
        "contents": "getCurrentTab()"
    }, {
        "trigger": "getCurrentWindow()",
        "contents": "getCurrentWindow()"
    }, {
        "trigger": "getOrientation()",
        "contents": "getOrientation()"
    }, {
        "trigger": "setCurrentTab()",
        "contents": "setCurrentTab(${0:currentTab})"
    }, {
        "trigger": "setOrientation()",
        "contents": "setOrientation(${0:orientation})"
    }, "CloudEventOccurrencesResponse", "event_occurrences", "Ti.UI.MobileWeb.NavigationGroup", "navBarAtTop", "window", {
        "trigger": "getNavBarAtTop()",
        "contents": "getNavBarAtTop()"
    }, {
        "trigger": "getWindow()",
        "contents": "getWindow()"
    }, {
        "trigger": "setNavBarAtTop()",
        "contents": "setNavBarAtTop(${0:navBarAtTop})"
    }, "daysOfTheWeekDictionary", "daysOfWeek", "week", "CloudPlacesResponse", "places", "Ti.App.iOS.BackgroundService", {
        "trigger": "unregister()",
        "contents": "unregister()"
    }, "BarItemType", "Ti.Calendar.Alert", "absoluteDate", "relativeOffset", {
        "trigger": "getAbsoluteDate()",
        "contents": "getAbsoluteDate()"
    }, {
        "trigger": "getRelativeOffset()",
        "contents": "getRelativeOffset()"
    }, {
        "trigger": "setAbsoluteDate()",
        "contents": "setAbsoluteDate(${0:absoluteDate})"
    }, {
        "trigger": "setRelativeOffset()",
        "contents": "setRelativeOffset(${0:relativeOffset})"
    }, "Ti.Android", "Ti.Android.ACTION_AIRPLANE_MODE_CHANGED", "Ti.Android.ACTION_ALL_APPS", "Ti.Android.ACTION_ANSWER", "Ti.Android.ACTION_ATTACH_DATA", "Ti.Android.ACTION_BATTERY_CHANGED", "Ti.Android.ACTION_BATTERY_LOW", "Ti.Android.ACTION_BATTERY_OKAY", "Ti.Android.ACTION_BOOT_COMPLETED", "Ti.Android.ACTION_BUG_REPORT", "Ti.Android.ACTION_CALL", "Ti.Android.ACTION_CALL_BUTTON", "Ti.Android.ACTION_CAMERA_BUTTON", "Ti.Android.ACTION_CHOOSER", "Ti.Android.ACTION_CLOSE_SYSTEM_DIALOGS", "Ti.Android.ACTION_CONFIGURATION_CHANGED", "Ti.Android.ACTION_CREATE_SHORTCUT", "Ti.Android.ACTION_DATE_CHANGED", "Ti.Android.ACTION_DEFAULT", "Ti.Android.ACTION_DELETE", "Ti.Android.ACTION_DEVICE_STORAGE_LOW", "Ti.Android.ACTION_DIAL", "Ti.Android.ACTION_EDIT", "Ti.Android.ACTION_GET_CONTENT", "Ti.Android.ACTION_GTALK_SERVICE_CONNECTED", "Ti.Android.ACTION_GTALK_SERVICE_DISCONNECTED", "Ti.Android.ACTION_HEADSET_PLUG", "Ti.Android.ACTION_INPUT_METHOD_CHANGED", "Ti.Android.ACTION_INSERT", "Ti.Android.ACTION_INSERT_OR_EDIT", "Ti.Android.ACTION_MAIN", "Ti.Android.ACTION_MANAGE_PACKAGE_STORAGE", "Ti.Android.ACTION_MEDIA_BAD_REMOVAL", "Ti.Android.ACTION_MEDIA_BUTTON", "Ti.Android.ACTION_MEDIA_CHECKING", "Ti.Android.ACTION_MEDIA_EJECT", "Ti.Android.ACTION_MEDIA_MOUNTED", "Ti.Android.ACTION_MEDIA_NOFS", "Ti.Android.ACTION_MEDIA_REMOVED", "Ti.Android.ACTION_MEDIA_SCANNER_FINISHED", "Ti.Android.ACTION_MEDIA_SCANNER_SCAN_FILE", "Ti.Android.ACTION_MEDIA_SCANNER_STARTED", "Ti.Android.ACTION_MEDIA_SHARED", "Ti.Android.ACTION_MEDIA_UNMOUNTABLE", "Ti.Android.ACTION_MEDIA_UNMOUNTED", "Ti.Android.ACTION_NEW_OUTGOING_CALL", "Ti.Android.ACTION_PACKAGE_ADDED", "Ti.Android.ACTION_PACKAGE_CHANGED", "Ti.Android.ACTION_PACKAGE_DATA_CLEARED", "Ti.Android.ACTION_PACKAGE_INSTALL", "Ti.Android.ACTION_PACKAGE_REMOVED", "Ti.Android.ACTION_PACKAGE_REPLACED", "Ti.Android.ACTION_PACKAGE_RESTARTED", "Ti.Android.ACTION_PICK", "Ti.Android.ACTION_PICK_ACTIVITY", "Ti.Android.ACTION_POWER_CONNECTED", "Ti.Android.ACTION_POWER_DISCONNECTED", "Ti.Android.ACTION_POWER_USAGE_SUMMARY", "Ti.Android.ACTION_PROVIDER_CHANGED", "Ti.Android.ACTION_REBOOT", "Ti.Android.ACTION_RUN", "Ti.Android.ACTION_SCREEN_OFF", "Ti.Android.ACTION_SCREEN_ON", "Ti.Android.ACTION_SEARCH", "Ti.Android.ACTION_SEARCH_LONG_PRESS", "Ti.Android.ACTION_SEND", "Ti.Android.ACTION_SENDTO", "Ti.Android.ACTION_SEND_MULTIPLE", "Ti.Android.ACTION_SET_WALLPAPER", "Ti.Android.ACTION_SHUTDOWN", "Ti.Android.ACTION_SYNC", "Ti.Android.ACTION_SYSTEM_TUTORIAL", "Ti.Android.ACTION_TIME_CHANGED", "Ti.Android.ACTION_TIME_TICK", "Ti.Android.ACTION_UID_REMOVED", "Ti.Android.ACTION_UMS_CONNECTED", "Ti.Android.ACTION_UMS_DISCONNECTED", "Ti.Android.ACTION_USER_PRESENT", "Ti.Android.ACTION_VIEW", "Ti.Android.ACTION_VOICE_COMMAND", "Ti.Android.ACTION_WALLPAPER_CHANGED", "Ti.Android.ACTION_WEB_SEARCH", "Ti.Android.CATEGORY_ALTERNATIVE", "Ti.Android.CATEGORY_BROWSABLE", "Ti.Android.CATEGORY_DEFAULT", "Ti.Android.CATEGORY_DEVELOPMENT_PREFERENCE", "Ti.Android.CATEGORY_EMBED", "Ti.Android.CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST", "Ti.Android.CATEGORY_HOME", "Ti.Android.CATEGORY_INFO", "Ti.Android.CATEGORY_LAUNCHER", "Ti.Android.CATEGORY_MONKEY", "Ti.Android.CATEGORY_OPENABLE", "Ti.Android.CATEGORY_PREFERENCE", "Ti.Android.CATEGORY_SAMPLE_CODE", "Ti.Android.CATEGORY_SELECTED_ALTERNATIVE", "Ti.Android.CATEGORY_TAB", "Ti.Android.CATEGORY_TEST", "Ti.Android.CATEGORY_UNIT_TEST", "Ti.Android.EXTRA_ALARM_COUNT", "Ti.Android.EXTRA_BCC", "Ti.Android.EXTRA_CC", "Ti.Android.EXTRA_DATA_REMOVED", "Ti.Android.EXTRA_DONT_KILL_APP", "Ti.Android.EXTRA_EMAIL", "Ti.Android.EXTRA_INTENT", "Ti.Android.EXTRA_KEY_EVENT", "Ti.Android.EXTRA_PHONE_NUMBER", "Ti.Android.EXTRA_REPLACING", "Ti.Android.EXTRA_SHORTCUT_ICON", "Ti.Android.EXTRA_SHORTCUT_ICON_RESOURCE", "Ti.Android.EXTRA_SHORTCUT_INTENT", "Ti.Android.EXTRA_SHORTCUT_NAME", "Ti.Android.EXTRA_STREAM", "Ti.Android.EXTRA_SUBJECT", "Ti.Android.EXTRA_TEMPLATE", "Ti.Android.EXTRA_TEXT", "Ti.Android.EXTRA_TITLE", "Ti.Android.EXTRA_UID", "Ti.Android.FILL_IN_ACTION", "Ti.Android.FILL_IN_CATEGORIES", "Ti.Android.FILL_IN_COMPONENT", "Ti.Android.FILL_IN_DATA", "Ti.Android.FILL_IN_PACKAGE", "Ti.Android.FLAG_ACTIVITY_BROUGHT_TO_FRONT", "Ti.Android.FLAG_ACTIVITY_CLEAR_TOP", "Ti.Android.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET", "Ti.Android.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS", "Ti.Android.FLAG_ACTIVITY_FORWARD_RESULT", "Ti.Android.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY", "Ti.Android.FLAG_ACTIVITY_MULTIPLE_TASK", "Ti.Android.FLAG_ACTIVITY_NEW_TASK", "Ti.Android.FLAG_ACTIVITY_NO_ANIMATION", "Ti.Android.FLAG_ACTIVITY_NO_HISTORY", "Ti.Android.FLAG_ACTIVITY_NO_USER_ACTION", "Ti.Android.FLAG_ACTIVITY_PREVIOUS_IS_TOP", "Ti.Android.FLAG_ACTIVITY_REORDER_TO_FRONT", "Ti.Android.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED", "Ti.Android.FLAG_ACTIVITY_SINGLE_TOP", "Ti.Android.FLAG_CANCEL_CURRENT", "Ti.Android.FLAG_DEBUG_LOG_RESOLUTION", "Ti.Android.FLAG_FROM_BACKGROUND", "Ti.Android.FLAG_GRANT_READ_URI_PERMISSION", "Ti.Android.FLAG_GRANT_WRITE_URI_PERMISSION", "Ti.Android.FLAG_NO_CREATE", "Ti.Android.FLAG_ONE_SHOT", "Ti.Android.FLAG_RECEIVER_REGISTERED_ONLY", "Ti.Android.FLAG_UPDATE_CURRENT", "Ti.Android.PENDING_INTENT_FOR_ACTIVITY", "Ti.Android.PENDING_INTENT_FOR_BROADCAST", "Ti.Android.PENDING_INTENT_FOR_SERVICE", "Ti.Android.PENDING_INTENT_MAX_VALUE", "Ti.Android.R", "Ti.Android.RESULT_CANCELED", "Ti.Android.RESULT_FIRST_USER", "Ti.Android.RESULT_OK", "Ti.Android.SCREEN_ORIENTATION_BEHIND", "Ti.Android.SCREEN_ORIENTATION_LANDSCAPE", "Ti.Android.SCREEN_ORIENTATION_NOSENSOR", "Ti.Android.SCREEN_ORIENTATION_PORTRAIT", "Ti.Android.SCREEN_ORIENTATION_SENSOR", "Ti.Android.SCREEN_ORIENTATION_UNSPECIFIED", "Ti.Android.SCREEN_ORIENTATION_USER", "Ti.Android.SHOW_AS_ACTION_ALWAYS", "Ti.Android.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW", "Ti.Android.SHOW_AS_ACTION_IF_ROOM", "Ti.Android.SHOW_AS_ACTION_NEVER", "Ti.Android.SHOW_AS_ACTION_WITH_TEXT", "Ti.Android.START_NOT_STICKY", "Ti.Android.START_REDELIVER_INTENT", "Ti.Android.STREAM_ALARM", "Ti.Android.STREAM_MUSIC", "Ti.Android.STREAM_NOTIFICATION", "Ti.Android.STREAM_RING", "Ti.Android.STREAM_SYSTEM", "Ti.Android.STREAM_VOICE_CALL", "Ti.Android.URI_INTENT_SCHEME", "currentActivity", "currentService", {
        "trigger": "createBroadcastReceiver()",
        "contents": "createBroadcastReceiver(${0:parameters})"
    }, {
        "trigger": "createIntent()",
        "contents": "createIntent(${0:parameters})"
    }, {
        "trigger": "createIntentChooser()",
        "contents": "createIntentChooser(${0:intent},${1:title})"
    }, {
        "trigger": "createPendingIntent()",
        "contents": "createPendingIntent(${0:parameters})"
    }, {
        "trigger": "createRemoteViews()",
        "contents": "createRemoteViews(${0:parameters})"
    }, {
        "trigger": "createService()",
        "contents": "createService(${0:intent})"
    }, {
        "trigger": "createServiceIntent()",
        "contents": "createServiceIntent(${0:options})"
    }, {
        "trigger": "getCurrentActivity()",
        "contents": "getCurrentActivity()"
    }, {
        "trigger": "getCurrentService()",
        "contents": "getCurrentService()"
    }, {
        "trigger": "isServiceRunning()",
        "contents": "isServiceRunning(${0:intent})"
    }, {
        "trigger": "registerBroadcastReceiver()",
        "contents": "registerBroadcastReceiver(${0:broadcastReceiver},${1:actions})"
    }, {
        "trigger": "startService()",
        "contents": "startService(${0:intent})"
    }, {
        "trigger": "stopService()",
        "contents": "stopService(${0:intent})"
    }, {
        "trigger": "unregisterBroadcastReceiver()",
        "contents": "unregisterBroadcastReceiver(${0:broadcastReceiver})"
    }, "CreateStreamArgs", "Ti.UI.ProgressBar", "max", "min", {
        "trigger": "getMax()",
        "contents": "getMax()"
    }, {
        "trigger": "getMessage()",
        "contents": "getMessage()"
    }, {
        "trigger": "getMin()",
        "contents": "getMin()"
    }, {
        "trigger": "setMax()",
        "contents": "setMax(${0:max})"
    }, {
        "trigger": "setMessage()",
        "contents": "setMessage(${0:message})"
    }, {
        "trigger": "setMin()",
        "contents": "setMin(${0:min})"
    }, "EncodeNumberDict", "byteOrder", "dest", "CloudUsersResponse", "Ti.Geolocation.MobileWeb", "forwardGeocoderTimeout", "locationTimeout", "maximumHeadingAge", "maximumLocationAge", "reverseGeocoderTimeout", {
        "trigger": "getForwardGeocoderTimeout()",
        "contents": "getForwardGeocoderTimeout()"
    }, {
        "trigger": "getLocationTimeout()",
        "contents": "getLocationTimeout()"
    }, {
        "trigger": "getMaximumHeadingAge()",
        "contents": "getMaximumHeadingAge()"
    }, {
        "trigger": "getMaximumLocationAge()",
        "contents": "getMaximumLocationAge()"
    }, {
        "trigger": "getReverseGeocoderTimeout()",
        "contents": "getReverseGeocoderTimeout()"
    }, {
        "trigger": "setForwardGeocoderTimeout()",
        "contents": "setForwardGeocoderTimeout(${0:forwardGeocoderTimeout})"
    }, {
        "trigger": "setLocationTimeout()",
        "contents": "setLocationTimeout(${0:locationTimeout})"
    }, {
        "trigger": "setMaximumHeadingAge()",
        "contents": "setMaximumHeadingAge(${0:maximumHeadingAge})"
    }, {
        "trigger": "setMaximumLocationAge()",
        "contents": "setMaximumLocationAge(${0:maximumLocationAge})"
    }, {
        "trigger": "setReverseGeocoderTimeout()",
        "contents": "setReverseGeocoderTimeout(${0:reverseGeocoderTimeout})"
    }, "TableViewContentInsetOption", "Ti.Accelerometer", "CloudCheckinsResponse", "checkins", "Ti.UI.TabbedBar", "labels", {
        "trigger": "getIndex()",
        "contents": "getIndex()"
    }, {
        "trigger": "getLabels()",
        "contents": "getLabels()"
    }, {
        "trigger": "setIndex()",
        "contents": "setIndex(${0:index})"
    }, {
        "trigger": "setLabels()",
        "contents": "setLabels(${0:labels})"
    }, "Ti.Yahoo", {
        "trigger": "yql()",
        "contents": "yql(${0:yql},${1:callback})"
    }, "hideParams", "CloudFriendRequestsResponse", "friend_requests", "Global.JSON", {
        "trigger": "parse()",
        "contents": "parse(${0:text},${1:reviver})"
    }, {
        "trigger": "stringify()",
        "contents": "stringify(${0:value},${1:replacer},${2:space})"
    }, "Ti.Android.Service", "serviceInstanceId", {
        "trigger": "getServiceInstanceId()",
        "contents": "getServiceInstanceId()"
    }, "LocationProviderDict", "power", "CreateBufferArgs", "CameraOptionsType", "allowEditing", "arrowDirection", "autohide", "inPopOver", "overlay", "popoverView", "saveToPhotoGallery", "showControls", "videoMaximumDuration", "videoQuality", "HeadingData", "magneticHeading", "trueHeading", "z", "PhotoGalleryOptionsType", "Ti.Android.Intent", "action", "className", {
        "trigger": "addCategory()",
        "contents": "addCategory(${0:name})"
    }, {
        "trigger": "addFlags()",
        "contents": "addFlags(${0:flags})"
    }, {
        "trigger": "getAction()",
        "contents": "getAction()"
    }, {
        "trigger": "getBlobExtra()",
        "contents": "getBlobExtra(${0:name})"
    }, {
        "trigger": "getBooleanExtra()",
        "contents": "getBooleanExtra(${0:name})"
    }, {
        "trigger": "getClassName()",
        "contents": "getClassName()"
    }, {
        "trigger": "getDoubleExtra()",
        "contents": "getDoubleExtra(${0:name})"
    }, {
        "trigger": "getIntExtra()",
        "contents": "getIntExtra(${0:name})"
    }, {
        "trigger": "getLongExtra()",
        "contents": "getLongExtra(${0:name})"
    }, {
        "trigger": "getStringExtra()",
        "contents": "getStringExtra(${0:name})"
    }, {
        "trigger": "hasExtra()",
        "contents": "hasExtra(${0:name})"
    }, {
        "trigger": "putExtra()",
        "contents": "putExtra(${0:name},${1:value})"
    }, {
        "trigger": "putExtraUri()",
        "contents": "putExtraUri(${0:name},${1:value})"
    }, {
        "trigger": "setFlags()",
        "contents": "setFlags(${0:flags})"
    }, "FacebookDialogResponsev1", "cancelled", "CloudPushNotificationConfig", "Ti.UI.iPhone.AlertDialogStyle", "Ti.UI.iPhone.AlertDialogStyle.DEFAULT", "Ti.UI.iPhone.AlertDialogStyle.LOGIN_AND_PASSWORD_INPUT", "Ti.UI.iPhone.AlertDialogStyle.PLAIN_TEXT_INPUT", "Ti.UI.iPhone.AlertDialogStyle.SECURE_TEXT_INPUT", "Ti.UI.Clipboard", {
        "trigger": "clearData()",
        "contents": "clearData(${0:type})"
    }, {
        "trigger": "clearText()",
        "contents": "clearText()"
    }, {
        "trigger": "hasData()",
        "contents": "hasData(${0:type})"
    }, {
        "trigger": "setText()",
        "contents": "setText(${0:text})"
    }, "Ti.UI.iPhone.ListViewScrollPosition", "Ti.UI.iPhone.ListViewScrollPosition.BOTTOM", "Ti.UI.iPhone.ListViewScrollPosition.MIDDLE", "Ti.UI.iPhone.ListViewScrollPosition.TOP", "Ti.UI.Button", "selectedColor", "systemButton", "titleid", {
        "trigger": "getSelectedColor()",
        "contents": "getSelectedColor()"
    }, {
        "trigger": "getSystemButton()",
        "contents": "getSystemButton()"
    }, {
        "trigger": "getTitleid()",
        "contents": "getTitleid()"
    }, {
        "trigger": "setSelectedColor()",
        "contents": "setSelectedColor(${0:selectedColor})"
    }, {
        "trigger": "setSystemButton()",
        "contents": "setSystemButton(${0:systemButton})"
    }, {
        "trigger": "setTitleid()",
        "contents": "setTitleid(${0:titleid})"
    }, "Ti.UI.OptionDialog", "androidView", "destructive", "options", "persistent", "selectedIndex", "tizenView", {
        "trigger": "getAndroidView()",
        "contents": "getAndroidView()"
    }, {
        "trigger": "getCancel()",
        "contents": "getCancel()"
    }, {
        "trigger": "getDestructive()",
        "contents": "getDestructive()"
    }, {
        "trigger": "getOptions()",
        "contents": "getOptions()"
    }, {
        "trigger": "getPersistent()",
        "contents": "getPersistent()"
    }, {
        "trigger": "getSelectedIndex()",
        "contents": "getSelectedIndex()"
    }, {
        "trigger": "getTizenView()",
        "contents": "getTizenView()"
    }, {
        "trigger": "setAndroidView()",
        "contents": "setAndroidView(${0:androidView})"
    }, {
        "trigger": "setCancel()",
        "contents": "setCancel(${0:cancel})"
    }, {
        "trigger": "setPersistent()",
        "contents": "setPersistent(${0:persistent})"
    }, {
        "trigger": "setTizenView()",
        "contents": "setTizenView(${0:tizenView})"
    }, "Ti.UI.iPhone.TableViewCellSelectionStyle", "CloudFilesResponse", "files", "Ti.Cloud.Events", {
        "trigger": "queryOccurrences()",
        "contents": "queryOccurrences(${0:parameters},${1:callback})"
    }, {
        "trigger": "searchOccurrences()",
        "contents": "searchOccurrences(${0:parameters},${1:callback})"
    }, {
        "trigger": "showOccurrences()",
        "contents": "showOccurrences(${0:parameters},${1:callback})"
    }, "Ti.Android.Calendar.Event", "extendedProperties", "hasExtendedProperties", "reminders", "visibility", {
        "trigger": "createReminder()",
        "contents": "createReminder(${0:data})"
    }, {
        "trigger": "getExtendedProperties()",
        "contents": "getExtendedProperties()"
    }, {
        "trigger": "getExtendedProperty()",
        "contents": "getExtendedProperty(${0:name})"
    }, {
        "trigger": "getHasExtendedProperties()",
        "contents": "getHasExtendedProperties()"
    }, {
        "trigger": "getReminders()",
        "contents": "getReminders()"
    }, {
        "trigger": "getVisibility()",
        "contents": "getVisibility()"
    }, {
        "trigger": "setExtendedProperty()",
        "contents": "setExtendedProperty(${0:name},${1:value})"
    }, "Ti.UI.Tab", "active", "activeIcon", "badge", "icon", {
        "trigger": "getActive()",
        "contents": "getActive()"
    }, {
        "trigger": "getActiveIcon()",
        "contents": "getActiveIcon()"
    }, {
        "trigger": "getBadge()",
        "contents": "getBadge()"
    }, {
        "trigger": "getIcon()",
        "contents": "getIcon()"
    }, {
        "trigger": "setActive()",
        "contents": "setActive(${0:active})"
    }, {
        "trigger": "setActiveIcon()",
        "contents": "setActiveIcon(${0:activeIcon})"
    }, {
        "trigger": "setBadge()",
        "contents": "setBadge(${0:badge})"
    }, {
        "trigger": "setIcon()",
        "contents": "setIcon(${0:icon})"
    }, {
        "trigger": "setWindow()",
        "contents": "setWindow(${0:window})"
    }, "Ti.XML.ProcessingInstruction", "target", {
        "trigger": "getTarget()",
        "contents": "getTarget()"
    }, "CloudPhotoCollectionsResponse", "collections", "Ti.Network.Socket.TCP", "accepted", "connected", "host", "listenQueueSize", "timeout", {
        "trigger": "accept()",
        "contents": "accept(${0:options})"
    }, {
        "trigger": "getAccepted()",
        "contents": "getAccepted()"
    }, {
        "trigger": "getConnected()",
        "contents": "getConnected()"
    }, {
        "trigger": "getError()",
        "contents": "getError()"
    }, {
        "trigger": "getHost()",
        "contents": "getHost()"
    }, {
        "trigger": "getListenQueueSize()",
        "contents": "getListenQueueSize()"
    }, {
        "trigger": "getTimeout()",
        "contents": "getTimeout()"
    }, {
        "trigger": "setAccepted()",
        "contents": "setAccepted(${0:accepted})"
    }, {
        "trigger": "setConnected()",
        "contents": "setConnected(${0:connected})"
    }, {
        "trigger": "setError()",
        "contents": "setError(${0:error})"
    }, {
        "trigger": "setHost()",
        "contents": "setHost(${0:host})"
    }, {
        "trigger": "setListenQueueSize()",
        "contents": "setListenQueueSize(${0:listenQueueSize})"
    }, "CloudReviewsResponse", "reviews", "Ti.Facebook.LoginButton", "Ti.UI.TableViewRow", "hasCheck", "hasChild", "hasDetail", "indentionLevel", "leftImage", "moveable", "rightImage", "selectedBackgroundColor", "selectedBackgroundImage", "selectionStyle", {
        "trigger": "getHasCheck()",
        "contents": "getHasCheck()"
    }, {
        "trigger": "getHasChild()",
        "contents": "getHasChild()"
    }, {
        "trigger": "getHasDetail()",
        "contents": "getHasDetail()"
    }, {
        "trigger": "getIndentionLevel()",
        "contents": "getIndentionLevel()"
    }, {
        "trigger": "getLeftImage()",
        "contents": "getLeftImage()"
    }, {
        "trigger": "getMoveable()",
        "contents": "getMoveable()"
    }, {
        "trigger": "getRightImage()",
        "contents": "getRightImage()"
    }, {
        "trigger": "getSelectedBackgroundColor()",
        "contents": "getSelectedBackgroundColor()"
    }, {
        "trigger": "getSelectedBackgroundImage()",
        "contents": "getSelectedBackgroundImage()"
    }, {
        "trigger": "getSelectionStyle()",
        "contents": "getSelectionStyle()"
    }, {
        "trigger": "setClassName()",
        "contents": "setClassName(${0:className})"
    }, {
        "trigger": "setHasCheck()",
        "contents": "setHasCheck(${0:hasCheck})"
    }, {
        "trigger": "setHasChild()",
        "contents": "setHasChild(${0:hasChild})"
    }, {
        "trigger": "setHasDetail()",
        "contents": "setHasDetail(${0:hasDetail})"
    }, {
        "trigger": "setIndentionLevel()",
        "contents": "setIndentionLevel(${0:indentionLevel})"
    }, {
        "trigger": "setLeftImage()",
        "contents": "setLeftImage(${0:leftImage})"
    }, {
        "trigger": "setMoveable()",
        "contents": "setMoveable(${0:moveable})"
    }, {
        "trigger": "setRightImage()",
        "contents": "setRightImage(${0:rightImage})"
    }, {
        "trigger": "setSelectedBackgroundColor()",
        "contents": "setSelectedBackgroundColor(${0:selectedBackgroundColor})"
    }, {
        "trigger": "setSelectedBackgroundImage()",
        "contents": "setSelectedBackgroundImage(${0:selectedBackgroundImage})"
    }, {
        "trigger": "setSelectionStyle()",
        "contents": "setSelectionStyle(${0:selectionStyle})"
    }, "Ti.Android.R", "anim", "array", "attr", "dimen", "drawable", "integer", "string", "styleable", "ThumbnailResponse", "time", "Ti.App.iOS", "Ti.App.iOS.EVENT_ACCESSIBILITY_LAYOUT_CHANGED", "Ti.App.iOS.EVENT_ACCESSIBILITY_SCREEN_CHANGED", {
        "trigger": "cancelAllLocalNotifications()",
        "contents": "cancelAllLocalNotifications()"
    }, {
        "trigger": "cancelLocalNotification()",
        "contents": "cancelLocalNotification(${0:id})"
    }, {
        "trigger": "createLocalNotification()",
        "contents": "createLocalNotification(${0:parameters})"
    }, {
        "trigger": "registerBackgroundService()",
        "contents": "registerBackgroundService(${0:params})"
    }, {
        "trigger": "scheduleLocalNotification()",
        "contents": "scheduleLocalNotification(${0:params})"
    }, "Ti.UI.PickerRow", {
        "trigger": "getFontSize()",
        "contents": "getFontSize()"
    }, {
        "trigger": "setFontSize()",
        "contents": "setFontSize(${0:fontSize})"
    }, "Ti.Database.ResultSet", "fieldCount", "rowCount", "validRow", {
        "trigger": "field()",
        "contents": "field(${0:index},${1:type})"
    }, {
        "trigger": "fieldByName()",
        "contents": "fieldByName(${0:name},${1:type})"
    }, {
        "trigger": "fieldName()",
        "contents": "fieldName(${0:index})"
    }, {
        "trigger": "getFieldCount()",
        "contents": "getFieldCount()"
    }, {
        "trigger": "getFieldName()",
        "contents": "getFieldName(${0:index})"
    }, {
        "trigger": "getRowCount()",
        "contents": "getRowCount()"
    }, {
        "trigger": "getValidRow()",
        "contents": "getValidRow()"
    }, {
        "trigger": "isValidRow()",
        "contents": "isValidRow()"
    }, {
        "trigger": "next()",
        "contents": "next()"
    }, "Ti.UI.iPad", "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_ANY", "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_DOWN", "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_LEFT", "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_RIGHT", "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_UNKNOWN", "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_UP", {
        "trigger": "createPopover()",
        "contents": "createPopover(${0:parameters})"
    }, {
        "trigger": "createSplitWindow()",
        "contents": "createSplitWindow(${0:parameters})"
    }, "EventsAuthorizationResponse", "Dimension", "Ti.XML.Comment", "Ti.UI.iPhone.ProgressBarStyle", "Ti.UI.iPhone.ProgressBarStyle.BAR", "PlayerQueue", "Ti.Cloud.PushNotifications", {
        "trigger": "subscribe()",
        "contents": "subscribe(${0:parameters},${1:callback})"
    }, {
        "trigger": "unsubscribe()",
        "contents": "unsubscribe(${0:parameters},${1:callback})"
    }, "openWindowParams", "activityEnterAnimation", "activityExitAnimation", "modal", "modalStyle", "modalTransitionStyle", "navBarHidden", "transition", "Point", "Ti.UI.ButtonBar", "Ti.UI.PickerColumn", "rows", "selectedRow", {
        "trigger": "addRow()",
        "contents": "addRow(${0:row})"
    }, {
        "trigger": "getRows()",
        "contents": "getRows()"
    }, {
        "trigger": "getSelectedRow()",
        "contents": "getSelectedRow()"
    }, {
        "trigger": "removeRow()",
        "contents": "removeRow(${0:row})"
    }, {
        "trigger": "setSelectedRow()",
        "contents": "setSelectedRow(${0:selectedRow})"
    }, "CoverFlowImageType", "Ti", "buildDate", "buildHash", "userAgent", {
        "trigger": "createBuffer()",
        "contents": "createBuffer(${0:params})"
    }, {
        "trigger": "getBuildDate()",
        "contents": "getBuildDate()"
    }, {
        "trigger": "getBuildHash()",
        "contents": "getBuildHash()"
    }, {
        "trigger": "getUserAgent()",
        "contents": "getUserAgent()"
    }, {
        "trigger": "include()",
        "contents": "include(${0:name})"
    }, {
        "trigger": "setUserAgent()",
        "contents": "setUserAgent(${0:userAgent})"
    }, "CloudPhotosResponse", "photos", "Ti.UI.SearchBar", "hinttextid", "prompt", "promptid", "showBookmark", "showCancel", {
        "trigger": "getHinttextid()",
        "contents": "getHinttextid()"
    }, {
        "trigger": "getPrompt()",
        "contents": "getPrompt()"
    }, {
        "trigger": "getPromptid()",
        "contents": "getPromptid()"
    }, {
        "trigger": "getShowBookmark()",
        "contents": "getShowBookmark()"
    }, {
        "trigger": "getShowCancel()",
        "contents": "getShowCancel()"
    }, {
        "trigger": "setHinttextid()",
        "contents": "setHinttextid(${0:hinttextid})"
    }, {
        "trigger": "setPrompt()",
        "contents": "setPrompt(${0:prompt})"
    }, {
        "trigger": "setPromptid()",
        "contents": "setPromptid(${0:promptid})"
    }, {
        "trigger": "setShowBookmark()",
        "contents": "setShowBookmark(${0:showBookmark})"
    }, {
        "trigger": "setShowCancel()",
        "contents": "setShowCancel(${0:showCancel},${1:animated})"
    }, "Ti.UI.ScrollableView", "cacheSize", "clipViews", "currentPage", "disableBounce", "hitRect", "overScrollMode", "overlayEnabled", "pagingControlAlpha", "pagingControlColor", "pagingControlHeight", "pagingControlOnTop", "pagingControlTimeout", "scrollingEnabled", "showPagingControl", "views", {
        "trigger": "addView()",
        "contents": "addView(${0:view})"
    }, {
        "trigger": "getCacheSize()",
        "contents": "getCacheSize()"
    }, {
        "trigger": "getClipViews()",
        "contents": "getClipViews()"
    }, {
        "trigger": "getCurrentPage()",
        "contents": "getCurrentPage()"
    }, {
        "trigger": "getDisableBounce()",
        "contents": "getDisableBounce()"
    }, {
        "trigger": "getHitRect()",
        "contents": "getHitRect()"
    }, {
        "trigger": "getOverScrollMode()",
        "contents": "getOverScrollMode()"
    }, {
        "trigger": "getOverlayEnabled()",
        "contents": "getOverlayEnabled()"
    }, {
        "trigger": "getPagingControlAlpha()",
        "contents": "getPagingControlAlpha()"
    }, {
        "trigger": "getPagingControlColor()",
        "contents": "getPagingControlColor()"
    }, {
        "trigger": "getPagingControlHeight()",
        "contents": "getPagingControlHeight()"
    }, {
        "trigger": "getPagingControlOnTop()",
        "contents": "getPagingControlOnTop()"
    }, {
        "trigger": "getPagingControlTimeout()",
        "contents": "getPagingControlTimeout()"
    }, {
        "trigger": "getScrollingEnabled()",
        "contents": "getScrollingEnabled()"
    }, {
        "trigger": "getShowPagingControl()",
        "contents": "getShowPagingControl()"
    }, {
        "trigger": "getViews()",
        "contents": "getViews()"
    }, {
        "trigger": "moveNext()",
        "contents": "moveNext()"
    }, {
        "trigger": "movePrevious()",
        "contents": "movePrevious()"
    }, {
        "trigger": "removeView()",
        "contents": "removeView(${0:view})"
    }, {
        "trigger": "scrollToView()",
        "contents": "scrollToView(${0:view})"
    }, {
        "trigger": "setCacheSize()",
        "contents": "setCacheSize(${0:cacheSize})"
    }, {
        "trigger": "setCurrentPage()",
        "contents": "setCurrentPage(${0:currentPage})"
    }, {
        "trigger": "setDisableBounce()",
        "contents": "setDisableBounce(${0:disableBounce})"
    }, {
        "trigger": "setHitRect()",
        "contents": "setHitRect(${0:hitRect})"
    }, {
        "trigger": "setOverScrollMode()",
        "contents": "setOverScrollMode(${0:overScrollMode})"
    }, {
        "trigger": "setOverlayEnabled()",
        "contents": "setOverlayEnabled(${0:overlayEnabled})"
    }, {
        "trigger": "setPagingControlAlpha()",
        "contents": "setPagingControlAlpha(${0:pagingControlAlpha})"
    }, {
        "trigger": "setPagingControlColor()",
        "contents": "setPagingControlColor(${0:pagingControlColor})"
    }, {
        "trigger": "setPagingControlHeight()",
        "contents": "setPagingControlHeight(${0:pagingControlHeight})"
    }, {
        "trigger": "setPagingControlOnTop()",
        "contents": "setPagingControlOnTop(${0:pagingControlOnTop})"
    }, {
        "trigger": "setScrollingEnabled()",
        "contents": "setScrollingEnabled(${0:scrollingEnabled})"
    }, {
        "trigger": "setShowPagingControl()",
        "contents": "setShowPagingControl(${0:showPagingControl})"
    }, {
        "trigger": "setViews()",
        "contents": "setViews(${0:views})"
    }, "PushNotificationConfig", "callback", "Ti.XML.Attr", "ownerElement", "specified", {
        "trigger": "getOwnerElement()",
        "contents": "getOwnerElement()"
    }, {
        "trigger": "getSpecified()",
        "contents": "getSpecified()"
    }, "Ti.Cloud.SocialIntegrations", {
        "trigger": "externalAccountLink()",
        "contents": "externalAccountLink(${0:parameters},${1:callback})"
    }, {
        "trigger": "externalAccountLogin()",
        "contents": "externalAccountLogin(${0:parameters},${1:callback})"
    }, {
        "trigger": "externalAccountUnlink()",
        "contents": "externalAccountUnlink(${0:parameters},${1:callback})"
    }, {
        "trigger": "searchFacebookFriends()",
        "contents": "searchFacebookFriends(${0:callback})"
    }, "Ti.UI.iPhone.NavigationGroup", "Ti.UI.iPad.SplitWindow", "backButtonTitle", "backButtonTitleImage", "barImage", "detailView", "leftNavButton", "masterView", "orientationModes", "rightNavButton", "showMasterInPortrait", "tabBarHidden", "titleControl", "titleImage", "titlePrompt", "titlepromptid", "toolbar", "translucent", {
        "trigger": "getBackButtonTitle()",
        "contents": "getBackButtonTitle()"
    }, {
        "trigger": "getBackButtonTitleImage()",
        "contents": "getBackButtonTitleImage()"
    }, {
        "trigger": "getBarImage()",
        "contents": "getBarImage()"
    }, {
        "trigger": "getDetailView()",
        "contents": "getDetailView()"
    }, {
        "trigger": "getLeftNavButton()",
        "contents": "getLeftNavButton()"
    }, {
        "trigger": "getMasterView()",
        "contents": "getMasterView()"
    }, {
        "trigger": "getModal()",
        "contents": "getModal()"
    }, {
        "trigger": "getNavBarHidden()",
        "contents": "getNavBarHidden()"
    }, {
        "trigger": "getOrientationModes()",
        "contents": "getOrientationModes()"
    }, {
        "trigger": "getRightNavButton()",
        "contents": "getRightNavButton()"
    }, {
        "trigger": "getShowMasterInPortrait()",
        "contents": "getShowMasterInPortrait()"
    }, {
        "trigger": "getTabBarHidden()",
        "contents": "getTabBarHidden()"
    }, {
        "trigger": "getTitleControl()",
        "contents": "getTitleControl()"
    }, {
        "trigger": "getTitleImage()",
        "contents": "getTitleImage()"
    }, {
        "trigger": "getTitlePrompt()",
        "contents": "getTitlePrompt()"
    }, {
        "trigger": "getTitlepromptid()",
        "contents": "getTitlepromptid()"
    }, {
        "trigger": "getToolbar()",
        "contents": "getToolbar()"
    }, {
        "trigger": "getTranslucent()",
        "contents": "getTranslucent()"
    }, {
        "trigger": "hideTabBar()",
        "contents": "hideTabBar()"
    }, {
        "trigger": "setBackButtonTitle()",
        "contents": "setBackButtonTitle(${0:backButtonTitle})"
    }, {
        "trigger": "setBackButtonTitleImage()",
        "contents": "setBackButtonTitleImage(${0:backButtonTitleImage})"
    }, {
        "trigger": "setBarImage()",
        "contents": "setBarImage(${0:barImage})"
    }, {
        "trigger": "setLeftNavButton()",
        "contents": "setLeftNavButton(${0:leftNavButton})"
    }, {
        "trigger": "setModal()",
        "contents": "setModal(${0:modal})"
    }, {
        "trigger": "setNavBarHidden()",
        "contents": "setNavBarHidden(${0:navBarHidden})"
    }, {
        "trigger": "setOrientationModes()",
        "contents": "setOrientationModes(${0:orientationModes})"
    }, {
        "trigger": "setRightNavButton()",
        "contents": "setRightNavButton(${0:rightNavButton})"
    }, {
        "trigger": "setShowMasterInPortrait()",
        "contents": "setShowMasterInPortrait(${0:showMasterInPortrait})"
    }, {
        "trigger": "setTabBarHidden()",
        "contents": "setTabBarHidden(${0:tabBarHidden})"
    }, {
        "trigger": "setTitleControl()",
        "contents": "setTitleControl(${0:titleControl})"
    }, {
        "trigger": "setTitleImage()",
        "contents": "setTitleImage(${0:titleImage})"
    }, {
        "trigger": "setTitlePrompt()",
        "contents": "setTitlePrompt(${0:titlePrompt})"
    }, {
        "trigger": "setTitlepromptid()",
        "contents": "setTitlepromptid(${0:titlepromptid})"
    }, {
        "trigger": "setToolbar()",
        "contents": "setToolbar(${0:toolbar})"
    }, {
        "trigger": "setTranslucent()",
        "contents": "setTranslucent(${0:translucent})"
    }, "Ti.UI.Android.ProgressIndicator", "cancelable", "messageid", {
        "trigger": "getCancelable()",
        "contents": "getCancelable()"
    }, {
        "trigger": "getMessageid()",
        "contents": "getMessageid()"
    }, {
        "trigger": "setCancelable()",
        "contents": "setCancelable(${0:cancelable})"
    }, {
        "trigger": "setMessageid()",
        "contents": "setMessageid(${0:messageid})"
    }, "Ti.Cloud.PhotoCollections", {
        "trigger": "showPhotos()",
        "contents": "showPhotos(${0:parameters},${1:callback})"
    }, {
        "trigger": "showSubCollections()",
        "contents": "showSubCollections(${0:parameters},${1:callback})"
    }, "ReadCallbackArgs", "CloudACLsCheckResponse", "permission", "MapRouteType", "points", "CloudChatsResponse", "chats", "Ti.Cloud.Emails", {
        "trigger": "send()",
        "contents": "send(${0:parameters},${1:callback})"
    }, "Ti.UI.Notification", "horizontalMargin", "verticalMargin", "xOffset", "yOffset", {
        "trigger": "getHorizontalMargin()",
        "contents": "getHorizontalMargin()"
    }, {
        "trigger": "getVerticalMargin()",
        "contents": "getVerticalMargin()"
    }, {
        "trigger": "getXOffset()",
        "contents": "getXOffset()"
    }, {
        "trigger": "getYOffset()",
        "contents": "getYOffset()"
    }, {
        "trigger": "setHorizontalMargin()",
        "contents": "setHorizontalMargin(${0:horizontalMargin})"
    }, {
        "trigger": "setVerticalMargin()",
        "contents": "setVerticalMargin(${0:verticalMargin})"
    }, {
        "trigger": "setXOffset()",
        "contents": "setXOffset(${0:xOffset})"
    }, {
        "trigger": "setYOffset()",
        "contents": "setYOffset(${0:yOffset})"
    }, "MediaQueryType", "albumArtist", "albumTitle", "artist", "composer", "genre", "grouping", "isCompilation", "WebAPIError", "Gradient", "backfillEnd", "backfillStart", "colors", "endPoint", "endRadius", "startPoint", "startRadius", "Ti.UI.Label", "backgroundPaddingBottom", "backgroundPaddingLeft", "backgroundPaddingRight", "backgroundPaddingTop", "highlightedColor", "shadowColor", "shadowOffset", "textid", "wordWrap", {
        "trigger": "getBackgroundPaddingBottom()",
        "contents": "getBackgroundPaddingBottom()"
    }, {
        "trigger": "getBackgroundPaddingLeft()",
        "contents": "getBackgroundPaddingLeft()"
    }, {
        "trigger": "getBackgroundPaddingRight()",
        "contents": "getBackgroundPaddingRight()"
    }, {
        "trigger": "getBackgroundPaddingTop()",
        "contents": "getBackgroundPaddingTop()"
    }, {
        "trigger": "getHighlightedColor()",
        "contents": "getHighlightedColor()"
    }, {
        "trigger": "getShadowColor()",
        "contents": "getShadowColor()"
    }, {
        "trigger": "getShadowOffset()",
        "contents": "getShadowOffset()"
    }, {
        "trigger": "getTextid()",
        "contents": "getTextid()"
    }, {
        "trigger": "getWordWrap()",
        "contents": "getWordWrap()"
    }, {
        "trigger": "setBackgroundPaddingBottom()",
        "contents": "setBackgroundPaddingBottom(${0:backgroundPaddingBottom})"
    }, {
        "trigger": "setBackgroundPaddingLeft()",
        "contents": "setBackgroundPaddingLeft(${0:backgroundPaddingLeft})"
    }, {
        "trigger": "setBackgroundPaddingRight()",
        "contents": "setBackgroundPaddingRight(${0:backgroundPaddingRight})"
    }, {
        "trigger": "setBackgroundPaddingTop()",
        "contents": "setBackgroundPaddingTop(${0:backgroundPaddingTop})"
    }, {
        "trigger": "setHighlightedColor()",
        "contents": "setHighlightedColor(${0:highlightedColor})"
    }, {
        "trigger": "setShadowColor()",
        "contents": "setShadowColor(${0:shadowColor})"
    }, {
        "trigger": "setShadowOffset()",
        "contents": "setShadowOffset(${0:shadowOffset})"
    }, {
        "trigger": "setTextid()",
        "contents": "setTextid(${0:textid})"
    }, {
        "trigger": "setWordWrap()",
        "contents": "setWordWrap(${0:wordWrap})"
    }, "Ti.Cloud.Reviews", "Ti.Platform.Android", "Ti.Platform.Android.API_LEVEL", "Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_LARGE", "Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_NORMAL", "Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_SMALL", "Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_UNDEFINED", "Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_XLARGE", "physicalSizeCategory", {
        "trigger": "getPhysicalSizeCategory()",
        "contents": "getPhysicalSizeCategory()"
    }, "Ti.UI.ScrollView", "canCancelEvents", "contentHeight", "contentOffset", "contentWidth", "horizontalBounce", "maxZoomScale", "minZoomScale", "scrollIndicatorStyle", "scrollType", "showHorizontalScrollIndicator", "showVerticalScrollIndicator", "verticalBounce", "zoomScale", {
        "trigger": "getCanCancelEvents()",
        "contents": "getCanCancelEvents()"
    }, {
        "trigger": "getContentHeight()",
        "contents": "getContentHeight()"
    }, {
        "trigger": "getContentOffset()",
        "contents": "getContentOffset()"
    }, {
        "trigger": "getContentWidth()",
        "contents": "getContentWidth()"
    }, {
        "trigger": "getHorizontalBounce()",
        "contents": "getHorizontalBounce()"
    }, {
        "trigger": "getMaxZoomScale()",
        "contents": "getMaxZoomScale()"
    }, {
        "trigger": "getMinZoomScale()",
        "contents": "getMinZoomScale()"
    }, {
        "trigger": "getScrollIndicatorStyle()",
        "contents": "getScrollIndicatorStyle()"
    }, {
        "trigger": "getScrollType()",
        "contents": "getScrollType()"
    }, {
        "trigger": "getShowHorizontalScrollIndicator()",
        "contents": "getShowHorizontalScrollIndicator()"
    }, {
        "trigger": "getShowVerticalScrollIndicator()",
        "contents": "getShowVerticalScrollIndicator()"
    }, {
        "trigger": "getVerticalBounce()",
        "contents": "getVerticalBounce()"
    }, {
        "trigger": "getZoomScale()",
        "contents": "getZoomScale()"
    }, {
        "trigger": "scrollTo()",
        "contents": "scrollTo(${0:x},${1:y})"
    }, {
        "trigger": "scrollToBottom()",
        "contents": "scrollToBottom()"
    }, {
        "trigger": "setCanCancelEvents()",
        "contents": "setCanCancelEvents(${0:canCancelEvents})"
    }, {
        "trigger": "setContentHeight()",
        "contents": "setContentHeight(${0:contentHeight})"
    }, {
        "trigger": "setContentOffset()",
        "contents": "setContentOffset(${0:contentOffset},${1:animated})"
    }, {
        "trigger": "setContentWidth()",
        "contents": "setContentWidth(${0:contentWidth})"
    }, {
        "trigger": "setHorizontalBounce()",
        "contents": "setHorizontalBounce(${0:horizontalBounce})"
    }, {
        "trigger": "setMaxZoomScale()",
        "contents": "setMaxZoomScale(${0:maxZoomScale})"
    }, {
        "trigger": "setMinZoomScale()",
        "contents": "setMinZoomScale(${0:minZoomScale})"
    }, {
        "trigger": "setScrollIndicatorStyle()",
        "contents": "setScrollIndicatorStyle(${0:scrollIndicatorStyle})"
    }, {
        "trigger": "setShowHorizontalScrollIndicator()",
        "contents": "setShowHorizontalScrollIndicator(${0:showHorizontalScrollIndicator})"
    }, {
        "trigger": "setShowVerticalScrollIndicator()",
        "contents": "setShowVerticalScrollIndicator(${0:showVerticalScrollIndicator})"
    }, {
        "trigger": "setVerticalBounce()",
        "contents": "setVerticalBounce(${0:verticalBounce})"
    }, {
        "trigger": "setZoomScale()",
        "contents": "setZoomScale(${0:zoomScale},${1:animated})"
    }, "Ti.Cloud.Messages", {
        "trigger": "removeThread()",
        "contents": "removeThread(${0:parameters},${1:callback})"
    }, {
        "trigger": "reply()",
        "contents": "reply(${0:parameters},${1:callback})"
    }, {
        "trigger": "showInbox()",
        "contents": "showInbox(${0:parameters},${1:callback})"
    }, {
        "trigger": "showSent()",
        "contents": "showSent(${0:parameters},${1:callback})"
    }, {
        "trigger": "showThread()",
        "contents": "showThread(${0:parameters},${1:callback})"
    }, {
        "trigger": "showThreads()",
        "contents": "showThreads(${0:parameters},${1:callback})"
    }, "Ti.Cloud.Statuses", "CloudUsersSecureResponse", "expiresIn", "showStatusBarParams", "Ti.Android.Activity", "actionBar", "onCreateOptionsMenu", "onPrepareOptionsMenu", "requestedOrientation", {
        "trigger": "finish()",
        "contents": "finish()"
    }, {
        "trigger": "getActionBar()",
        "contents": "getActionBar()"
    }, {
        "trigger": "getOnCreateOptionsMenu()",
        "contents": "getOnCreateOptionsMenu()"
    }, {
        "trigger": "getOnPrepareOptionsMenu()",
        "contents": "getOnPrepareOptionsMenu()"
    }, {
        "trigger": "invalidateOptionsMenu()",
        "contents": "invalidateOptionsMenu()"
    }, {
        "trigger": "openOptionsMenu()",
        "contents": "openOptionsMenu()"
    }, {
        "trigger": "setOnCreateOptionsMenu()",
        "contents": "setOnCreateOptionsMenu(${0:onCreateOptionsMenu})"
    }, {
        "trigger": "setOnPrepareOptionsMenu()",
        "contents": "setOnPrepareOptionsMenu(${0:onPrepareOptionsMenu})"
    }, {
        "trigger": "setRequestedOrientation()",
        "contents": "setRequestedOrientation(${0:orientation})"
    }, {
        "trigger": "setResult()",
        "contents": "setResult(${0:resultCode},${1:intent})"
    }, {
        "trigger": "startActivity()",
        "contents": "startActivity(${0:intent})"
    }, {
        "trigger": "startActivityForResult()",
        "contents": "startActivityForResult(${0:intent},${1:callback})"
    }, "Ti.UI.Android.SearchView", "iconified", "iconifiedByDefault", "submitEnabled", {
        "trigger": "getIconified()",
        "contents": "getIconified()"
    }, {
        "trigger": "getIconifiedByDefault()",
        "contents": "getIconifiedByDefault()"
    }, {
        "trigger": "getSubmitEnabled()",
        "contents": "getSubmitEnabled()"
    }, {
        "trigger": "setIconified()",
        "contents": "setIconified(${0:iconified})"
    }, {
        "trigger": "setIconifiedByDefault()",
        "contents": "setIconifiedByDefault(${0:iconifiedByDefault})"
    }, {
        "trigger": "setSubmitEnabled()",
        "contents": "setSubmitEnabled(${0:submitEnabled})"
    }, "CloudClientsResponse", "ip_address", "Ti.Cloud.ACLs", {
        "trigger": "addUser()",
        "contents": "addUser(${0:parameters},${1:callback})"
    }, {
        "trigger": "checkUser()",
        "contents": "checkUser(${0:parameters},${1:callback})"
    }, {
        "trigger": "removeUser()",
        "contents": "removeUser(${0:parameters},${1:callback})"
    }, "Ti.UI.3DMatrix", "m11", "m12", "m13", "m14", "m21", "m22", "m23", "m24", "m31", "m32", "m33", "m34", "m41", "m42", "m43", "m44", {
        "trigger": "getM11()",
        "contents": "getM11()"
    }, {
        "trigger": "getM12()",
        "contents": "getM12()"
    }, {
        "trigger": "getM13()",
        "contents": "getM13()"
    }, {
        "trigger": "getM14()",
        "contents": "getM14()"
    }, {
        "trigger": "getM21()",
        "contents": "getM21()"
    }, {
        "trigger": "getM22()",
        "contents": "getM22()"
    }, {
        "trigger": "getM23()",
        "contents": "getM23()"
    }, {
        "trigger": "getM24()",
        "contents": "getM24()"
    }, {
        "trigger": "getM31()",
        "contents": "getM31()"
    }, {
        "trigger": "getM32()",
        "contents": "getM32()"
    }, {
        "trigger": "getM33()",
        "contents": "getM33()"
    }, {
        "trigger": "getM34()",
        "contents": "getM34()"
    }, {
        "trigger": "getM41()",
        "contents": "getM41()"
    }, {
        "trigger": "getM42()",
        "contents": "getM42()"
    }, {
        "trigger": "getM43()",
        "contents": "getM43()"
    }, {
        "trigger": "getM44()",
        "contents": "getM44()"
    }, {
        "trigger": "invert()",
        "contents": "invert()"
    }, {
        "trigger": "multiply()",
        "contents": "multiply(${0:t2})"
    }, {
        "trigger": "setM11()",
        "contents": "setM11(${0:m11})"
    }, {
        "trigger": "setM12()",
        "contents": "setM12(${0:m12})"
    }, {
        "trigger": "setM13()",
        "contents": "setM13(${0:m13})"
    }, {
        "trigger": "setM14()",
        "contents": "setM14(${0:m14})"
    }, {
        "trigger": "setM21()",
        "contents": "setM21(${0:m21})"
    }, {
        "trigger": "setM22()",
        "contents": "setM22(${0:m22})"
    }, {
        "trigger": "setM23()",
        "contents": "setM23(${0:m23})"
    }, {
        "trigger": "setM24()",
        "contents": "setM24(${0:m24})"
    }, {
        "trigger": "setM31()",
        "contents": "setM31(${0:m31})"
    }, {
        "trigger": "setM32()",
        "contents": "setM32(${0:m32})"
    }, {
        "trigger": "setM33()",
        "contents": "setM33(${0:m33})"
    }, {
        "trigger": "setM34()",
        "contents": "setM34(${0:m34})"
    }, {
        "trigger": "setM41()",
        "contents": "setM41(${0:m41})"
    }, {
        "trigger": "setM42()",
        "contents": "setM42(${0:m42})"
    }, {
        "trigger": "setM43()",
        "contents": "setM43(${0:m43})"
    }, {
        "trigger": "setM44()",
        "contents": "setM44(${0:m44})"
    }, {
        "trigger": "translate()",
        "contents": "translate(${0:tx},${1:ty},${2:tz})"
    }, "Ti.UI.iPad.DocumentViewer", "AcceptDict", "PushNotificationErrorArg", "Ti.UI.ListView", "defaultItemTemplate", "footerTitle", "headerTitle", "sectionCount", "sections", "templates", "willScrollOnStatusTap", {
        "trigger": "appendSection()",
        "contents": "appendSection(${0:section},${1:animation})"
    }, {
        "trigger": "deleteSectionAt()",
        "contents": "deleteSectionAt(${0:sectionIndex},${1:animation})"
    }, {
        "trigger": "getDefaultItemTemplate()",
        "contents": "getDefaultItemTemplate()"
    }, {
        "trigger": "getFooterTitle()",
        "contents": "getFooterTitle()"
    }, {
        "trigger": "getHeaderTitle()",
        "contents": "getHeaderTitle()"
    }, {
        "trigger": "getSectionCount()",
        "contents": "getSectionCount()"
    }, {
        "trigger": "getSections()",
        "contents": "getSections()"
    }, {
        "trigger": "getTemplates()",
        "contents": "getTemplates()"
    }, {
        "trigger": "getWillScrollOnStatusTap()",
        "contents": "getWillScrollOnStatusTap()"
    }, {
        "trigger": "insertSectionAt()",
        "contents": "insertSectionAt(${0:sectionIndex},${1:section},${2:animation})"
    }, {
        "trigger": "replaceSectionAt()",
        "contents": "replaceSectionAt(${0:sectionIndex},${1:section},${2:animation})"
    }, {
        "trigger": "scrollToItem()",
        "contents": "scrollToItem(${0:sectionIndex},${1:itemIndex},${2:animation})"
    }, {
        "trigger": "selectItem()",
        "contents": "selectItem(${0:sectionIndex},${1:itemIndex})"
    }, {
        "trigger": "setDefaultItemTemplate()",
        "contents": "setDefaultItemTemplate(${0:defaultItemTemplate})"
    }, {
        "trigger": "setFooterTitle()",
        "contents": "setFooterTitle(${0:footerTitle})"
    }, {
        "trigger": "setHeaderTitle()",
        "contents": "setHeaderTitle(${0:headerTitle})"
    }, {
        "trigger": "setSections()",
        "contents": "setSections(${0:sections})"
    }, {
        "trigger": "setWillScrollOnStatusTap()",
        "contents": "setWillScrollOnStatusTap(${0:willScrollOnStatusTap})"
    }, "CloudStatusesResponse", "statuses", "Dictionary", "Ti.Contacts.Tizen", {
        "trigger": "getAllPeople()",
        "contents": "getAllPeople(${0:successCallback},${1:errorCallback})"
    }, {
        "trigger": "getPeopleWithName()",
        "contents": "getPeopleWithName(${0:name},${1:successCallback},${2:errorCallback})"
    }, "Ti.Map.Annotation", "customView", "draggable", "leftView", "pinImage", "pincolor", "rightView", "subtitle", "subtitleid", {
        "trigger": "getCustomView()",
        "contents": "getCustomView()"
    }, {
        "trigger": "getDraggable()",
        "contents": "getDraggable()"
    }, {
        "trigger": "getLatitude()",
        "contents": "getLatitude()"
    }, {
        "trigger": "getLeftView()",
        "contents": "getLeftView()"
    }, {
        "trigger": "getLongitude()",
        "contents": "getLongitude()"
    }, {
        "trigger": "getPinImage()",
        "contents": "getPinImage()"
    }, {
        "trigger": "getPincolor()",
        "contents": "getPincolor()"
    }, {
        "trigger": "getRightView()",
        "contents": "getRightView()"
    }, {
        "trigger": "getSubtitle()",
        "contents": "getSubtitle()"
    }, {
        "trigger": "getSubtitleid()",
        "contents": "getSubtitleid()"
    }, {
        "trigger": "setCustomView()",
        "contents": "setCustomView(${0:customView})"
    }, {
        "trigger": "setDraggable()",
        "contents": "setDraggable(${0:draggable})"
    }, {
        "trigger": "setLatitude()",
        "contents": "setLatitude(${0:latitude})"
    }, {
        "trigger": "setLeftView()",
        "contents": "setLeftView(${0:leftView})"
    }, {
        "trigger": "setLongitude()",
        "contents": "setLongitude(${0:longitude})"
    }, {
        "trigger": "setPinImage()",
        "contents": "setPinImage(${0:pinImage})"
    }, {
        "trigger": "setPincolor()",
        "contents": "setPincolor(${0:pincolor})"
    }, {
        "trigger": "setRightView()",
        "contents": "setRightView(${0:rightView})"
    }, {
        "trigger": "setSubtitle()",
        "contents": "setSubtitle(${0:subtitle})"
    }, {
        "trigger": "setSubtitleid()",
        "contents": "setSubtitleid(${0:subtitleid})"
    }, "Ti.UI.Toolbar", "borderBottom", "borderTop", {
        "trigger": "getBorderBottom()",
        "contents": "getBorderBottom()"
    }, {
        "trigger": "getBorderTop()",
        "contents": "getBorderTop()"
    }, {
        "trigger": "getItems()",
        "contents": "getItems()"
    }, {
        "trigger": "setBorderBottom()",
        "contents": "setBorderBottom(${0:borderBottom})"
    }, {
        "trigger": "setBorderTop()",
        "contents": "setBorderTop(${0:borderTop})"
    }, {
        "trigger": "setItems()",
        "contents": "setItems(${0:items})"
    }, "MapPointType", "CloudKeyValuesResponse", "keyvalues", "MediaQueryInfoType", "exact", "Ti.UI.DashboardView", "columnCount", "wobble", {
        "trigger": "getColumnCount()",
        "contents": "getColumnCount()"
    }, {
        "trigger": "getWobble()",
        "contents": "getWobble()"
    }, {
        "trigger": "setWobble()",
        "contents": "setWobble(${0:wobble})"
    }, {
        "trigger": "startEditing()",
        "contents": "startEditing()"
    }, {
        "trigger": "stopEditing()",
        "contents": "stopEditing()"
    }, "YQLResponse", "CloudResponse", "PumpCallbackArgs", "buffer", "totalBytesProcessed", "MusicLibraryOptionsType", "allowMultipleSelections", "TableViewEdgeInsets", "Ti.Cloud.Files", "Ti.UI.ListItem", "accessoryType", "allowsSelection", "itemId", "Ti.UI.iPhone.TableViewStyle", "Ti.Media.AudioRecorder", "compression", "recording", "stopped", {
        "trigger": "getCompression()",
        "contents": "getCompression()"
    }, {
        "trigger": "getFormat()",
        "contents": "getFormat()"
    }, {
        "trigger": "getRecording()",
        "contents": "getRecording()"
    }, {
        "trigger": "getStopped()",
        "contents": "getStopped()"
    }, {
        "trigger": "setCompression()",
        "contents": "setCompression(${0:compression})"
    }, {
        "trigger": "setFormat()",
        "contents": "setFormat(${0:format})"
    }, "ListViewAnimationProperties", "ReverseGeocodeResponse", "Ti.App.Tizen", "categories", "iconPath", "installDate", {
        "trigger": "exit()",
        "contents": "exit()"
    }, {
        "trigger": "getCategories()",
        "contents": "getCategories()"
    }, {
        "trigger": "getIconPath()",
        "contents": "getIconPath()"
    }, {
        "trigger": "getInstallDate()",
        "contents": "getInstallDate()"
    }, {
        "trigger": "getShow()",
        "contents": "getShow()"
    }, "Ti.UI.iOS.TabbedBar", "GeocodedAddress", "address", "city", "country", "countryCode", "country_code", "displayAddress", "postalCode", "region1", "region2", "street", "street1", "zipcode", "Ti.XML.DOMImplementation", {
        "trigger": "createDocument()",
        "contents": "createDocument(${0:namespaceURI},${1:qualifiedName},${2:doctype})"
    }, {
        "trigger": "createDocumentType()",
        "contents": "createDocumentType(${0:qualifiedName},${1:publicId},${2:systemId})"
    }, {
        "trigger": "hasFeature()",
        "contents": "hasFeature(${0:feature},${1:version})"
    }, "Ti.Geolocation.Android.LocationRule", "maxAge", "minAge", {
        "trigger": "getMaxAge()",
        "contents": "getMaxAge()"
    }, {
        "trigger": "getMinAge()",
        "contents": "getMinAge()"
    }, {
        "trigger": "setMaxAge()",
        "contents": "setMaxAge(${0:maxAge})"
    }, {
        "trigger": "setMinAge()",
        "contents": "setMinAge(${0:minAge})"
    }, "Ti.Database", "Ti.Database.FIELD_TYPE_DOUBLE", "Ti.Database.FIELD_TYPE_FLOAT", "Ti.Database.FIELD_TYPE_INT", "Ti.Database.FIELD_TYPE_STRING", {
        "trigger": "install()",
        "contents": "install(${0:path},${1:dbName})"
    }, "launchOptions", "launchOptionsLocationKey", "Ti.UI.TableViewSection", "footerView", "headerView", {
        "trigger": "getFooterView()",
        "contents": "getFooterView()"
    }, {
        "trigger": "getHeaderView()",
        "contents": "getHeaderView()"
    }, {
        "trigger": "rowAtIndex()",
        "contents": "rowAtIndex(${0:index})"
    }, {
        "trigger": "setFooterView()",
        "contents": "setFooterView(${0:footerView})"
    }, {
        "trigger": "setHeaderView()",
        "contents": "setHeaderView(${0:headerView})"
    }, "Ti.BufferStream", "Ti.UI.iPhone.RowAnimationStyle", "Ti.UI.iPhone.RowAnimationStyle.FADE", "Ti.UI.iPhone.RowAnimationStyle.LEFT", "Ti.UI.iPhone.RowAnimationStyle.RIGHT", "CloudPushNotificationErrorArg", "Ti.Android.MenuItem", "actionView", "actionViewExpanded", "checkable", "checked", "groupId", "order", "showAsAction", "titleCondensed", {
        "trigger": "collapseActionView()",
        "contents": "collapseActionView()"
    }, {
        "trigger": "expandActionView()",
        "contents": "expandActionView()"
    }, {
        "trigger": "getActionView()",
        "contents": "getActionView()"
    }, {
        "trigger": "getGroupId()",
        "contents": "getGroupId()"
    }, {
        "trigger": "getItemId()",
        "contents": "getItemId()"
    }, {
        "trigger": "getOrder()",
        "contents": "getOrder()"
    }, {
        "trigger": "getTitleCondensed()",
        "contents": "getTitleCondensed()"
    }, {
        "trigger": "isActionViewExpanded()",
        "contents": "isActionViewExpanded()"
    }, {
        "trigger": "isCheckable()",
        "contents": "isCheckable()"
    }, {
        "trigger": "isChecked()",
        "contents": "isChecked()"
    }, {
        "trigger": "isEnabled()",
        "contents": "isEnabled()"
    }, {
        "trigger": "isVisible()",
        "contents": "isVisible()"
    }, {
        "trigger": "setActionView()",
        "contents": "setActionView(${0:actionView})"
    }, {
        "trigger": "setCheckable()",
        "contents": "setCheckable(${0:checkable})"
    }, {
        "trigger": "setChecked()",
        "contents": "setChecked(${0:enabled})"
    }, {
        "trigger": "setShowAsAction()",
        "contents": "setShowAsAction(${0:showAsAction})"
    }, {
        "trigger": "setTitleCondensed()",
        "contents": "setTitleCondensed(${0:titleCondensed})"
    }, "Ti.Android.BroadcastReceiver", "onReceived", {
        "trigger": "getOnReceived()",
        "contents": "getOnReceived()"
    }, {
        "trigger": "setOnReceived()",
        "contents": "setOnReceived(${0:onReceived})"
    }, "Ti.CloudPush", "focusAppOnPush", "showAppOnTrayClick", "showTrayNotification", "showTrayNotificationsWhenFocused", "singleCallback", {
        "trigger": "getFocusAppOnPush()",
        "contents": "getFocusAppOnPush()"
    }, {
        "trigger": "getShowAppOnTrayClick()",
        "contents": "getShowAppOnTrayClick()"
    }, {
        "trigger": "getShowTrayNotification()",
        "contents": "getShowTrayNotification()"
    }, {
        "trigger": "getShowTrayNotificationsWhenFocused()",
        "contents": "getShowTrayNotificationsWhenFocused()"
    }, {
        "trigger": "getSingleCallback()",
        "contents": "getSingleCallback()"
    }, {
        "trigger": "retrieveDeviceToken()",
        "contents": "retrieveDeviceToken(${0:config})"
    }, {
        "trigger": "setFocusAppOnPush()",
        "contents": "setFocusAppOnPush(${0:focusAppOnPush})"
    }, {
        "trigger": "setShowAppOnTrayClick()",
        "contents": "setShowAppOnTrayClick(${0:showAppOnTrayClick})"
    }, {
        "trigger": "setShowTrayNotification()",
        "contents": "setShowTrayNotification(${0:showTrayNotification})"
    }, {
        "trigger": "setShowTrayNotificationsWhenFocused()",
        "contents": "setShowTrayNotificationsWhenFocused(${0:showTrayNotificationsWhenFocused})"
    }, {
        "trigger": "setSingleCallback()",
        "contents": "setSingleCallback(${0:singleCallback})"
    }, "Ti.UI.iOS.DocumentViewer", "Ti.UI.TabGroup", "activeTab", "activeTabBackgroundColor", "activeTabBackgroundDisabledColor", "activeTabBackgroundDisabledImage", "activeTabBackgroundFocusedColor", "activeTabBackgroundFocusedImage", "activeTabBackgroundImage", "activeTabBackgroundSelectedColor", "activeTabBackgroundSelectedImage", "activeTabIconTint", "allowUserCustomization", "editButtonTitle", "exitOnClose", "shadowImage", "tabDividerColor", "tabDividerWidth", "tabHeight", "tabs", "tabsAtBottom", "tabsBackgroundColor", "tabsBackgroundDisabledColor", "tabsBackgroundDisabledImage", "tabsBackgroundFocusedColor", "tabsBackgroundFocusedImage", "tabsBackgroundImage", "tabsBackgroundSelectedColor", "tabsBackgroundSelectedImage", "windowSoftInputMode", {
        "trigger": "addTab()",
        "contents": "addTab(${0:tab})"
    }, {
        "trigger": "getActiveTab()",
        "contents": "getActiveTab()"
    }, {
        "trigger": "getActiveTabBackgroundColor()",
        "contents": "getActiveTabBackgroundColor()"
    }, {
        "trigger": "getActiveTabBackgroundDisabledColor()",
        "contents": "getActiveTabBackgroundDisabledColor()"
    }, {
        "trigger": "getActiveTabBackgroundDisabledImage()",
        "contents": "getActiveTabBackgroundDisabledImage()"
    }, {
        "trigger": "getActiveTabBackgroundFocusedColor()",
        "contents": "getActiveTabBackgroundFocusedColor()"
    }, {
        "trigger": "getActiveTabBackgroundFocusedImage()",
        "contents": "getActiveTabBackgroundFocusedImage()"
    }, {
        "trigger": "getActiveTabBackgroundImage()",
        "contents": "getActiveTabBackgroundImage()"
    }, {
        "trigger": "getActiveTabBackgroundSelectedColor()",
        "contents": "getActiveTabBackgroundSelectedColor()"
    }, {
        "trigger": "getActiveTabBackgroundSelectedImage()",
        "contents": "getActiveTabBackgroundSelectedImage()"
    }, {
        "trigger": "getActiveTabIconTint()",
        "contents": "getActiveTabIconTint()"
    }, {
        "trigger": "getActivity()",
        "contents": "getActivity()"
    }, {
        "trigger": "getAllowUserCustomization()",
        "contents": "getAllowUserCustomization()"
    }, {
        "trigger": "getEditButtonTitle()",
        "contents": "getEditButtonTitle()"
    }, {
        "trigger": "getExitOnClose()",
        "contents": "getExitOnClose()"
    }, {
        "trigger": "getShadowImage()",
        "contents": "getShadowImage()"
    }, {
        "trigger": "getTabDividerColor()",
        "contents": "getTabDividerColor()"
    }, {
        "trigger": "getTabDividerWidth()",
        "contents": "getTabDividerWidth()"
    }, {
        "trigger": "getTabHeight()",
        "contents": "getTabHeight()"
    }, {
        "trigger": "getTabs()",
        "contents": "getTabs()"
    }, {
        "trigger": "getTabsAtBottom()",
        "contents": "getTabsAtBottom()"
    }, {
        "trigger": "getTabsBackgroundColor()",
        "contents": "getTabsBackgroundColor()"
    }, {
        "trigger": "getTabsBackgroundDisabledColor()",
        "contents": "getTabsBackgroundDisabledColor()"
    }, {
        "trigger": "getTabsBackgroundDisabledImage()",
        "contents": "getTabsBackgroundDisabledImage()"
    }, {
        "trigger": "getTabsBackgroundFocusedColor()",
        "contents": "getTabsBackgroundFocusedColor()"
    }, {
        "trigger": "getTabsBackgroundFocusedImage()",
        "contents": "getTabsBackgroundFocusedImage()"
    }, {
        "trigger": "getTabsBackgroundImage()",
        "contents": "getTabsBackgroundImage()"
    }, {
        "trigger": "getTabsBackgroundSelectedColor()",
        "contents": "getTabsBackgroundSelectedColor()"
    }, {
        "trigger": "getTabsBackgroundSelectedImage()",
        "contents": "getTabsBackgroundSelectedImage()"
    }, {
        "trigger": "getWindowSoftInputMode()",
        "contents": "getWindowSoftInputMode()"
    }, {
        "trigger": "removeTab()",
        "contents": "removeTab(${0:tab})"
    }, {
        "trigger": "setActiveTab()",
        "contents": "setActiveTab(${0:indexOrObject})"
    }, {
        "trigger": "setActiveTabBackgroundColor()",
        "contents": "setActiveTabBackgroundColor(${0:activeTabBackgroundColor})"
    }, {
        "trigger": "setActiveTabBackgroundDisabledColor()",
        "contents": "setActiveTabBackgroundDisabledColor(${0:activeTabBackgroundDisabledColor})"
    }, {
        "trigger": "setActiveTabBackgroundDisabledImage()",
        "contents": "setActiveTabBackgroundDisabledImage(${0:activeTabBackgroundDisabledImage})"
    }, {
        "trigger": "setActiveTabBackgroundFocusedColor()",
        "contents": "setActiveTabBackgroundFocusedColor(${0:activeTabBackgroundFocusedColor})"
    }, {
        "trigger": "setActiveTabBackgroundFocusedImage()",
        "contents": "setActiveTabBackgroundFocusedImage(${0:activeTabBackgroundFocusedImage})"
    }, {
        "trigger": "setActiveTabBackgroundImage()",
        "contents": "setActiveTabBackgroundImage(${0:activeTabBackgroundImage})"
    }, {
        "trigger": "setActiveTabBackgroundSelectedColor()",
        "contents": "setActiveTabBackgroundSelectedColor(${0:activeTabBackgroundSelectedColor})"
    }, {
        "trigger": "setActiveTabBackgroundSelectedImage()",
        "contents": "setActiveTabBackgroundSelectedImage(${0:activeTabBackgroundSelectedImage})"
    }, {
        "trigger": "setActiveTabIconTint()",
        "contents": "setActiveTabIconTint(${0:activeTabIconTint})"
    }, {
        "trigger": "setAllowUserCustomization()",
        "contents": "setAllowUserCustomization(${0:allowUserCustomization})"
    }, {
        "trigger": "setEditButtonTitle()",
        "contents": "setEditButtonTitle(${0:editButtonTitle})"
    }, {
        "trigger": "setShadowImage()",
        "contents": "setShadowImage(${0:shadowImage})"
    }, {
        "trigger": "setTabDividerColor()",
        "contents": "setTabDividerColor(${0:tabDividerColor})"
    }, {
        "trigger": "setTabDividerWidth()",
        "contents": "setTabDividerWidth(${0:tabDividerWidth})"
    }, {
        "trigger": "setTabHeight()",
        "contents": "setTabHeight(${0:tabHeight})"
    }, {
        "trigger": "setTabs()",
        "contents": "setTabs(${0:tabs})"
    }, {
        "trigger": "setTabsAtBottom()",
        "contents": "setTabsAtBottom(${0:tabsAtBottom})"
    }, {
        "trigger": "setTabsBackgroundColor()",
        "contents": "setTabsBackgroundColor(${0:tabsBackgroundColor})"
    }, {
        "trigger": "setTabsBackgroundDisabledColor()",
        "contents": "setTabsBackgroundDisabledColor(${0:tabsBackgroundDisabledColor})"
    }, {
        "trigger": "setTabsBackgroundDisabledImage()",
        "contents": "setTabsBackgroundDisabledImage(${0:tabsBackgroundDisabledImage})"
    }, {
        "trigger": "setTabsBackgroundFocusedColor()",
        "contents": "setTabsBackgroundFocusedColor(${0:tabsBackgroundFocusedColor})"
    }, {
        "trigger": "setTabsBackgroundFocusedImage()",
        "contents": "setTabsBackgroundFocusedImage(${0:tabsBackgroundFocusedImage})"
    }, {
        "trigger": "setTabsBackgroundImage()",
        "contents": "setTabsBackgroundImage(${0:tabsBackgroundImage})"
    }, {
        "trigger": "setTabsBackgroundSelectedColor()",
        "contents": "setTabsBackgroundSelectedColor(${0:tabsBackgroundSelectedColor})"
    }, {
        "trigger": "setTabsBackgroundSelectedImage()",
        "contents": "setTabsBackgroundSelectedImage(${0:tabsBackgroundSelectedImage})"
    }, "Ti.Database.DB", "file", "lastInsertRowId", "rowsAffected", {
        "trigger": "execute()",
        "contents": "execute(${0:sql},${1:vararg})"
    }, {
        "trigger": "getLastInsertRowId()",
        "contents": "getLastInsertRowId()"
    }, {
        "trigger": "getRowsAffected()",
        "contents": "getRowsAffected()"
    }, {
        "trigger": "setLastInsertRowId()",
        "contents": "setLastInsertRowId(${0:lastInsertRowId})"
    }, {
        "trigger": "setRowsAffected()",
        "contents": "setRowsAffected(${0:rowsAffected})"
    }, "Ti.App.iOS.LocalNotification", "Ti.Media.Sound", "looping", {
        "trigger": "getTime()",
        "contents": "getTime()"
    }, {
        "trigger": "isLooping()",
        "contents": "isLooping()"
    }, {
        "trigger": "reset()",
        "contents": "reset()"
    }, {
        "trigger": "setLooping()",
        "contents": "setLooping(${0:looping})"
    }, {
        "trigger": "setTime()",
        "contents": "setTime(${0:time})"
    }, "textAreaSelectedParams", "Ti.UI.AlertDialog", "buttonNames", "ok", "okid", {
        "trigger": "getButtonNames()",
        "contents": "getButtonNames()"
    }, {
        "trigger": "getOk()",
        "contents": "getOk()"
    }, {
        "trigger": "setOk()",
        "contents": "setOk(${0:ok})"
    }, "Ti.Network.Socket", "Ti.Network.Socket.CLOSED", "Ti.Network.Socket.CONNECTED", "Ti.Network.Socket.ERROR", "Ti.Network.Socket.INITIALIZED", "Ti.Network.Socket.LISTENING", {
        "trigger": "createTCP()",
        "contents": "createTCP(${0:params})"
    }, "Ti.Android.Notification", "audioStreamType", "contentIntent", "contentText", "contentTitle", "contentView", "defaults", "deleteIntent", "ledARGB", "ledOffMS", "ledOnMS", "number", "sound", "tickerText", "when", {
        "trigger": "getAudioStreamType()",
        "contents": "getAudioStreamType()"
    }, {
        "trigger": "getContentIntent()",
        "contents": "getContentIntent()"
    }, {
        "trigger": "getContentText()",
        "contents": "getContentText()"
    }, {
        "trigger": "getContentTitle()",
        "contents": "getContentTitle()"
    }, {
        "trigger": "getDefaults()",
        "contents": "getDefaults()"
    }, {
        "trigger": "getDeleteIntent()",
        "contents": "getDeleteIntent()"
    }, {
        "trigger": "getLedARGB()",
        "contents": "getLedARGB()"
    }, {
        "trigger": "getLedOffMS()",
        "contents": "getLedOffMS()"
    }, {
        "trigger": "getLedOnMS()",
        "contents": "getLedOnMS()"
    }, {
        "trigger": "getNumber()",
        "contents": "getNumber()"
    }, {
        "trigger": "getSound()",
        "contents": "getSound()"
    }, {
        "trigger": "getTickerText()",
        "contents": "getTickerText()"
    }, {
        "trigger": "getWhen()",
        "contents": "getWhen()"
    }, {
        "trigger": "setAudioStreamType()",
        "contents": "setAudioStreamType(${0:audioStreamType})"
    }, {
        "trigger": "setContentIntent()",
        "contents": "setContentIntent(${0:contentIntent})"
    }, {
        "trigger": "setContentText()",
        "contents": "setContentText(${0:contentText})"
    }, {
        "trigger": "setContentTitle()",
        "contents": "setContentTitle(${0:contentTitle})"
    }, {
        "trigger": "setContentView()",
        "contents": "setContentView(${0:contentView})"
    }, {
        "trigger": "setDefaults()",
        "contents": "setDefaults(${0:defaults})"
    }, {
        "trigger": "setDeleteIntent()",
        "contents": "setDeleteIntent(${0:deleteIntent})"
    }, {
        "trigger": "setLatestEventInfo()",
        "contents": "setLatestEventInfo(${0:contentTitle},${1:contentText},${2:contentIntent})"
    }, {
        "trigger": "setLedARGB()",
        "contents": "setLedARGB(${0:ledARGB})"
    }, {
        "trigger": "setLedOffMS()",
        "contents": "setLedOffMS(${0:ledOffMS})"
    }, {
        "trigger": "setLedOnMS()",
        "contents": "setLedOnMS(${0:ledOnMS})"
    }, {
        "trigger": "setNumber()",
        "contents": "setNumber(${0:number})"
    }, {
        "trigger": "setSound()",
        "contents": "setSound(${0:sound})"
    }, {
        "trigger": "setTickerText()",
        "contents": "setTickerText(${0:tickerText})"
    }, {
        "trigger": "setWhen()",
        "contents": "setWhen(${0:when})"
    }, "LocationCoordinates", "altitude", "altitudeAccuracy", "speed", "ActivityResult", "requestCode", "resultCode", "Ti.Calendar.RecurrenceRule", "calendarID", "daysOfTheMonth", "daysOfTheWeek", "daysOfTheYear", "interval", "monthsOfTheYear", "setPositions", "weeksOfTheYear", {
        "trigger": "getCalendarID()",
        "contents": "getCalendarID()"
    }, {
        "trigger": "getDaysOfTheMonth()",
        "contents": "getDaysOfTheMonth()"
    }, {
        "trigger": "getDaysOfTheWeek()",
        "contents": "getDaysOfTheWeek()"
    }, {
        "trigger": "getDaysOfTheYear()",
        "contents": "getDaysOfTheYear()"
    }, {
        "trigger": "getInterval()",
        "contents": "getInterval()"
    }, {
        "trigger": "getMonthsOfTheYear()",
        "contents": "getMonthsOfTheYear()"
    }, {
        "trigger": "getSetPositions()",
        "contents": "getSetPositions()"
    }, {
        "trigger": "getWeeksOfTheYear()",
        "contents": "getWeeksOfTheYear()"
    }, "CloudUsersSecureDialog", "Ti.App.Android", "CloudFriendsResponse", "TableViewAnimationProperties", "CloudChatGroupsResponse", "chat_groups", "FacebookGraphResponsev1", "path", "Ti.UI.Animation", "autoreverse", "curve", "delay", "opaque", "repeat", {
        "trigger": "getAutoreverse()",
        "contents": "getAutoreverse()"
    }, {
        "trigger": "getCurve()",
        "contents": "getCurve()"
    }, {
        "trigger": "getDelay()",
        "contents": "getDelay()"
    }, {
        "trigger": "getOpaque()",
        "contents": "getOpaque()"
    }, {
        "trigger": "getRepeat()",
        "contents": "getRepeat()"
    }, {
        "trigger": "getTransition()",
        "contents": "getTransition()"
    }, {
        "trigger": "getView()",
        "contents": "getView()"
    }, {
        "trigger": "setAutoreverse()",
        "contents": "setAutoreverse(${0:autoreverse})"
    }, {
        "trigger": "setCurve()",
        "contents": "setCurve(${0:curve})"
    }, {
        "trigger": "setDelay()",
        "contents": "setDelay(${0:delay})"
    }, {
        "trigger": "setOpaque()",
        "contents": "setOpaque(${0:opaque})"
    }, {
        "trigger": "setRepeat()",
        "contents": "setRepeat(${0:repeat})"
    }, {
        "trigger": "setTransition()",
        "contents": "setTransition(${0:transition})"
    }, {
        "trigger": "setView()",
        "contents": "setView(${0:view})"
    }, "Ti.UI.View", "PushNotificationSuccessArg", "deviceToken", "Ti.UI.2DMatrix", "a", "b", "c", "d", "tx", "ty", {
        "trigger": "getA()",
        "contents": "getA()"
    }, {
        "trigger": "getB()",
        "contents": "getB()"
    }, {
        "trigger": "getC()",
        "contents": "getC()"
    }, {
        "trigger": "getD()",
        "contents": "getD()"
    }, {
        "trigger": "getTx()",
        "contents": "getTx()"
    }, {
        "trigger": "getTy()",
        "contents": "getTy()"
    }, {
        "trigger": "setA()",
        "contents": "setA(${0:a})"
    }, {
        "trigger": "setB()",
        "contents": "setB(${0:b})"
    }, {
        "trigger": "setC()",
        "contents": "setC(${0:c})"
    }, {
        "trigger": "setD()",
        "contents": "setD(${0:d})"
    }, {
        "trigger": "setTx()",
        "contents": "setTx(${0:tx})"
    }, {
        "trigger": "setTy()",
        "contents": "setTy(${0:ty})"
    }, "Ti.Filesystem.File", "executable", "nativePath", "parent", "readonly", "remoteBackup", "symbolicLink", "writable", "writeable", {
        "trigger": "append()",
        "contents": "append(${0:data})"
    }, {
        "trigger": "copy()",
        "contents": "copy(${0:destinationPath})"
    }, {
        "trigger": "createDirectory()",
        "contents": "createDirectory()"
    }, {
        "trigger": "createFile()",
        "contents": "createFile()"
    }, {
        "trigger": "createTimestamp()",
        "contents": "createTimestamp()"
    }, {
        "trigger": "deleteDirectory()",
        "contents": "deleteDirectory(${0:recursive})"
    }, {
        "trigger": "deleteFile()",
        "contents": "deleteFile()"
    }, {
        "trigger": "exists()",
        "contents": "exists()"
    }, {
        "trigger": "extension()",
        "contents": "extension()"
    }, {
        "trigger": "getDirectoryListing()",
        "contents": "getDirectoryListing()"
    }, {
        "trigger": "getExecutable()",
        "contents": "getExecutable()"
    }, {
        "trigger": "getNativePath()",
        "contents": "getNativePath()"
    }, {
        "trigger": "getParent()",
        "contents": "getParent()"
    }, {
        "trigger": "getReadonly()",
        "contents": "getReadonly()"
    }, {
        "trigger": "getRemoteBackup()",
        "contents": "getRemoteBackup()"
    }, {
        "trigger": "getSymbolicLink()",
        "contents": "getSymbolicLink()"
    }, {
        "trigger": "getWritable()",
        "contents": "getWritable()"
    }, {
        "trigger": "getWriteable()",
        "contents": "getWriteable()"
    }, {
        "trigger": "isDirectory()",
        "contents": "isDirectory()"
    }, {
        "trigger": "isFile()",
        "contents": "isFile()"
    }, {
        "trigger": "modificationTimestamp()",
        "contents": "modificationTimestamp()"
    }, {
        "trigger": "move()",
        "contents": "move(${0:newpath})"
    }, {
        "trigger": "rename()",
        "contents": "rename(${0:newname})"
    }, {
        "trigger": "setHidden()",
        "contents": "setHidden(${0:hidden})"
    }, {
        "trigger": "setRemoteBackup()",
        "contents": "setRemoteBackup(${0:remoteBackup})"
    }, {
        "trigger": "spaceAvailable()",
        "contents": "spaceAvailable()"
    }, "Ti.UI.iPad.Popover", {
        "trigger": "getArrowDirection()",
        "contents": "getArrowDirection()"
    }, {
        "trigger": "setPassthroughViews()",
        "contents": "setPassthroughViews(${0:passthroughViews})"
    }, "Ti.UI.iPhone", "Ti.UI.iPhone.MODAL_PRESENTATION_CURRENT_CONTEXT", "Ti.UI.iPhone.MODAL_PRESENTATION_FORMSHEET", "Ti.UI.iPhone.MODAL_PRESENTATION_FULLSCREEN", "Ti.UI.iPhone.MODAL_PRESENTATION_PAGESHEET", "Ti.UI.iPhone.MODAL_TRANSITION_STYLE_COVER_VERTICAL", "Ti.UI.iPhone.MODAL_TRANSITION_STYLE_CROSS_DISSOLVE", "Ti.UI.iPhone.MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL", "Ti.UI.iPhone.MODAL_TRANSITION_STYLE_PARTIAL_CURL", "appBadge", "appSupportsShakeToEdit", "statusBarHidden", "statusBarStyle", {
        "trigger": "createNavigationGroup()",
        "contents": "createNavigationGroup(${0:parameters})"
    }, {
        "trigger": "getAppBadge()",
        "contents": "getAppBadge()"
    }, {
        "trigger": "getAppSupportsShakeToEdit()",
        "contents": "getAppSupportsShakeToEdit()"
    }, {
        "trigger": "getStatusBarHidden()",
        "contents": "getStatusBarHidden()"
    }, {
        "trigger": "getStatusBarStyle()",
        "contents": "getStatusBarStyle()"
    }, {
        "trigger": "hideStatusBar()",
        "contents": "hideStatusBar(${0:params})"
    }, {
        "trigger": "setAppBadge()",
        "contents": "setAppBadge(${0:appBadge})"
    }, {
        "trigger": "setAppSupportsShakeToEdit()",
        "contents": "setAppSupportsShakeToEdit(${0:appSupportsShakeToEdit})"
    }, {
        "trigger": "setStatusBarHidden()",
        "contents": "setStatusBarHidden(${0:statusBarHidden})"
    }, {
        "trigger": "setStatusBarStyle()",
        "contents": "setStatusBarStyle(${0:statusBarStyle})"
    }, {
        "trigger": "showStatusBar()",
        "contents": "showStatusBar(${0:params})"
    }, "PushNotificationData", "inBackground", "Ti.UI.Slider", "disabledLeftTrackImage", "disabledRightTrackImage", "disabledThumbImage", "highlightedLeftTrackImage", "highlightedRightTrackImage", "highlightedThumbImage", "leftTrackImage", "leftTrackLeftCap", "leftTrackTopCap", "maxRange", "minRange", "rightTrackImage", "rightTrackLeftCap", "rightTrackTopCap", "selectedLeftTrackImage", "selectedRightTrackImage", "selectedThumbImage", "thumbImage", {
        "trigger": "getDisabledLeftTrackImage()",
        "contents": "getDisabledLeftTrackImage()"
    }, {
        "trigger": "getDisabledRightTrackImage()",
        "contents": "getDisabledRightTrackImage()"
    }, {
        "trigger": "getDisabledThumbImage()",
        "contents": "getDisabledThumbImage()"
    }, {
        "trigger": "getHighlightedLeftTrackImage()",
        "contents": "getHighlightedLeftTrackImage()"
    }, {
        "trigger": "getHighlightedRightTrackImage()",
        "contents": "getHighlightedRightTrackImage()"
    }, {
        "trigger": "getHighlightedThumbImage()",
        "contents": "getHighlightedThumbImage()"
    }, {
        "trigger": "getLeftTrackImage()",
        "contents": "getLeftTrackImage()"
    }, {
        "trigger": "getLeftTrackLeftCap()",
        "contents": "getLeftTrackLeftCap()"
    }, {
        "trigger": "getLeftTrackTopCap()",
        "contents": "getLeftTrackTopCap()"
    }, {
        "trigger": "getMaxRange()",
        "contents": "getMaxRange()"
    }, {
        "trigger": "getMinRange()",
        "contents": "getMinRange()"
    }, {
        "trigger": "getRightTrackImage()",
        "contents": "getRightTrackImage()"
    }, {
        "trigger": "getRightTrackLeftCap()",
        "contents": "getRightTrackLeftCap()"
    }, {
        "trigger": "getRightTrackTopCap()",
        "contents": "getRightTrackTopCap()"
    }, {
        "trigger": "getSelectedLeftTrackImage()",
        "contents": "getSelectedLeftTrackImage()"
    }, {
        "trigger": "getSelectedRightTrackImage()",
        "contents": "getSelectedRightTrackImage()"
    }, {
        "trigger": "getSelectedThumbImage()",
        "contents": "getSelectedThumbImage()"
    }, {
        "trigger": "getThumbImage()",
        "contents": "getThumbImage()"
    }, {
        "trigger": "setDisabledLeftTrackImage()",
        "contents": "setDisabledLeftTrackImage(${0:disabledLeftTrackImage})"
    }, {
        "trigger": "setDisabledRightTrackImage()",
        "contents": "setDisabledRightTrackImage(${0:disabledRightTrackImage})"
    }, {
        "trigger": "setDisabledThumbImage()",
        "contents": "setDisabledThumbImage(${0:disabledThumbImage})"
    }, {
        "trigger": "setHighlightedLeftTrackImage()",
        "contents": "setHighlightedLeftTrackImage(${0:highlightedLeftTrackImage})"
    }, {
        "trigger": "setHighlightedRightTrackImage()",
        "contents": "setHighlightedRightTrackImage(${0:highlightedRightTrackImage})"
    }, {
        "trigger": "setHighlightedThumbImage()",
        "contents": "setHighlightedThumbImage(${0:highlightedThumbImage})"
    }, {
        "trigger": "setLeftTrackImage()",
        "contents": "setLeftTrackImage(${0:leftTrackImage})"
    }, {
        "trigger": "setLeftTrackLeftCap()",
        "contents": "setLeftTrackLeftCap(${0:leftTrackLeftCap})"
    }, {
        "trigger": "setLeftTrackTopCap()",
        "contents": "setLeftTrackTopCap(${0:leftTrackTopCap})"
    }, {
        "trigger": "setMaxRange()",
        "contents": "setMaxRange(${0:maxRange})"
    }, {
        "trigger": "setMinRange()",
        "contents": "setMinRange(${0:minRange})"
    }, {
        "trigger": "setRightTrackImage()",
        "contents": "setRightTrackImage(${0:rightTrackImage})"
    }, {
        "trigger": "setRightTrackLeftCap()",
        "contents": "setRightTrackLeftCap(${0:rightTrackLeftCap})"
    }, {
        "trigger": "setRightTrackTopCap()",
        "contents": "setRightTrackTopCap(${0:rightTrackTopCap})"
    }, {
        "trigger": "setSelectedLeftTrackImage()",
        "contents": "setSelectedLeftTrackImage(${0:selectedLeftTrackImage})"
    }, {
        "trigger": "setSelectedRightTrackImage()",
        "contents": "setSelectedRightTrackImage(${0:selectedRightTrackImage})"
    }, {
        "trigger": "setSelectedThumbImage()",
        "contents": "setSelectedThumbImage(${0:selectedThumbImage})"
    }, {
        "trigger": "setThumbImage()",
        "contents": "setThumbImage(${0:thumbImage})"
    }, "Ti.Geolocation.Android.LocationProvider", "minUpdateDistance", "minUpdateTime", {
        "trigger": "getMinUpdateDistance()",
        "contents": "getMinUpdateDistance()"
    }, {
        "trigger": "getMinUpdateTime()",
        "contents": "getMinUpdateTime()"
    }, {
        "trigger": "setMinUpdateDistance()",
        "contents": "setMinUpdateDistance(${0:minUpdateDistance})"
    }, {
        "trigger": "setMinUpdateTime()",
        "contents": "setMinUpdateTime(${0:minUpdateTime})"
    }, "Ti.Filesystem.FileStream", "Ti.Media.Item", "albumTrackCount", "albumTrackNumber", "artwork", "discCount", "discNumber", "lyrics", "playCount", "playbackDuration", "podcastTitle", "rating", "skipCount", {
        "trigger": "getAlbumArtist()",
        "contents": "getAlbumArtist()"
    }, {
        "trigger": "getAlbumTitle()",
        "contents": "getAlbumTitle()"
    }, {
        "trigger": "getAlbumTrackCount()",
        "contents": "getAlbumTrackCount()"
    }, {
        "trigger": "getAlbumTrackNumber()",
        "contents": "getAlbumTrackNumber()"
    }, {
        "trigger": "getArtist()",
        "contents": "getArtist()"
    }, {
        "trigger": "getArtwork()",
        "contents": "getArtwork()"
    }, {
        "trigger": "getComposer()",
        "contents": "getComposer()"
    }, {
        "trigger": "getDiscCount()",
        "contents": "getDiscCount()"
    }, {
        "trigger": "getDiscNumber()",
        "contents": "getDiscNumber()"
    }, {
        "trigger": "getGenre()",
        "contents": "getGenre()"
    }, {
        "trigger": "getIsCompilation()",
        "contents": "getIsCompilation()"
    }, {
        "trigger": "getLyrics()",
        "contents": "getLyrics()"
    }, {
        "trigger": "getMediaType()",
        "contents": "getMediaType()"
    }, {
        "trigger": "getPlayCount()",
        "contents": "getPlayCount()"
    }, {
        "trigger": "getPlaybackDuration()",
        "contents": "getPlaybackDuration()"
    }, {
        "trigger": "getPodcastTitle()",
        "contents": "getPodcastTitle()"
    }, {
        "trigger": "getRating()",
        "contents": "getRating()"
    }, {
        "trigger": "getSkipCount()",
        "contents": "getSkipCount()"
    }, "Ti.Android.Menu", {
        "trigger": "clear()",
        "contents": "clear()"
    }, {
        "trigger": "findItem()",
        "contents": "findItem(${0:item})"
    }, {
        "trigger": "getItem()",
        "contents": "getItem(${0:index})"
    }, {
        "trigger": "hasVisibleItems()",
        "contents": "hasVisibleItems()"
    }, {
        "trigger": "removeGroup()",
        "contents": "removeGroup(${0:groupId})"
    }, {
        "trigger": "removeItem()",
        "contents": "removeItem(${0:itemId})"
    }, {
        "trigger": "setGroupEnabled()",
        "contents": "setGroupEnabled(${0:groupId},${1:enabled})"
    }, {
        "trigger": "setGroupVisible()",
        "contents": "setGroupVisible(${0:groupId},${1:visible})"
    }, "Ti.UI.MobileWeb", "Ti.Contacts", "Ti.Contacts.CONTACTS_KIND_ORGANIZATION", "Ti.Contacts.CONTACTS_KIND_PERSON", "Ti.Contacts.CONTACTS_SORT_FIRST_NAME", "Ti.Contacts.CONTACTS_SORT_LAST_NAME", "contactsAuthorization", {
        "trigger": "createGroup()",
        "contents": "createGroup(${0:parameters})"
    }, {
        "trigger": "createPerson()",
        "contents": "createPerson(${0:parameters})"
    }, {
        "trigger": "getAllGroups()",
        "contents": "getAllGroups()"
    }, {
        "trigger": "getContactsAuthorization()",
        "contents": "getContactsAuthorization()"
    }, {
        "trigger": "getGroupByID()",
        "contents": "getGroupByID(${0:id})"
    }, {
        "trigger": "getPersonByID()",
        "contents": "getPersonByID(${0:id})"
    }, {
        "trigger": "removePerson()",
        "contents": "removePerson(${0:person})"
    }, {
        "trigger": "requestAuthorization()",
        "contents": "requestAuthorization(${0:callback})"
    }, {
        "trigger": "revert()",
        "contents": "revert()"
    }, {
        "trigger": "showContacts()",
        "contents": "showContacts(${0:params})"
    }, "Ti.XML.DocumentFragment", "Ti.Cloud.Chats", {
        "trigger": "getChatGroups()",
        "contents": "getChatGroups(${0:parameters},${1:callback})"
    }, "Ti.Cloud.Clients", {
        "trigger": "geolocate()",
        "contents": "geolocate(${0:parameters},${1:callback})"
    }, "Ti.Cloud.Photos", "Ti.Android.ActionBar", "displayHomeAsUp", "logo", "onHomeIconItemSelected", {
        "trigger": "setDisplayHomeAsUp()",
        "contents": "setDisplayHomeAsUp(${0:displayHomeAsUp})"
    }, {
        "trigger": "setLogo()",
        "contents": "setLogo(${0:logo})"
    }, {
        "trigger": "setOnHomeIconItemSelected()",
        "contents": "setOnHomeIconItemSelected(${0:onHomeIconItemSelected})"
    }, "Ti.UI.iOS.CoverFlowView", "Ti.Network.BonjourBrowser", "isSearching", "serviceType", {
        "trigger": "getIsSearching()",
        "contents": "getIsSearching()"
    }, {
        "trigger": "getServiceType()",
        "contents": "getServiceType()"
    }, {
        "trigger": "setIsSearching()",
        "contents": "setIsSearching(${0:isSearching})"
    }, {
        "trigger": "setServiceType()",
        "contents": "setServiceType(${0:serviceType})"
    }, {
        "trigger": "stopSearch()",
        "contents": "stopSearch()"
    }, "contentOffsetOption", "Ti.UI.iOS.3DMatrix", "CloudPhotoCollectionsPhotosResponse", "ErrorResponse", "Ti.Blob", "mimeType", {
        "trigger": "getMimeType()",
        "contents": "getMimeType()"
    }, {
        "trigger": "imageAsCropped()",
        "contents": "imageAsCropped(${0:options})"
    }, {
        "trigger": "imageAsResized()",
        "contents": "imageAsResized(${0:width},${1:height})"
    }, {
        "trigger": "imageAsThumbnail()",
        "contents": "imageAsThumbnail(${0:size},${1:borderSize},${2:cornerRadius})"
    }, {
        "trigger": "imageWithAlpha()",
        "contents": "imageWithAlpha()"
    }, {
        "trigger": "imageWithRoundedCorner()",
        "contents": "imageWithRoundedCorner(${0:cornerSize},${1:borderSize})"
    }, {
        "trigger": "imageWithTransparentBorder()",
        "contents": "imageWithTransparentBorder(${0:size})"
    }, {
        "trigger": "toString()",
        "contents": "toString()"
    }, "Ti.Utils", {
        "trigger": "base64decode()",
        "contents": "base64decode(${0:obj})"
    }, {
        "trigger": "base64encode()",
        "contents": "base64encode(${0:obj})"
    }, {
        "trigger": "md5HexDigest()",
        "contents": "md5HexDigest(${0:obj})"
    }, {
        "trigger": "sha1()",
        "contents": "sha1(${0:obj})"
    }, {
        "trigger": "sha256()",
        "contents": "sha256(${0:obj})"
    }, "DecodeNumberDict", "FailureResponse", "Ti.XML.Document", "doctype", "documentElement", "implementation", {
        "trigger": "createAttribute()",
        "contents": "createAttribute(${0:name})"
    }, {
        "trigger": "createAttributeNS()",
        "contents": "createAttributeNS(${0:namespaceURI},${1:name})"
    }, {
        "trigger": "createCDATASection()",
        "contents": "createCDATASection(${0:data})"
    }, {
        "trigger": "createComment()",
        "contents": "createComment(${0:data})"
    }, {
        "trigger": "createDocumentFragment()",
        "contents": "createDocumentFragment()"
    }, {
        "trigger": "createElement()",
        "contents": "createElement(${0:tagName})"
    }, {
        "trigger": "createElementNS()",
        "contents": "createElementNS(${0:namespaceURI},${1:name})"
    }, {
        "trigger": "createEntityReference()",
        "contents": "createEntityReference(${0:name})"
    }, {
        "trigger": "createProcessingInstruction()",
        "contents": "createProcessingInstruction(${0:target},${1:data})"
    }, {
        "trigger": "createTextNode()",
        "contents": "createTextNode(${0:data})"
    }, {
        "trigger": "getDoctype()",
        "contents": "getDoctype()"
    }, {
        "trigger": "getDocumentElement()",
        "contents": "getDocumentElement()"
    }, {
        "trigger": "getElementById()",
        "contents": "getElementById(${0:elementId})"
    }, {
        "trigger": "getElementsByTagName()",
        "contents": "getElementsByTagName(${0:tagname})"
    }, {
        "trigger": "getElementsByTagNameNS()",
        "contents": "getElementsByTagNameNS(${0:namespaceURI},${1:localname})"
    }, {
        "trigger": "getImplementation()",
        "contents": "getImplementation()"
    }, {
        "trigger": "importNode()",
        "contents": "importNode(${0:importedNode},${1:deep})"
    }, "ForwardGeocodeResponse", "AcceptedCallbackArgs", "inbound", "CloudEventsResponse", "Ti.Network.HTTPClient", "Ti.Network.HTTPClient.DONE", "Ti.Network.HTTPClient.HEADERS_RECEIVED", "Ti.Network.HTTPClient.LOADING", "Ti.Network.HTTPClient.OPENED", "Ti.Network.HTTPClient.UNSENT", "allResponseHeaders", "autoEncodeUrl", "autoRedirect", "cache", "connectionType", "enableKeepAlive", "ondatastream", "onerror", "onload", "onreadystatechange", "onsendstream", "password", "readyState", "responseData", "responseText", "responseXML", "statusText", "tlsVersion", "username", "validatesSecureCertificate", "withCredentials", {
        "trigger": "abort()",
        "contents": "abort()"
    }, {
        "trigger": "addAuthFactory()",
        "contents": "addAuthFactory(${0:scheme},${1:factory})"
    }, {
        "trigger": "clearCookies()",
        "contents": "clearCookies(${0:host})"
    }, {
        "trigger": "getAllResponseHeaders()",
        "contents": "getAllResponseHeaders()"
    }, {
        "trigger": "getAutoEncodeUrl()",
        "contents": "getAutoEncodeUrl()"
    }, {
        "trigger": "getAutoRedirect()",
        "contents": "getAutoRedirect()"
    }, {
        "trigger": "getCache()",
        "contents": "getCache()"
    }, {
        "trigger": "getConnectionType()",
        "contents": "getConnectionType()"
    }, {
        "trigger": "getEnableKeepAlive()",
        "contents": "getEnableKeepAlive()"
    }, {
        "trigger": "getOndatastream()",
        "contents": "getOndatastream()"
    }, {
        "trigger": "getOnerror()",
        "contents": "getOnerror()"
    }, {
        "trigger": "getOnload()",
        "contents": "getOnload()"
    }, {
        "trigger": "getOnreadystatechange()",
        "contents": "getOnreadystatechange()"
    }, {
        "trigger": "getOnsendstream()",
        "contents": "getOnsendstream()"
    }, {
        "trigger": "getPassword()",
        "contents": "getPassword()"
    }, {
        "trigger": "getReadyState()",
        "contents": "getReadyState()"
    }, {
        "trigger": "getResponseData()",
        "contents": "getResponseData()"
    }, {
        "trigger": "getResponseHeader()",
        "contents": "getResponseHeader(${0:name})"
    }, {
        "trigger": "getResponseText()",
        "contents": "getResponseText()"
    }, {
        "trigger": "getResponseXML()",
        "contents": "getResponseXML()"
    }, {
        "trigger": "getStatusText()",
        "contents": "getStatusText()"
    }, {
        "trigger": "getTlsVersion()",
        "contents": "getTlsVersion()"
    }, {
        "trigger": "getUsername()",
        "contents": "getUsername()"
    }, {
        "trigger": "getValidatesSecureCertificate()",
        "contents": "getValidatesSecureCertificate()"
    }, {
        "trigger": "getWithCredentials()",
        "contents": "getWithCredentials()"
    }, {
        "trigger": "setAutoEncodeUrl()",
        "contents": "setAutoEncodeUrl(${0:autoEncodeUrl})"
    }, {
        "trigger": "setAutoRedirect()",
        "contents": "setAutoRedirect(${0:autoRedirect})"
    }, {
        "trigger": "setCache()",
        "contents": "setCache(${0:cache})"
    }, {
        "trigger": "setEnableKeepAlive()",
        "contents": "setEnableKeepAlive(${0:enableKeepAlive})"
    }, {
        "trigger": "setFile()",
        "contents": "setFile(${0:file})"
    }, {
        "trigger": "setOndatastream()",
        "contents": "setOndatastream(${0:ondatastream})"
    }, {
        "trigger": "setOnerror()",
        "contents": "setOnerror(${0:onerror})"
    }, {
        "trigger": "setOnload()",
        "contents": "setOnload(${0:onload})"
    }, {
        "trigger": "setOnreadystatechange()",
        "contents": "setOnreadystatechange(${0:onreadystatechange})"
    }, {
        "trigger": "setOnsendstream()",
        "contents": "setOnsendstream(${0:onsendstream})"
    }, {
        "trigger": "setPassword()",
        "contents": "setPassword(${0:password})"
    }, {
        "trigger": "setRequestHeader()",
        "contents": "setRequestHeader(${0:name},${1:value})"
    }, {
        "trigger": "setTlsVersion()",
        "contents": "setTlsVersion(${0:tlsVersion})"
    }, {
        "trigger": "setUsername()",
        "contents": "setUsername(${0:username})"
    }, {
        "trigger": "setValidatesSecureCertificate()",
        "contents": "setValidatesSecureCertificate(${0:validatesSecureCertificate})"
    }, {
        "trigger": "setWithCredentials()",
        "contents": "setWithCredentials(${0:withCredentials})"
    }, "Ti.XML.NamedNodeMap", {
        "trigger": "getNamedItem()",
        "contents": "getNamedItem(${0:name})"
    }, {
        "trigger": "getNamedItemNS()",
        "contents": "getNamedItemNS(${0:namespaceURI},${1:localName})"
    }, {
        "trigger": "removeNamedItem()",
        "contents": "removeNamedItem(${0:name})"
    }, {
        "trigger": "removeNamedItemNS()",
        "contents": "removeNamedItemNS(${0:namespaceURI},${1:localName})"
    }, {
        "trigger": "setNamedItem()",
        "contents": "setNamedItem(${0:node})"
    }, {
        "trigger": "setNamedItemNS()",
        "contents": "setNamedItemNS(${0:node})"
    }, "Ti.UI.Picker", "columns", "countDownDuration", "format24", "locale", "maxDate", "minDate", "minuteInterval", "selectionIndicator", "useSpinner", "visibleItems", {
        "trigger": "getColumns()",
        "contents": "getColumns()"
    }, {
        "trigger": "getCountDownDuration()",
        "contents": "getCountDownDuration()"
    }, {
        "trigger": "getFormat24()",
        "contents": "getFormat24()"
    }, {
        "trigger": "getLocale()",
        "contents": "getLocale()"
    }, {
        "trigger": "getMaxDate()",
        "contents": "getMaxDate()"
    }, {
        "trigger": "getMinDate()",
        "contents": "getMinDate()"
    }, {
        "trigger": "getMinuteInterval()",
        "contents": "getMinuteInterval()"
    }, {
        "trigger": "getSelectionIndicator()",
        "contents": "getSelectionIndicator()"
    }, {
        "trigger": "getUseSpinner()",
        "contents": "getUseSpinner()"
    }, {
        "trigger": "getVisibleItems()",
        "contents": "getVisibleItems()"
    }, {
        "trigger": "reloadColumn()",
        "contents": "reloadColumn(${0:column})"
    }, {
        "trigger": "setColumns()",
        "contents": "setColumns(${0:columns})"
    }, {
        "trigger": "setCountDownDuration()",
        "contents": "setCountDownDuration(${0:countDownDuration})"
    }, {
        "trigger": "setFormat24()",
        "contents": "setFormat24(${0:format24})"
    }, {
        "trigger": "setLocale()",
        "contents": "setLocale(${0:locale})"
    }, {
        "trigger": "setMaxDate()",
        "contents": "setMaxDate(${0:maxDate})"
    }, {
        "trigger": "setMinDate()",
        "contents": "setMinDate(${0:minDate})"
    }, {
        "trigger": "setMinuteInterval()",
        "contents": "setMinuteInterval(${0:minuteInterval})"
    }, {
        "trigger": "setSelectionIndicator()",
        "contents": "setSelectionIndicator(${0:selectionIndicator})"
    }, {
        "trigger": "setUseSpinner()",
        "contents": "setUseSpinner(${0:useSpinner})"
    }, {
        "trigger": "setVisibleItems()",
        "contents": "setVisibleItems(${0:visibleItems})"
    }, {
        "trigger": "showDatePickerDialog()",
        "contents": "showDatePickerDialog(${0:dictObj})"
    }, {
        "trigger": "showTimePickerDialog()",
        "contents": "showTimePickerDialog(${0:dictObj})"
    }, "Ti.XML", {
        "trigger": "parseString()",
        "contents": "parseString(${0:xml})"
    }, {
        "trigger": "serializeToString()",
        "contents": "serializeToString(${0:node})"
    }, "ContactsAuthorizationResponse", "MovieSize", "Ti.UI.iPhone.AnimationStyle", "Ti.UI.iPhone.AnimationStyle.CURL_DOWN", "Ti.UI.iPhone.AnimationStyle.CURL_UP", "Ti.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT", "Ti.UI.iPhone.AnimationStyle.FLIP_FROM_RIGHT", "Ti.Cloud.KeyValues", {
        "trigger": "get()",
        "contents": "get(${0:parameters},${1:callback})"
    }, {
        "trigger": "increment()",
        "contents": "increment(${0:parameters},${1:callback})"
    }, {
        "trigger": "set()",
        "contents": "set(${0:parameters},${1:callback})"
    }, "ConnectedCallbackArgs", "CloudMessagesResponse", "messages", "Ti.UI.iPhone.SystemButtonStyle", "Ti.UI.iPhone.SystemButtonStyle.BORDERED", "NotificationParams", "alertAction", "alertBody", "alertLaunchImage", "date", "timezone", "userInfo", "SuccessResponse", "Ti.UI.TableView", "allowsSelectionDuringEditing", "editing", "filterAttribute", "filterCaseInsensitive", "headerPullView", "hideSearchOnSelection", "maxRowHeight", "minRowHeight", "moving", "rowHeight", "searchAsChild", "searchHidden", "separatorColor", "separatorStyle", {
        "trigger": "appendRow()",
        "contents": "appendRow(${0:row},${1:animation})"
    }, {
        "trigger": "deleteRow()",
        "contents": "deleteRow(${0:row},${1:animation})"
    }, {
        "trigger": "deleteSection()",
        "contents": "deleteSection(${0:section},${1:animation})"
    }, {
        "trigger": "deselectRow()",
        "contents": "deselectRow(${0:row})"
    }, {
        "trigger": "getAllowsSelection()",
        "contents": "getAllowsSelection()"
    }, {
        "trigger": "getAllowsSelectionDuringEditing()",
        "contents": "getAllowsSelectionDuringEditing()"
    }, {
        "trigger": "getEditing()",
        "contents": "getEditing()"
    }, {
        "trigger": "getFilterAttribute()",
        "contents": "getFilterAttribute()"
    }, {
        "trigger": "getFilterCaseInsensitive()",
        "contents": "getFilterCaseInsensitive()"
    }, {
        "trigger": "getHeaderPullView()",
        "contents": "getHeaderPullView()"
    }, {
        "trigger": "getHideSearchOnSelection()",
        "contents": "getHideSearchOnSelection()"
    }, {
        "trigger": "getMaxRowHeight()",
        "contents": "getMaxRowHeight()"
    }, {
        "trigger": "getMinRowHeight()",
        "contents": "getMinRowHeight()"
    }, {
        "trigger": "getMoving()",
        "contents": "getMoving()"
    }, {
        "trigger": "getRowHeight()",
        "contents": "getRowHeight()"
    }, {
        "trigger": "getSearch()",
        "contents": "getSearch()"
    }, {
        "trigger": "getSearchAsChild()",
        "contents": "getSearchAsChild()"
    }, {
        "trigger": "getSearchHidden()",
        "contents": "getSearchHidden()"
    }, {
        "trigger": "getSeparatorColor()",
        "contents": "getSeparatorColor()"
    }, {
        "trigger": "getSeparatorStyle()",
        "contents": "getSeparatorStyle()"
    }, {
        "trigger": "insertRowAfter()",
        "contents": "insertRowAfter(${0:index},${1:row},${2:animation})"
    }, {
        "trigger": "insertRowBefore()",
        "contents": "insertRowBefore(${0:index},${1:row},${2:animation})"
    }, {
        "trigger": "insertSectionAfter()",
        "contents": "insertSectionAfter(${0:index},${1:section},${2:animation})"
    }, {
        "trigger": "insertSectionBefore()",
        "contents": "insertSectionBefore(${0:index},${1:section},${2:animation})"
    }, {
        "trigger": "scrollToIndex()",
        "contents": "scrollToIndex(${0:index},${1:animation})"
    }, {
        "trigger": "scrollToTop()",
        "contents": "scrollToTop(${0:top},${1:animation})"
    }, {
        "trigger": "selectRow()",
        "contents": "selectRow(${0:row})"
    }, {
        "trigger": "setAllowsSelection()",
        "contents": "setAllowsSelection(${0:allowsSelection})"
    }, {
        "trigger": "setAllowsSelectionDuringEditing()",
        "contents": "setAllowsSelectionDuringEditing(${0:allowsSelectionDuringEditing})"
    }, {
        "trigger": "setContentInsets()",
        "contents": "setContentInsets(${0:edgeInsets},${1:animated})"
    }, {
        "trigger": "setEditing()",
        "contents": "setEditing(${0:editing})"
    }, {
        "trigger": "setFilterAttribute()",
        "contents": "setFilterAttribute(${0:filterAttribute})"
    }, {
        "trigger": "setFilterCaseInsensitive()",
        "contents": "setFilterCaseInsensitive(${0:filterCaseInsensitive})"
    }, {
        "trigger": "setHeaderPullView()",
        "contents": "setHeaderPullView(${0:view})"
    }, {
        "trigger": "setHideSearchOnSelection()",
        "contents": "setHideSearchOnSelection(${0:hideSearchOnSelection})"
    }, {
        "trigger": "setMaxRowHeight()",
        "contents": "setMaxRowHeight(${0:maxRowHeight})"
    }, {
        "trigger": "setMinRowHeight()",
        "contents": "setMinRowHeight(${0:minRowHeight})"
    }, {
        "trigger": "setMoving()",
        "contents": "setMoving(${0:moving})"
    }, {
        "trigger": "setRowHeight()",
        "contents": "setRowHeight(${0:rowHeight})"
    }, {
        "trigger": "setSearch()",
        "contents": "setSearch(${0:search})"
    }, {
        "trigger": "setSearchAsChild()",
        "contents": "setSearchAsChild(${0:searchAsChild})"
    }, {
        "trigger": "setSearchHidden()",
        "contents": "setSearchHidden(${0:searchHidden})"
    }, {
        "trigger": "setSeparatorColor()",
        "contents": "setSeparatorColor(${0:separatorColor})"
    }, {
        "trigger": "setSeparatorStyle()",
        "contents": "setSeparatorStyle(${0:separatorStyle})"
    }, {
        "trigger": "updateRow()",
        "contents": "updateRow(${0:index},${1:row},${2:animation})"
    }, {
        "trigger": "updateSection()",
        "contents": "updateSection(${0:index},${1:section},${2:animation})"
    }, "Ti.Platform", "Ti.Platform.BATTERY_STATE_CHARGING", "Ti.Platform.BATTERY_STATE_FULL", "Ti.Platform.BATTERY_STATE_UNKNOWN", "Ti.Platform.BATTERY_STATE_UNPLUGGED", "architecture", "availableMemory", "batteryLevel", "batteryMonitoring", "batteryState", "displayCaps", "macaddress", "manufacturer", "model", "netmask", "osname", "ostype", "processorCount", "runtime", {
        "trigger": "canOpenURL()",
        "contents": "canOpenURL(${0:url})"
    }, {
        "trigger": "createUUID()",
        "contents": "createUUID()"
    }, {
        "trigger": "getAddress()",
        "contents": "getAddress()"
    }, {
        "trigger": "getArchitecture()",
        "contents": "getArchitecture()"
    }, {
        "trigger": "getAvailableMemory()",
        "contents": "getAvailableMemory()"
    }, {
        "trigger": "getBatteryLevel()",
        "contents": "getBatteryLevel()"
    }, {
        "trigger": "getBatteryMonitoring()",
        "contents": "getBatteryMonitoring()"
    }, {
        "trigger": "getBatteryState()",
        "contents": "getBatteryState()"
    }, {
        "trigger": "getDisplayCaps()",
        "contents": "getDisplayCaps()"
    }, {
        "trigger": "getMacaddress()",
        "contents": "getMacaddress()"
    }, {
        "trigger": "getManufacturer()",
        "contents": "getManufacturer()"
    }, {
        "trigger": "getModel()",
        "contents": "getModel()"
    }, {
        "trigger": "getNetmask()",
        "contents": "getNetmask()"
    }, {
        "trigger": "getOsname()",
        "contents": "getOsname()"
    }, {
        "trigger": "getOstype()",
        "contents": "getOstype()"
    }, {
        "trigger": "getProcessorCount()",
        "contents": "getProcessorCount()"
    }, {
        "trigger": "getRuntime()",
        "contents": "getRuntime()"
    }, {
        "trigger": "is24HourTimeFormat()",
        "contents": "is24HourTimeFormat()"
    }, {
        "trigger": "openURL()",
        "contents": "openURL(${0:url})"
    }, {
        "trigger": "setBatteryMonitoring()",
        "contents": "setBatteryMonitoring(${0:batteryMonitoring})"
    }, "Ti.UI.iPhone.StatusBar", "Ti.UI.iPhone.StatusBar.ANIMATION_STYLE_FADE", "Ti.UI.iPhone.StatusBar.ANIMATION_STYLE_NONE", "Ti.UI.iPhone.StatusBar.ANIMATION_STYLE_SLIDE", "Ti.UI.iPhone.StatusBar.GREY", "Ti.UI.iPhone.StatusBar.OPAQUE_BLACK", "Ti.UI.iPhone.StatusBar.TRANSLUCENT_BLACK", "Ti.UI.WebView", "hideLoadIndicator", "loading", "pluginState", "scalesPageToFit", "showScrollbars", "willHandleTouches", {
        "trigger": "canGoBack()",
        "contents": "canGoBack()"
    }, {
        "trigger": "canGoForward()",
        "contents": "canGoForward()"
    }, {
        "trigger": "evalJS()",
        "contents": "evalJS(${0:code})"
    }, {
        "trigger": "getHideLoadIndicator()",
        "contents": "getHideLoadIndicator()"
    }, {
        "trigger": "getLoading()",
        "contents": "getLoading()"
    }, {
        "trigger": "getPluginState()",
        "contents": "getPluginState()"
    }, {
        "trigger": "getScalesPageToFit()",
        "contents": "getScalesPageToFit()"
    }, {
        "trigger": "getShowScrollbars()",
        "contents": "getShowScrollbars()"
    }, {
        "trigger": "getWillHandleTouches()",
        "contents": "getWillHandleTouches()"
    }, {
        "trigger": "goBack()",
        "contents": "goBack()"
    }, {
        "trigger": "goForward()",
        "contents": "goForward()"
    }, {
        "trigger": "reload()",
        "contents": "reload()"
    }, {
        "trigger": "repaint()",
        "contents": "repaint()"
    }, {
        "trigger": "setBasicAuthentication()",
        "contents": "setBasicAuthentication(${0:username},${1:password})"
    }, {
        "trigger": "setHideLoadIndicator()",
        "contents": "setHideLoadIndicator(${0:hideLoadIndicator})"
    }, {
        "trigger": "setLoading()",
        "contents": "setLoading(${0:loading})"
    }, {
        "trigger": "setPluginState()",
        "contents": "setPluginState(${0:pluginState})"
    }, {
        "trigger": "setScalesPageToFit()",
        "contents": "setScalesPageToFit(${0:scalesPageToFit})"
    }, {
        "trigger": "setShowScrollbars()",
        "contents": "setShowScrollbars(${0:showScrollbars})"
    }, {
        "trigger": "setWillHandleTouches()",
        "contents": "setWillHandleTouches(${0:willHandleTouches})"
    }, {
        "trigger": "stopLoading()",
        "contents": "stopLoading(${0:hardStop})"
    }, "Ti.Media", "Ti.Media.AUDIO_FILEFORMAT_3GP2", "Ti.Media.AUDIO_FILEFORMAT_3GPP", "Ti.Media.AUDIO_FILEFORMAT_AIFF", "Ti.Media.AUDIO_FILEFORMAT_AMR", "Ti.Media.AUDIO_FILEFORMAT_CAF", "Ti.Media.AUDIO_FILEFORMAT_MP3", "Ti.Media.AUDIO_FILEFORMAT_MP4", "Ti.Media.AUDIO_FILEFORMAT_MP4A", "Ti.Media.AUDIO_FILEFORMAT_WAVE", "Ti.Media.AUDIO_FORMAT_AAC", "Ti.Media.AUDIO_FORMAT_ALAW", "Ti.Media.AUDIO_FORMAT_APPLE_LOSSLESS", "Ti.Media.AUDIO_FORMAT_ILBC", "Ti.Media.AUDIO_FORMAT_IMA4", "Ti.Media.AUDIO_FORMAT_LINEAR_PCM", "Ti.Media.AUDIO_FORMAT_ULAW", "Ti.Media.AUDIO_HEADPHONES", "Ti.Media.AUDIO_HEADPHONES_AND_MIC", "Ti.Media.AUDIO_HEADSET_INOUT", "Ti.Media.AUDIO_LINEOUT", "Ti.Media.AUDIO_MICROPHONE", "Ti.Media.AUDIO_MUTED", "Ti.Media.AUDIO_RECEIVER_AND_MIC", "Ti.Media.AUDIO_SESSION_MODE_AMBIENT", "Ti.Media.AUDIO_SESSION_MODE_PLAYBACK", "Ti.Media.AUDIO_SESSION_MODE_PLAY_AND_RECORD", "Ti.Media.AUDIO_SESSION_MODE_RECORD", "Ti.Media.AUDIO_SESSION_MODE_SOLO_AMBIENT", "Ti.Media.AUDIO_SPEAKER", "Ti.Media.AUDIO_UNAVAILABLE", "Ti.Media.AUDIO_UNKNOWN", "Ti.Media.DEVICE_BUSY", "Ti.Media.MEDIA_TYPE_PHOTO", "Ti.Media.MEDIA_TYPE_VIDEO", "Ti.Media.MUSIC_MEDIA_GROUP_ALBUM", "Ti.Media.MUSIC_MEDIA_GROUP_ALBUM_ARTIST", "Ti.Media.MUSIC_MEDIA_GROUP_ARTIST", "Ti.Media.MUSIC_MEDIA_GROUP_COMPOSER", "Ti.Media.MUSIC_MEDIA_GROUP_GENRE", "Ti.Media.MUSIC_MEDIA_GROUP_PLAYLIST", "Ti.Media.MUSIC_MEDIA_GROUP_PODCAST_TITLE", "Ti.Media.MUSIC_MEDIA_GROUP_TITLE", "Ti.Media.MUSIC_MEDIA_TYPE_ALL", "Ti.Media.MUSIC_MEDIA_TYPE_ANY_AUDIO", "Ti.Media.MUSIC_MEDIA_TYPE_AUDIOBOOK", "Ti.Media.MUSIC_MEDIA_TYPE_MUSIC", "Ti.Media.MUSIC_MEDIA_TYPE_PODCAST", "Ti.Media.MUSIC_PLAYER_REPEAT_ALL", "Ti.Media.MUSIC_PLAYER_REPEAT_DEFAULT", "Ti.Media.MUSIC_PLAYER_REPEAT_NONE", "Ti.Media.MUSIC_PLAYER_REPEAT_ONE", "Ti.Media.MUSIC_PLAYER_SHUFFLE_ALBUMS", "Ti.Media.MUSIC_PLAYER_SHUFFLE_DEFAULT", "Ti.Media.MUSIC_PLAYER_SHUFFLE_NONE", "Ti.Media.MUSIC_PLAYER_SHUFFLE_SONGS", "Ti.Media.MUSIC_PLAYER_STATE_INTERRUPTED", "Ti.Media.MUSIC_PLAYER_STATE_PAUSED", "Ti.Media.MUSIC_PLAYER_STATE_PLAYING", "Ti.Media.MUSIC_PLAYER_STATE_SEEK_BACKWARD", "Ti.Media.MUSIC_PLAYER_STATE_SEEK_FORWARD", "Ti.Media.MUSIC_PLAYER_STATE_STOPPED", "Ti.Media.NO_CAMERA", "Ti.Media.NO_VIDEO", "Ti.Media.QUALITY_HIGH", "Ti.Media.QUALITY_LOW", "Ti.Media.QUALITY_MEDIUM", "Ti.Media.UNKNOWN_ERROR", "Ti.Media.VIDEO_CONTROL_DEFAULT", "Ti.Media.VIDEO_CONTROL_EMBEDDED", "Ti.Media.VIDEO_CONTROL_FULLSCREEN", "Ti.Media.VIDEO_CONTROL_HIDDEN", "Ti.Media.VIDEO_CONTROL_NONE", "Ti.Media.VIDEO_CONTROL_VOLUME_ONLY", "Ti.Media.VIDEO_FINISH_REASON_PLAYBACK_ENDED", "Ti.Media.VIDEO_FINISH_REASON_PLAYBACK_ERROR", "Ti.Media.VIDEO_FINISH_REASON_USER_EXITED", "Ti.Media.VIDEO_LOAD_STATE_PLAYABLE", "Ti.Media.VIDEO_LOAD_STATE_PLAYTHROUGH_OK", "Ti.Media.VIDEO_LOAD_STATE_STALLED", "Ti.Media.VIDEO_LOAD_STATE_UNKNOWN", "Ti.Media.VIDEO_MEDIA_TYPE_AUDIO", "Ti.Media.VIDEO_MEDIA_TYPE_NONE", "Ti.Media.VIDEO_MEDIA_TYPE_VIDEO", "Ti.Media.VIDEO_PLAYBACK_STATE_INTERRUPTED", "Ti.Media.VIDEO_PLAYBACK_STATE_PAUSED", "Ti.Media.VIDEO_PLAYBACK_STATE_PLAYING", "Ti.Media.VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD", "Ti.Media.VIDEO_PLAYBACK_STATE_SEEKING_FORWARD", "Ti.Media.VIDEO_PLAYBACK_STATE_STOPPED", "Ti.Media.VIDEO_REPEAT_MODE_NONE", "Ti.Media.VIDEO_REPEAT_MODE_ONE", "Ti.Media.VIDEO_SCALING_ASPECT_FILL", "Ti.Media.VIDEO_SCALING_ASPECT_FIT", "Ti.Media.VIDEO_SCALING_MODE_FILL", "Ti.Media.VIDEO_SCALING_NONE", "Ti.Media.VIDEO_SOURCE_TYPE_FILE", "Ti.Media.VIDEO_SOURCE_TYPE_STREAMING", "Ti.Media.VIDEO_SOURCE_TYPE_UNKNOWN", "Ti.Media.VIDEO_TIME_OPTION_EXACT", "Ti.Media.VIDEO_TIME_OPTION_NEAREST_KEYFRAME", "appMusicPlayer", "audioLineType", "audioPlaying", "audioSessionMode", "availableCameraMediaTypes", "availablePhotoGalleryMediaTypes", "availablePhotoMediaTypes", "averageMicrophonePower", "canRecord", "isCameraSupported", "peakMicrophonePower", "systemMusicPlayer", {
        "trigger": "beep()",
        "contents": "beep()"
    }, {
        "trigger": "createAudioPlayer()",
        "contents": "createAudioPlayer(${0:parameters})"
    }, {
        "trigger": "createAudioRecorder()",
        "contents": "createAudioRecorder(${0:parameters})"
    }, {
        "trigger": "createItem()",
        "contents": "createItem(${0:parameters})"
    }, {
        "trigger": "createMusicPlayer()",
        "contents": "createMusicPlayer(${0:parameters})"
    }, {
        "trigger": "createSound()",
        "contents": "createSound(${0:parameters})"
    }, {
        "trigger": "createVideoPlayer()",
        "contents": "createVideoPlayer(${0:parameters})"
    }, {
        "trigger": "getAppMusicPlayer()",
        "contents": "getAppMusicPlayer()"
    }, {
        "trigger": "getAudioLineType()",
        "contents": "getAudioLineType()"
    }, {
        "trigger": "getAudioPlaying()",
        "contents": "getAudioPlaying()"
    }, {
        "trigger": "getAudioSessionMode()",
        "contents": "getAudioSessionMode()"
    }, {
        "trigger": "getAvailableCameraMediaTypes()",
        "contents": "getAvailableCameraMediaTypes()"
    }, {
        "trigger": "getAvailablePhotoGalleryMediaTypes()",
        "contents": "getAvailablePhotoGalleryMediaTypes()"
    }, {
        "trigger": "getAvailablePhotoMediaTypes()",
        "contents": "getAvailablePhotoMediaTypes()"
    }, {
        "trigger": "getAverageMicrophonePower()",
        "contents": "getAverageMicrophonePower()"
    }, {
        "trigger": "getCanRecord()",
        "contents": "getCanRecord()"
    }, {
        "trigger": "getIsCameraSupported()",
        "contents": "getIsCameraSupported()"
    }, {
        "trigger": "getPeakMicrophonePower()",
        "contents": "getPeakMicrophonePower()"
    }, {
        "trigger": "getSystemMusicPlayer()",
        "contents": "getSystemMusicPlayer()"
    }, {
        "trigger": "hideCamera()",
        "contents": "hideCamera()"
    }, {
        "trigger": "hideMusicLibrary()",
        "contents": "hideMusicLibrary()"
    }, {
        "trigger": "isMediaTypeSupported()",
        "contents": "isMediaTypeSupported(${0:source},${1:type})"
    }, {
        "trigger": "openMusicLibrary()",
        "contents": "openMusicLibrary(${0:options})"
    }, {
        "trigger": "openPhotoGallery()",
        "contents": "openPhotoGallery(${0:options})"
    }, {
        "trigger": "previewImage()",
        "contents": "previewImage(${0:options})"
    }, {
        "trigger": "queryMusicLibrary()",
        "contents": "queryMusicLibrary(${0:query})"
    }, {
        "trigger": "setAudioSessionMode()",
        "contents": "setAudioSessionMode(${0:audioSessionMode})"
    }, {
        "trigger": "setAvailableCameraMediaTypes()",
        "contents": "setAvailableCameraMediaTypes(${0:availableCameraMediaTypes})"
    }, {
        "trigger": "setAvailablePhotoGalleryMediaTypes()",
        "contents": "setAvailablePhotoGalleryMediaTypes(${0:availablePhotoGalleryMediaTypes})"
    }, {
        "trigger": "setAvailablePhotoMediaTypes()",
        "contents": "setAvailablePhotoMediaTypes(${0:availablePhotoMediaTypes})"
    }, {
        "trigger": "setAverageMicrophonePower()",
        "contents": "setAverageMicrophonePower(${0:averageMicrophonePower})"
    }, {
        "trigger": "showCamera()",
        "contents": "showCamera(${0:options})"
    }, {
        "trigger": "startMicrophoneMonitor()",
        "contents": "startMicrophoneMonitor()"
    }, {
        "trigger": "stopMicrophoneMonitor()",
        "contents": "stopMicrophoneMonitor()"
    }, {
        "trigger": "takePicture()",
        "contents": "takePicture()"
    }, {
        "trigger": "takeScreenshot()",
        "contents": "takeScreenshot(${0:callback})"
    }, {
        "trigger": "vibrate()",
        "contents": "vibrate(${0:pattern})"
    }, "ImageAsCroppedDict", "Ti.Buffer", {
        "trigger": "clone()",
        "contents": "clone(${0:offset},${1:length})"
    }, {
        "trigger": "fill()",
        "contents": "fill(${0:fillByte},${1:offset},${2:length})"
    }, {
        "trigger": "getByteOrder()",
        "contents": "getByteOrder()"
    }, {
        "trigger": "insert()",
        "contents": "insert(${0:sourceBuffer},${1:offset},${2:sourceOffset},${3:sourceLength})"
    }, {
        "trigger": "setLength()",
        "contents": "setLength(${0:length})"
    }, "Ti.UI.Window", "activity", "windowPixelFormat", {
        "trigger": "getWindowPixelFormat()",
        "contents": "getWindowPixelFormat()"
    }, {
        "trigger": "setActivity()",
        "contents": "setActivity(${0:activity})"
    }, {
        "trigger": "setWindowPixelFormat()",
        "contents": "setWindowPixelFormat(${0:windowPixelFormat})"
    }, "Ti.XML.DocumentType", "entities", "internalSubset", "notations", {
        "trigger": "getEntities()",
        "contents": "getEntities()"
    }, {
        "trigger": "getInternalSubset()",
        "contents": "getInternalSubset()"
    }, {
        "trigger": "getNotations()",
        "contents": "getNotations()"
    }, "Modules", "Ti.Android.Calendar.Alert", "alarmTime", "eventId", {
        "trigger": "getAlarmTime()",
        "contents": "getAlarmTime()"
    }, {
        "trigger": "getEventId()",
        "contents": "getEventId()"
    }, "PreviewImageOptions", "Ti.UI.ListSection", {
        "trigger": "appendItems()",
        "contents": "appendItems(${0:dataItems},${1:animation})"
    }, {
        "trigger": "deleteItemsAt()",
        "contents": "deleteItemsAt(${0:itemIndex},${1:count},${2:animation})"
    }, {
        "trigger": "getItemAt()",
        "contents": "getItemAt(${0:itemIndex})"
    }, {
        "trigger": "insertItemsAt()",
        "contents": "insertItemsAt(${0:itemIndex},${1:dataItems},${2:animation})"
    }, {
        "trigger": "replaceItemsAt()",
        "contents": "replaceItemsAt(${0:index},${1:count},${2:dataItems},${3:animation})"
    }, {
        "trigger": "updateItemAt()",
        "contents": "updateItemAt(${0:index},${1:dataItem},${2:animation})"
    }, "ScreenshotResult", "Ti.Calendar", "Ti.Calendar.AVAILABILITY_BUSY", "Ti.Calendar.AVAILABILITY_FREE", "Ti.Calendar.AVAILABILITY_NOTSUPPORTED", "Ti.Calendar.AVAILABILITY_TENTATIVE", "Ti.Calendar.AVAILABILITY_UNAVAILABLE", "Ti.Calendar.RECURRENCEFREQUENCY_DAILY", "Ti.Calendar.RECURRENCEFREQUENCY_MONTHLY", "Ti.Calendar.RECURRENCEFREQUENCY_WEEKLY", "Ti.Calendar.RECURRENCEFREQUENCY_YEARLY", "Ti.Calendar.SPAN_FUTUREEVENTS", "Ti.Calendar.SPAN_THISEVENT", "Ti.Calendar.STATUS_NONE", "allEditableCalendars", "defaultCalendar", "eventsAuthorization", {
        "trigger": "getAllEditableCalendars()",
        "contents": "getAllEditableCalendars()"
    }, {
        "trigger": "getDefaultCalendar()",
        "contents": "getDefaultCalendar()"
    }, {
        "trigger": "getEventsAuthorization()",
        "contents": "getEventsAuthorization()"
    }, {
        "trigger": "requestEventsAuthorization()",
        "contents": "requestEventsAuthorization(${0:callback})"
    }, "Ti.Platform.DisplayCaps", "density", "dpi", "logicalDensityFactor", "platformHeight", "platformWidth", "xdpi", "ydpi", {
        "trigger": "getDensity()",
        "contents": "getDensity()"
    }, {
        "trigger": "getDpi()",
        "contents": "getDpi()"
    }, {
        "trigger": "getLogicalDensityFactor()",
        "contents": "getLogicalDensityFactor()"
    }, {
        "trigger": "getPlatformHeight()",
        "contents": "getPlatformHeight()"
    }, {
        "trigger": "getPlatformWidth()",
        "contents": "getPlatformWidth()"
    }, {
        "trigger": "getXdpi()",
        "contents": "getXdpi()"
    }, {
        "trigger": "getYdpi()",
        "contents": "getYdpi()"
    }, {
        "trigger": "setDensity()",
        "contents": "setDensity(${0:density})"
    }, {
        "trigger": "setDpi()",
        "contents": "setDpi(${0:dpi})"
    }, {
        "trigger": "setLogicalDensityFactor()",
        "contents": "setLogicalDensityFactor(${0:logicalDensityFactor})"
    }, {
        "trigger": "setPlatformHeight()",
        "contents": "setPlatformHeight(${0:platformHeight})"
    }, {
        "trigger": "setPlatformWidth()",
        "contents": "setPlatformWidth(${0:platformWidth})"
    }, {
        "trigger": "setXdpi()",
        "contents": "setXdpi(${0:xdpi})"
    }, {
        "trigger": "setYdpi()",
        "contents": "setYdpi(${0:ydpi})"
    }, "Ti.UI.iPhone.SystemIcon", "Ti.UI.iPhone.SystemIcon.BOOKMARKS", "Ti.UI.iPhone.SystemIcon.CONTACTS", "Ti.UI.iPhone.SystemIcon.DOWNLOADS", "Ti.UI.iPhone.SystemIcon.FAVORITES", "Ti.UI.iPhone.SystemIcon.FEATURED", "Ti.UI.iPhone.SystemIcon.HISTORY", "Ti.UI.iPhone.SystemIcon.MORE", "Ti.UI.iPhone.SystemIcon.MOST_RECENT", "Ti.UI.iPhone.SystemIcon.MOST_VIEWED", "Ti.UI.iPhone.SystemIcon.RECENTS", "Ti.UI.iPhone.SystemIcon.SEARCH", "Ti.UI.iPhone.SystemIcon.TOP_RATED", "ErrorCallbackArgs", "errorCode", "Ti.Cloud", "useSecure", {
        "trigger": "getDebug()",
        "contents": "getDebug()"
    }, {
        "trigger": "getExpiresIn()",
        "contents": "getExpiresIn()"
    }, {
        "trigger": "getUseSecure()",
        "contents": "getUseSecure()"
    }, {
        "trigger": "hasStoredSession()",
        "contents": "hasStoredSession()"
    }, {
        "trigger": "retrieveStoredSession()",
        "contents": "retrieveStoredSession()"
    }, {
        "trigger": "setDebug()",
        "contents": "setDebug(${0:debug})"
    }, {
        "trigger": "setSessionId()",
        "contents": "setSessionId(${0:sessionId})"
    }, {
        "trigger": "setUseSecure()",
        "contents": "setUseSecure(${0:useSecure})"
    }, "Ti.Calendar.Calendar", "Ti.App.Properties", {
        "trigger": "getBool()",
        "contents": "getBool(${0:property},${1:default})"
    }, {
        "trigger": "getDouble()",
        "contents": "getDouble(${0:property},${1:default})"
    }, {
        "trigger": "getInt()",
        "contents": "getInt(${0:property},${1:default})"
    }, {
        "trigger": "getList()",
        "contents": "getList(${0:property},${1:default})"
    }, {
        "trigger": "getObject()",
        "contents": "getObject(${0:property},${1:default})"
    }, {
        "trigger": "hasProperty()",
        "contents": "hasProperty(${0:property})"
    }, {
        "trigger": "listProperties()",
        "contents": "listProperties()"
    }, {
        "trigger": "removeProperty()",
        "contents": "removeProperty(${0:property})"
    }, {
        "trigger": "setBool()",
        "contents": "setBool(${0:property},${1:value})"
    }, {
        "trigger": "setList()",
        "contents": "setList(${0:property},${1:value})"
    }, {
        "trigger": "setObject()",
        "contents": "setObject(${0:property},${1:value})"
    }, "Ti.UI.iOS.Toolbar", "Ti.XML.Element", "tagName", {
        "trigger": "getAttribute()",
        "contents": "getAttribute(${0:name})"
    }, {
        "trigger": "getAttributeNS()",
        "contents": "getAttributeNS(${0:namespaceURI},${1:localName})"
    }, {
        "trigger": "getAttributeNode()",
        "contents": "getAttributeNode(${0:name})"
    }, {
        "trigger": "getAttributeNodeNS()",
        "contents": "getAttributeNodeNS(${0:namespaceURI},${1:localName})"
    }, {
        "trigger": "getTagName()",
        "contents": "getTagName()"
    }, {
        "trigger": "hasAttribute()",
        "contents": "hasAttribute(${0:name})"
    }, {
        "trigger": "hasAttributeNS()",
        "contents": "hasAttributeNS(${0:namespaceURI},${1:localName})"
    }, {
        "trigger": "removeAttribute()",
        "contents": "removeAttribute(${0:name})"
    }, {
        "trigger": "removeAttributeNS()",
        "contents": "removeAttributeNS(${0:namespaceURI},${1:localName})"
    }, {
        "trigger": "removeAttributeNode()",
        "contents": "removeAttributeNode(${0:oldAttr})"
    }, {
        "trigger": "setAttribute()",
        "contents": "setAttribute(${0:name},${1:value})"
    }, {
        "trigger": "setAttributeNS()",
        "contents": "setAttributeNS(${0:namespaceURI},${1:qualifiedName},${2:value})"
    }, {
        "trigger": "setAttributeNode()",
        "contents": "setAttributeNode(${0:newAttr})"
    }, {
        "trigger": "setAttributeNodeNS()",
        "contents": "setAttributeNodeNS(${0:newAttr})"
    }, "Ti.UI.iPhone.ScrollIndicatorStyle", "Ti.UI.iPhone.ScrollIndicatorStyle.BLACK", "Ti.UI.iPhone.ScrollIndicatorStyle.WHITE", "Ti.Media.MusicPlayer", "nowPlaying", "shuffleMode", {
        "trigger": "getNowPlaying()",
        "contents": "getNowPlaying()"
    }, {
        "trigger": "getShuffleMode()",
        "contents": "getShuffleMode()"
    }, {
        "trigger": "seekBackward()",
        "contents": "seekBackward()"
    }, {
        "trigger": "seekForward()",
        "contents": "seekForward()"
    }, {
        "trigger": "setQueue()",
        "contents": "setQueue(${0:queue})"
    }, {
        "trigger": "setShuffleMode()",
        "contents": "setShuffleMode(${0:shuffleMode})"
    }, {
        "trigger": "skipToBeginning()",
        "contents": "skipToBeginning()"
    }, {
        "trigger": "skipToNext()",
        "contents": "skipToNext()"
    }, {
        "trigger": "skipToPrevious()",
        "contents": "skipToPrevious()"
    }, {
        "trigger": "stopSeeking()",
        "contents": "stopSeeking()"
    }, "Ti.UI.ActivityIndicator", "indicatorColor", "indicatorDiameter", {
        "trigger": "getIndicatorColor()",
        "contents": "getIndicatorColor()"
    }, {
        "trigger": "getIndicatorDiameter()",
        "contents": "getIndicatorDiameter()"
    }, {
        "trigger": "setIndicatorColor()",
        "contents": "setIndicatorColor(${0:indicatorColor})"
    }, {
        "trigger": "setIndicatorDiameter()",
        "contents": "setIndicatorDiameter(${0:indicatorDiameter})"
    }, "Ti.XML.CharacterData", "CloudObjectsResponse", "classname", "CloudPushNotificationSuccessArg", "ServiceIntentOptions", "startMode", "Ti.Gesture", "landscape", "portrait", {
        "trigger": "getLandscape()",
        "contents": "getLandscape()"
    }, {
        "trigger": "getPortrait()",
        "contents": "getPortrait()"
    }, {
        "trigger": "isLandscape()",
        "contents": "isLandscape()"
    }, {
        "trigger": "isPortrait()",
        "contents": "isPortrait()"
    }, "Ti.Contacts.Tizen.Group", {
        "trigger": "members()",
        "contents": "members(${0:group},${1:successCallback},${2:errorCallback})"
    }, {
        "trigger": "sortedMembers()",
        "contents": "sortedMembers(${0:sortBy},${1:group},${2:successCallback},${3:errorCallback})"
    }, "Ti.UI.iPhone.TableViewScrollPosition", "Ti.Contacts.Person", "birthday", "created", "department", "email", "firstName", "firstPhonetic", "fullName", "instantMessage", "jobTitle", "kind", "lastName", "lastPhonetic", "middleName", "middlePhonetic", "modified", "nickname", "note", "organization", "phone", "recordId", "relatedNames", "suffix", {
        "trigger": "getBirthday()",
        "contents": "getBirthday()"
    }, {
        "trigger": "getCreated()",
        "contents": "getCreated()"
    }, {
        "trigger": "getDate()",
        "contents": "getDate()"
    }, {
        "trigger": "getDepartment()",
        "contents": "getDepartment()"
    }, {
        "trigger": "getEmail()",
        "contents": "getEmail()"
    }, {
        "trigger": "getFirstName()",
        "contents": "getFirstName()"
    }, {
        "trigger": "getFirstPhonetic()",
        "contents": "getFirstPhonetic()"
    }, {
        "trigger": "getFullName()",
        "contents": "getFullName()"
    }, {
        "trigger": "getInstantMessage()",
        "contents": "getInstantMessage()"
    }, {
        "trigger": "getJobTitle()",
        "contents": "getJobTitle()"
    }, {
        "trigger": "getKind()",
        "contents": "getKind()"
    }, {
        "trigger": "getLastName()",
        "contents": "getLastName()"
    }, {
        "trigger": "getLastPhonetic()",
        "contents": "getLastPhonetic()"
    }, {
        "trigger": "getMiddleName()",
        "contents": "getMiddleName()"
    }, {
        "trigger": "getMiddlePhonetic()",
        "contents": "getMiddlePhonetic()"
    }, {
        "trigger": "getModified()",
        "contents": "getModified()"
    }, {
        "trigger": "getNickname()",
        "contents": "getNickname()"
    }, {
        "trigger": "getNote()",
        "contents": "getNote()"
    }, {
        "trigger": "getOrganization()",
        "contents": "getOrganization()"
    }, {
        "trigger": "getPhone()",
        "contents": "getPhone()"
    }, {
        "trigger": "getRecordId()",
        "contents": "getRecordId()"
    }, {
        "trigger": "getRelatedNames()",
        "contents": "getRelatedNames()"
    }, {
        "trigger": "getSuffix()",
        "contents": "getSuffix()"
    }, {
        "trigger": "setAddress()",
        "contents": "setAddress(${0:address})"
    }, {
        "trigger": "setBirthday()",
        "contents": "setBirthday(${0:birthday})"
    }, {
        "trigger": "setDate()",
        "contents": "setDate(${0:date})"
    }, {
        "trigger": "setDepartment()",
        "contents": "setDepartment(${0:department})"
    }, {
        "trigger": "setEmail()",
        "contents": "setEmail(${0:email})"
    }, {
        "trigger": "setFirstName()",
        "contents": "setFirstName(${0:firstName})"
    }, {
        "trigger": "setFirstPhonetic()",
        "contents": "setFirstPhonetic(${0:firstPhonetic})"
    }, {
        "trigger": "setInstantMessage()",
        "contents": "setInstantMessage(${0:instantMessage})"
    }, {
        "trigger": "setJobTitle()",
        "contents": "setJobTitle(${0:jobTitle})"
    }, {
        "trigger": "setKind()",
        "contents": "setKind(${0:kind})"
    }, {
        "trigger": "setLastName()",
        "contents": "setLastName(${0:lastName})"
    }, {
        "trigger": "setLastPhonetic()",
        "contents": "setLastPhonetic(${0:lastPhonetic})"
    }, {
        "trigger": "setMiddleName()",
        "contents": "setMiddleName(${0:middleName})"
    }, {
        "trigger": "setMiddlePhonetic()",
        "contents": "setMiddlePhonetic(${0:middlePhonetic})"
    }, {
        "trigger": "setNickname()",
        "contents": "setNickname(${0:nickname})"
    }, {
        "trigger": "setNote()",
        "contents": "setNote(${0:note})"
    }, {
        "trigger": "setOrganization()",
        "contents": "setOrganization(${0:organization})"
    }, {
        "trigger": "setPhone()",
        "contents": "setPhone(${0:phone})"
    }, {
        "trigger": "setRecordId()",
        "contents": "setRecordId(${0:recordId})"
    }, {
        "trigger": "setRelatedNames()",
        "contents": "setRelatedNames(${0:relatedNames})"
    }, "EncodeStringDict", "destPosition", "sourceLength", "sourcePosition", "Ti.UI.iOS.AdView", "adSize", {
        "trigger": "cancelAction()",
        "contents": "cancelAction()"
    }, {
        "trigger": "getAdSize()",
        "contents": "getAdSize()"
    }, {
        "trigger": "setAdSize()",
        "contents": "setAdSize(${0:adSize})"
    }, "Ti.UI.Android", "Ti.UI.Android.LINKIFY_ALL", "Ti.UI.Android.LINKIFY_EMAIL_ADDRESSES", "Ti.UI.Android.LINKIFY_MAP_ADDRESSES", "Ti.UI.Android.LINKIFY_PHONE_NUMBERS", "Ti.UI.Android.LINKIFY_WEB_URLS", "Ti.UI.Android.OVER_SCROLL_ALWAYS", "Ti.UI.Android.OVER_SCROLL_IF_CONTENT_SCROLLS", "Ti.UI.Android.OVER_SCROLL_NEVER", "Ti.UI.Android.PIXEL_FORMAT_A_8", "Ti.UI.Android.PIXEL_FORMAT_LA_88", "Ti.UI.Android.PIXEL_FORMAT_L_8", "Ti.UI.Android.PIXEL_FORMAT_OPAQUE", "Ti.UI.Android.PIXEL_FORMAT_RGBA_4444", "Ti.UI.Android.PIXEL_FORMAT_RGBA_5551", "Ti.UI.Android.PIXEL_FORMAT_RGBA_8888", "Ti.UI.Android.PIXEL_FORMAT_RGBX_8888", "Ti.UI.Android.PIXEL_FORMAT_RGB_332", "Ti.UI.Android.PIXEL_FORMAT_RGB_565", "Ti.UI.Android.PIXEL_FORMAT_RGB_888", "Ti.UI.Android.PIXEL_FORMAT_TRANSLUCENT", "Ti.UI.Android.PIXEL_FORMAT_TRANSPARENT", "Ti.UI.Android.PIXEL_FORMAT_UNKNOWN", "Ti.UI.Android.PROGRESS_INDICATOR_DETERMINANT", "Ti.UI.Android.PROGRESS_INDICATOR_DIALOG", "Ti.UI.Android.PROGRESS_INDICATOR_INDETERMINANT", "Ti.UI.Android.PROGRESS_INDICATOR_STATUS_BAR", "Ti.UI.Android.SOFT_INPUT_ADJUST_PAN", "Ti.UI.Android.SOFT_INPUT_ADJUST_RESIZE", "Ti.UI.Android.SOFT_INPUT_ADJUST_UNSPECIFIED", "Ti.UI.Android.SOFT_INPUT_STATE_ALWAYS_HIDDEN", "Ti.UI.Android.SOFT_INPUT_STATE_ALWAYS_VISIBLE", "Ti.UI.Android.SOFT_INPUT_STATE_HIDDEN", "Ti.UI.Android.SOFT_INPUT_STATE_UNSPECIFIED", "Ti.UI.Android.SOFT_INPUT_STATE_VISIBLE", "Ti.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS", "Ti.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS", "Ti.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS", "Ti.UI.Android.SWITCH_STYLE_CHECKBOX", "Ti.UI.Android.SWITCH_STYLE_TOGGLEBUTTON", "Ti.UI.Android.WEBVIEW_PLUGINS_OFF", "Ti.UI.Android.WEBVIEW_PLUGINS_ON", "Ti.UI.Android.WEBVIEW_PLUGINS_ON_DEMAND", {
        "trigger": "createProgressIndicator()",
        "contents": "createProgressIndicator(${0:parameters})"
    }, {
        "trigger": "createSearchView()",
        "contents": "createSearchView(${0:parameters})"
    }, {
        "trigger": "hideSoftKeyboard()",
        "contents": "hideSoftKeyboard()"
    }, {
        "trigger": "openPreferences()",
        "contents": "openPreferences()"
    }, "Ti.Map", "Ti.Map.ANNOTATION_DRAG_STATE_CANCEL", "Ti.Map.ANNOTATION_DRAG_STATE_DRAG", "Ti.Map.ANNOTATION_DRAG_STATE_END", "Ti.Map.ANNOTATION_DRAG_STATE_NONE", "Ti.Map.ANNOTATION_DRAG_STATE_START", "Ti.Map.ANNOTATION_GREEN", "Ti.Map.ANNOTATION_PURPLE", "Ti.Map.ANNOTATION_RED", "Ti.Map.HYBRID_TYPE", "Ti.Map.SATELLITE_TYPE", "Ti.Map.STANDARD_TYPE", "Ti.Map.TERRAIN_TYPE", {
        "trigger": "createAnnotation()",
        "contents": "createAnnotation(${0:parameters})"
    }, "Ti.XML.Text", "Ti.Contacts.Group", "MediaScannerResponse", "uri", "Ti.UI.iPhone.SystemButton", "Ti.UI.iPhone.SystemButton.ACTION", "Ti.UI.iPhone.SystemButton.ACTIVITY", "Ti.UI.iPhone.SystemButton.ADD", "Ti.UI.iPhone.SystemButton.CAMERA", "Ti.UI.iPhone.SystemButton.CANCEL", "Ti.UI.iPhone.SystemButton.COMPOSE", "Ti.UI.iPhone.SystemButton.CONTACT_ADD", "Ti.UI.iPhone.SystemButton.DISCLOSURE", "Ti.UI.iPhone.SystemButton.EDIT", "Ti.UI.iPhone.SystemButton.FAST_FORWARD", "Ti.UI.iPhone.SystemButton.FIXED_SPACE", "Ti.UI.iPhone.SystemButton.FLEXIBLE_SPACE", "Ti.UI.iPhone.SystemButton.INFO_DARK", "Ti.UI.iPhone.SystemButton.INFO_LIGHT", "Ti.UI.iPhone.SystemButton.ORGANIZE", "Ti.UI.iPhone.SystemButton.PAUSE", "Ti.UI.iPhone.SystemButton.PLAY", "Ti.UI.iPhone.SystemButton.REFRESH", "Ti.UI.iPhone.SystemButton.REPLY", "Ti.UI.iPhone.SystemButton.REWIND", "Ti.UI.iPhone.SystemButton.SAVE", "Ti.UI.iPhone.SystemButton.SPINNER", "Ti.UI.iPhone.SystemButton.STOP", "Ti.UI.iPhone.SystemButton.TRASH", "Ti.Cloud.Users", {
        "trigger": "login()",
        "contents": "login(${0:parameters},${1:callback})"
    }, {
        "trigger": "requestResetPassword()",
        "contents": "requestResetPassword(${0:parameters},${1:callback})"
    }, {
        "trigger": "secureCreate()",
        "contents": "secureCreate(${0:parameters},${1:callback})"
    }, {
        "trigger": "secureLogin()",
        "contents": "secureLogin(${0:parameters},${1:callback})"
    }, {
        "trigger": "secureStatus()",
        "contents": "secureStatus()"
    }, {
        "trigger": "showMe()",
        "contents": "showMe(${0:callback})"
    }, "Ti.UI.DashboardItem", "canDelete", "selectedImage", {
        "trigger": "getCanDelete()",
        "contents": "getCanDelete()"
    }, {
        "trigger": "getSelectedImage()",
        "contents": "getSelectedImage()"
    }, {
        "trigger": "setCanDelete()",
        "contents": "setCanDelete(${0:canDelete})"
    }, {
        "trigger": "setSelectedImage()",
        "contents": "setSelectedImage(${0:selectedImage})"
    }]
}